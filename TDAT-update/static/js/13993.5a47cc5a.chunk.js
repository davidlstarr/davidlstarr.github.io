"use strict";(self.webpackChunkegis_tdat=self.webpackChunkegis_tdat||[]).push([[13993],{13993:(e,t,a)=>{a.r(t),a.d(t,{default:()=>B});var r,o=a(35143),i=(a(35238),a(3825)),l=a(50076),n=a(45802),s=a(77717),u=a(46053),d=(a(81806),a(76460),a(47249),a(85842)),p=a(13312),g=a(76797),c=a(2413),h=a(25515),y=a(65624),b=a(21617),w=a(5682),v=a(16852),M=a(88235);const m=new(a(11164).U)("0/0/0",0,0,0,void 0);let A=r=class extends((0,y.dM)((0,w.j)((0,b.J)(h.A)))){constructor(){super(...arguments),this.tileInfo=M.A.create({spatialReference:p.A.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new g.A(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,p.A.WebMercator),this.spatialReference=p.A.WebMercator}getTileBounds(e,t,a,r){const o=r||(0,c.vt)();return m.level=e,m.row=t,m.col=a,m.extent=o,this.tileInfo.updateTileInfo(m),m.extent=void 0,o}fetchTile(e,t,a){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:o}=r,l=this.getTileUrl(e,t,a),n={responseType:"image",signal:o,query:{...this.refreshParameters}};return(0,i.default)(l??"",n).then((e=>e.data))}async fetchImageBitmapTile(e,t,a){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:l}=o;if(this.fetchTile!==r.prototype.fetchTile){const r=await this.fetchTile(e,t,a,o);return(0,v.C)(r,e,t,a,l)}const n=this.getTileUrl(e,t,a)??"",s={responseType:"blob",signal:l,query:{...this.refreshParameters}},{data:u}=await(0,i.default)(n,s);return(0,v.C)(u,e,t,a,l)}getTileUrl(){throw new l.A("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};(0,o._)([(0,u.MZ)({type:M.A})],A.prototype,"tileInfo",void 0),(0,o._)([(0,u.MZ)({type:["show","hide"]})],A.prototype,"listMode",void 0),(0,o._)([(0,u.MZ)({readOnly:!0,value:"base-tile"})],A.prototype,"type",void 0),(0,o._)([(0,u.MZ)({nonNullable:!0})],A.prototype,"fullExtent",void 0),(0,o._)([(0,u.MZ)()],A.prototype,"spatialReference",void 0),A=r=(0,o._)([(0,d.$)("esri.layers.BaseTileLayer")],A);const f=A;var _=a(11270),T=a(22848),S=a(19247);const U=new n.J({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"});let Z=class extends((0,y.dM)((0,_.q)((0,s.P)(f)))){constructor(e){super(e),this.type="bing-maps",this.tileInfo=new M.A({size:[256,256],dpi:96,origin:new S.A({x:-20037508.342787,y:20037508.342787,spatialReference:p.A.WebMercator}),spatialReference:p.A.WebMercator,lods:[new T.A({level:1,resolution:78271.5169639999,scale:295828763.795777}),new T.A({level:2,resolution:39135.7584820001,scale:147914381.897889}),new T.A({level:3,resolution:19567.8792409999,scale:73957190.948944}),new T.A({level:4,resolution:9783.93962049996,scale:36978595.474472}),new T.A({level:5,resolution:4891.96981024998,scale:18489297.737236}),new T.A({level:6,resolution:2445.98490512499,scale:9244648.868618}),new T.A({level:7,resolution:1222.99245256249,scale:4622324.434309}),new T.A({level:8,resolution:611.49622628138,scale:2311162.217155}),new T.A({level:9,resolution:305.748113140558,scale:1155581.108577}),new T.A({level:10,resolution:152.874056570411,scale:577790.554289}),new T.A({level:11,resolution:76.4370282850732,scale:288895.277144}),new T.A({level:12,resolution:38.2185141425366,scale:144447.638572}),new T.A({level:13,resolution:19.1092570712683,scale:72223.819286}),new T.A({level:14,resolution:9.55462853563415,scale:36111.909643}),new T.A({level:15,resolution:4.77731426794937,scale:18055.954822}),new T.A({level:16,resolution:2.38865713397468,scale:9027.977411}),new T.A({level:17,resolution:1.19432856685505,scale:4513.988705}),new T.A({level:18,resolution:.597164283559817,scale:2256.994353}),new T.A({level:19,resolution:.298582141647617,scale:1128.497176}),new T.A({level:20,resolution:.1492910708238085,scale:564.248588})]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(e){this._set("bingMetadata",e)}get copyright(){return null!=this.bingMetadata?this.bingMetadata.copyright:null}get operationalLayerType(){return U.toJSON(this.style)}get bingLogo(){return null!=this.bingMetadata?this.bingMetadata.brandLogoUri:null}load(e){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then((()=>this._getMetadata()))):this.addResolvingPromise(Promise.reject(new l.A("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(e,t,a){if(!this.loaded||null==this.bingMetadata)return null;const r=this.bingMetadata.resourceSets[0].resources[0],o=r.imageUrlSubdomains[t%r.imageUrlSubdomains.length],i=this._getQuadKey(e,t,a);return r.imageUrl.replace("{subdomain}",o).replace("{quadkey}",i)}async fetchAttributionData(){return this.load().then((()=>null==this.bingMetadata?null:{contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map((e=>({attribution:e.attribution,coverageAreas:e.coverageAreas.map((e=>({zoomMin:e.zoomMin,zoomMax:e.zoomMax,score:1,bbox:[e.bbox[0],e.bbox[1],e.bbox[2],e.bbox[3]]})))})))}))}_getMetadata(){const e={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style];return(0,i.default)(`https://dev.virtualearth.net/REST/v1/Imagery/Metadata/${e}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then((e=>{const t=e.data;if(200!==t.statusCode)throw new l.A("bingmapslayer:getmetadata",t.statusDescription);if(this.bingMetadata=t,0===this.bingMetadata.resourceSets.length)throw new l.A("bingmapslayer:getmetadata","no bing resourcesets");if(0===this.bingMetadata.resourceSets[0].resources.length)throw new l.A("bingmapslayer:getmetadata","no bing resources")})).catch((e=>{throw new l.A("bingmapslayer:getmetadata",e.message)}))}_getPortalBingKey(){return(0,i.default)(this.portalUrl??"",{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then((e=>{if(!e.data.bingKey)throw new l.A("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey})).catch((e=>{throw new l.A("bingmapslayer:getportalbingkey",e.message)}))}_getQuadKey(e,t,a){let r="";for(let o=e;o>0;o--){let e=0;const i=1<<o-1;a&i&&(e+=1),t&i&&(e+=2),r+=e.toString()}return r}};(0,o._)([(0,u.MZ)({json:{read:!1,write:!1},value:null})],Z.prototype,"bingMetadata",null),(0,o._)([(0,u.MZ)({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],Z.prototype,"type",void 0),(0,o._)([(0,u.MZ)({type:M.A})],Z.prototype,"tileInfo",void 0),(0,o._)([(0,u.MZ)({type:String,readOnly:!0,json:{read:!1,write:!1}})],Z.prototype,"copyright",null),(0,o._)([(0,u.MZ)({type:String,json:{write:!1,read:!1}})],Z.prototype,"key",void 0),(0,o._)([(0,u.MZ)({type:U.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:U.read}}})],Z.prototype,"style",void 0),(0,o._)([(0,u.MZ)({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],Z.prototype,"operationalLayerType",null),(0,o._)([(0,u.MZ)({type:String,json:{write:!1,read:!1}})],Z.prototype,"culture",void 0),(0,o._)([(0,u.MZ)({type:String,json:{write:!1,read:!1}})],Z.prototype,"region",void 0),(0,o._)([(0,u.MZ)({type:String,json:{write:!0,read:!0}})],Z.prototype,"portalUrl",void 0),(0,o._)([(0,u.MZ)({type:Boolean,json:{write:!1,read:!1}})],Z.prototype,"hasAttributionData",void 0),(0,o._)([(0,u.MZ)({type:String,readOnly:!0})],Z.prototype,"bingLogo",null),Z=(0,o._)([(0,d.$)("esri.layers.BingMapsLayer")],Z);const B=Z},16852:(e,t,a)=>{a.d(t,{C:()=>l,m:()=>i});var r=a(50076),o=a(50346);async function i(e,t,a){let i;try{i=await createImageBitmap(e)}catch(l){throw new r.A("request:server",`Unable to load ${t}`,{url:t,error:l})}return(0,o.throwIfAborted)(a),i}async function l(e,t,a,i,l){let n;try{n=await createImageBitmap(e)}catch(s){throw new r.A("request:server",`Unable to load tile ${t}/${a}/${i}`,{error:s,level:t,row:a,col:i})}return(0,o.throwIfAborted)(l),n}}}]);
//# sourceMappingURL=13993.5a47cc5a.chunk.js.map