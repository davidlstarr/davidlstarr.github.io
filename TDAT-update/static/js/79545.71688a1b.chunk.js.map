{"version":3,"file":"static/js/79545.71688a1b.chunk.js","mappings":";wIAaO,MAAMA,EACU,uBAGVC,EAAmDC,IAAA,IAAC,MAC/DC,EAAK,OACLC,EAAM,GACNC,EAAE,KACFC,EAAI,QACJC,GACDL,EAAA,OACCM,EAAAA,EAAAA,GAAA,OAAKC,MAAOT,IACVQ,EAAAA,EAAAA,GAAA,qCAAiC,SAASF,KAAMA,EAAMD,GAAIA,EAAIF,MAAOA,EAAOC,OAAQA,GACjFG,GAEC,2FC5BD,MAAMP,EAEF,WCcEU,EAA6C,CAAC,EAQ9CC,EAAyD,CAAC,EAE1DC,EAAmC,CAC9CC,EAAG,GACHC,EAAG,GACHC,EAAG,IAGL,SAASC,EAAcd,GAAgC,IAA/B,KAAEI,EAAI,MAAEH,GAAuBD,EACrD,MAAMe,EAAOL,EAAUT,GACjBe,WAkD0BA,GAChC,MAAMC,GAAqBC,MAAMC,OAAOH,EAAKI,OAAO,KAC9CC,EAAQL,EAAKM,MAAM,KAGzB,GAFmBD,EAAME,OAAS,EAElB,CACd,MAAMC,EAA6B,SAEnCR,EAAOK,EACJI,KAAI,CAACC,EAAMC,IACHD,EAAKE,QAAQJ,GAA4B,SAAkBK,EAAOC,GAGvE,OAFwC,IAAdH,GAA8B,IAAXG,EAGpCD,EAGFA,EAAME,mBAGhBC,KAAK,IAGV,OAAOf,EAAoB,IAAID,IAASA,CAC1C,CA1EeiB,CAAkB7B,GACzB8B,EAA0C,MAAjClB,EAAKI,OAAOJ,EAAKO,OAAS,GAGzC,MAAO,GAFUW,EAASlB,EAAKmB,UAAU,EAAGnB,EAAKO,OAAS,GAAKP,IAE1CD,IAAOmB,EAAS,IAAM,IAC7C,CAkCA,SAASE,EAAuBjC,GAC9B,OAAOK,EAAUL,EACnB,CC3EA,MCgBakC,GAAIC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,+EAeU,mBAQf,aAQK,6DAgFG,EAhElBC,iBAAAA,GACOC,KAAKC,SACRD,KAAKE,kBAAiB,KACpBF,KAAKC,SAAU,EACfD,KAAKG,kBAAkB,IAK7BC,oBAAAA,GACEJ,KAAKK,sBAAsBC,aAC3BN,KAAKK,qBAAuB,KAG9BE,MAAAA,GACE,MAAM,GAAEC,EAAE,QAAEC,EAAO,SAAEC,EAAQ,MAAElD,EAAK,UAAEmD,GAAcX,KAC9CY,GAAMC,EAAAA,EAAAA,GAAcL,GACpBlC,EAAOL,EAAUT,GACjBsD,IAAaH,EACbI,EAAQ,GAAGC,OAAON,GAAY,IACpC,OACE7C,EAAAA,EAAAA,GAACoD,EAAAA,GAAI,CAAAC,IAAA,0DACUC,EAAAA,EAAAA,IAAeL,GAAS,aACzBA,EAAWH,EAAY,KACnCS,KAAMN,EAAW,MAAQ,OAEzBjD,EAAAA,EAAAA,GAAA,OAAAqD,IAAA,yDACc,OACZpD,MAAO,CACL,CAACT,GAAsB,QAARuD,GAAiBH,EAChCY,KAAK,GAEPC,KAAK,eACLC,OAAO,OACPC,QAAS,OAAOlD,KAAQA,IACxBmD,MAAM,OACNC,MAAM,8BAELX,EAAM/B,KAAK2C,GACM,kBAATA,GACL9D,EAAAA,EAAAA,GAAA,QAAM+D,EAAGD,KAET9D,EAAAA,EAAAA,GAAA,QAAM+D,EAAGD,EAAKC,EAAGC,QAAS,YAAaF,EAAOA,EAAKE,QAAU,QAgCjE,sBAAM1B,GACZ,MAAM,KAAExC,EAAI,MAAEH,EAAK,QAAEyC,GAAYD,KAEjC,KAAK8B,EAAAA,EAAAA,OAAgBnE,IAASsC,EAC5B,OAGF,MAAM8B,EAAiB,CAAEpE,OAAMH,SACzBkD,EF3EDf,EAAuBtB,EE2EO0D,WFxGhCC,eAAyBC,GAC9B,MAAMC,EAAgB7D,EAAe4D,GAC/BE,EAAiBxC,EAAuBuC,GAE9C,GAAIC,EACF,OAAOA,EAGJnE,EAAakE,KAChBlE,EAAakE,GAAiBE,OAAMC,EAAAA,EAAAA,IAAa,iBAAiBH,WAC/DI,MAAMC,GAASA,EAAKC,SACpBC,OAAM,KACLC,QAAQC,MAAM,IAAIT,0CACX,OAIb,MAAMP,QAAa3D,EAAakE,GAGhC,OAFAnE,EAAUmE,GAAiBP,EAEpBA,CACT,CEmFiEiB,CAAUb,GAGnEpE,IAASqC,KAAKrC,OAIlBqC,KAAKU,SAAWA,GAGVR,gBAAAA,CAAiB2C,GACvB7C,KAAKK,sBAAuByC,EAAAA,EAAAA,GAC1B,gBACCC,IACCA,EAAQC,SAASC,IACXA,EAAMC,iBACRlD,KAAKK,qBAAqBC,aAC1BN,KAAKK,qBAAuB,KAC5BwC,OAEF,GAEJ,CAAEM,WAAY,SAGXnD,KAAKK,qBAKVL,KAAKK,qBAAqB+C,QAAQpD,KAAKQ,IAJrCqC,8KD3KU,04BEAT,MAAMQ,EAAqB,CAChCC,MAAO,eACPC,QAAS,4BACTC,KAAM,eCWKC,GAAY5D,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,wGAWgB,aAGC,gBAGE,OAI1C4D,YAAAA,GACE1D,KAAK2D,eAAgBC,EAAAA,EAAAA,GAAiBP,EAAoBrD,KAAKrC,KAAMqC,KAAKvC,QAS5EsC,iBAAAA,GACEC,KAAK2D,eAAgBC,EAAAA,EAAAA,GAAiBP,EAAoBrD,KAAKrC,KAAMqC,KAAKvC,QAG5E8C,MAAAA,GACE,MAAMsD,EAAS7D,KAAKQ,GAAGqD,OACvB,OACEhG,EAAAA,EAAAA,GAACoD,EAAAA,GAAI,CAAAC,IAAA,qEAA0B2C,GAC5B7D,KAAK8D,WAAW9D,KAAK2D,gBACtB9F,EAAAA,EAAAA,GAAA,QAAAqD,IAAA,8CAsBE4C,UAAAA,CAAWC,GACjB,GAAIA,EACF,OACElG,EAAAA,EAAAA,GAAA,gBACEC,MAAM,6BACN2C,QAAST,KAAKgE,YACdrG,KAAMoG,EACNvG,MAAM,gICnFQ,i/DCsBjB,MAAMyG,EAAkB,CAAC,OAAQ,iBAAkB,QAAS,SAAU,QAAS,OAAQ,QAKjFC,EAAe,CAAC,QAAS,WAAY,SAAU,MAAO,OAAQ,OAK9DC,EAAoB,CAAC,QAAS,WAAY,SAAU,MAAO,OAAQ,WAAY,OAE5F,SAASC,EACPC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAgBF,EAASG,cACzBC,EAAQN,EAAeE,GAEzBC,GAAwB,MAATG,EACjBL,EAAMM,aAAaH,EAAe,GAAGE,KAGrCL,EAAMO,gBAAgBJ,EAE1B,UAWgBK,EACdC,EACAV,EACAW,GAEAA,EAAgBD,KAAgB,aAATA,EAAsB,OAASA,EAEtD,MAAME,EAAmBhB,EAAgBiB,SAASH,GAC5CI,EAAwBd,EAE9BD,EAA2Be,EAAuBH,EAAiB,MAAOC,GAC1Eb,EAA2Be,EAAuBH,EAAiB,MAAOC,GAC1Eb,EAA2Be,EAAuBH,EAAiB,OAAQC,GAE3E,MAAMG,EAAqBjB,EAAkBe,SAASH,GAEhDM,EAAwBhB,EAE9BD,EAA2BiB,EAAuBL,EAAiB,YAAaI,GAChFhB,EAA2BiB,EAAuBL,EAAiB,YAAaI,GAIhFhB,EAA2BiB,EAAuBL,EAAiB,UAF7Cd,EAAagB,SAASH,GAG9C,wOCpFO,MAAM1H,EACH,SADGA,EAEE,eAFFA,EAGK,kBAHLA,EAIE,eAJFA,EAKA,OALAA,EAMH,SANGA,EAOH,SAPGA,EAQU,wBARVA,EASW,iCATXA,EAUF,kBAVEA,EAWG,UAXHA,EAYI,iBAZJA,EAaQ,sBAbRA,EAcO,qBAGPiI,EACQ,yBAGRC,EAAmB,CAC9BC,IAAK,QACLC,SAAU,OACVC,MAAO,gBACPC,KAAM,WACNC,KAAM,QACNC,OAAQ,UAGGC,EACH,SCqDGC,GAAKlG,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qVAyXR,KAAAkG,YAAqC,QAqBrC,KAAAC,oBAAsC,UAO9C,KAAAC,kBAAmBpD,EAAAA,EAAAA,GAAe,YAAY,IAAM9C,KAAKmG,sBAEjD,KAAAC,kBAAmB,EA8J3B,KAAAC,eAAkBC,IACZtG,KAAKuG,UAAYvG,KAAKwG,UAAYF,EAAMG,mBAIxCzG,KAAK0G,aAA6B,WAAdJ,EAAMpF,MAC5BlB,KAAK2G,gBAAgBL,GACrBA,EAAMM,kBAEU,UAAdN,EAAMpF,MACJ2F,EAAAA,EAAAA,GAAW7G,OACbsG,EAAMM,mBAkDJ,KAAAD,gBAAmBG,IACzB9G,KAAK+G,SAAS,CACZC,YAAY,EACZF,cACAG,OAAQ,OACRtC,MAAO,IACP,EAGI,KAAAuC,yBAA2B,KACA,SAA7BlH,KAAKiG,qBAAkCjG,KAAK2E,QAAU3E,KAAKmH,uBAC7DnH,KAAKoH,mBAAmBC,OACxBrH,KAAKsH,wBAAwBtH,KAAK2E,SAI9B,KAAA4C,iBAAmB,KACzBC,OAAOC,cAAczH,KAAK0H,4BAC1B1H,KAAK2H,yBAAyBN,OAC9BrH,KAAKkH,0BAA0B,EAGzB,KAAAU,aAAgBtB,IACtB,GAAItG,KAAKwG,SACP,OAGF,MAAMqB,EAAevB,EAAMuB,eAGxBA,EAAa3C,SAASlF,KAAK8H,kBAC5BD,EAAa3C,SAASlF,KAAK+H,kBAK7B/H,KAAKgI,UAAU,EAGT,KAAAC,kBAAoB,KAC1BjI,KAAKkI,0BAA0Bb,MAAM,EAG/B,KAAAc,mBAAqB,KACT,SAAdnI,KAAK+E,OACP/E,KAAKoI,MAASpI,KAAKqI,QAA6BD,QAI5C,KAAAE,kBAAqBxB,IACvB9G,KAAKwG,UAAYxG,KAAKuG,UAG1BvG,KAAK+G,SAAS,CACZD,cACAG,OAAQ,OACRtC,MAAQmC,EAAYyB,OAA4B5D,OAChD,EAGI,KAAA6D,oBAAuBlC,IACzBtG,KAAKwG,UAAYxG,KAAKuG,UAGR,UAAdD,EAAMpF,KACRlB,KAAKkH,4BAID,KAAAuB,wBAA2B3B,IACjC,GAAI9G,KAAKwG,UAAYxG,KAAKuG,SACxB,OAGF,GAAmB,aAAfvG,KAAK2E,OAAuC,cAAf3E,KAAK2E,MACpC,OAGF,MAAMA,EAASmC,EAAYyB,OAA4B5D,MACvD+D,EAAAA,EAAsBC,oBAAsB,CAC1CC,OAAQ5I,KAAK6I,gBACbC,gBAAiB9I,KAAK8I,gBACtBC,YAAa/I,KAAKgJ,gBAEpB,MAAMC,EAAmBP,EAAAA,EAAsBQ,WAAWvE,GAC5B,oBAA1BmC,EAAYqC,YACTC,EAAAA,EAAAA,GAAcH,IACjBnC,EAAYF,iBAEd5G,KAAK+G,SAAS,CACZD,cACAG,OAAQ,OACRtC,OAAO0E,EAAAA,EAAAA,GAAkBJ,KAE3BjJ,KAAKsJ,cAAc3E,MAAQ3E,KAAKuJ,gBAEhCvJ,KAAK+G,SAAS,CACZD,cACAG,OAAQ,OACRtC,MAAOsE,KAKL,KAAAO,0BAA6BlD,IACnC,GAAkB,WAAdtG,KAAK+E,MAAqB/E,KAAKwG,UAAYxG,KAAKuG,SAClD,OAGF,GAAmB,aAAfvG,KAAK2E,OAAuC,cAAf3E,KAAK2E,MAKpC,OAJA2B,EAAMM,sBACY,cAAdN,EAAMpF,KAAqC,WAAdoF,EAAMpF,KACrClB,KAAK2G,gBAAgBL,IAKzB,GAAkB,YAAdA,EAAMpF,IAIR,OAFAoF,EAAMM,sBACN5G,KAAKyJ,iBAAiB,KAAMnD,GAG9B,GAAkB,cAAdA,EAAMpF,IAER,YADAlB,KAAKyJ,iBAAiB,OAAQnD,GAGhC,MAAMoD,EAAgB,IACjBC,EAAAA,EACH,YACA,aACA,YACA,SACA,QACA,SACA,OAEF,GAAIrD,EAAMsD,QAAUtD,EAAMuD,SAAWvD,EAAMwD,QACzC,OAEF,MAAMC,EAAkBzD,EAAM0D,UAA0B,QAAd1D,EAAMpF,IAChD,GAAIwI,EAAcxE,SAASoB,EAAMpF,MAAQ6I,EACrB,UAAdzD,EAAMpF,KACRlB,KAAKkH,+BAFT,CAWA,GALAwB,EAAAA,EAAsBC,oBAAsB,CAC1CC,OAAQ5I,KAAK6I,gBACbC,gBAAiB9I,KAAK8I,gBACtBC,YAAa/I,KAAKgJ,gBAEhB1C,EAAMpF,MAAQwH,EAAAA,EAAsBuB,QAAS,CAC/C,IAAKjK,KAAK2E,QAAU3E,KAAKsJ,cAAc3E,MACrC,OAEF,GAAI3E,KAAK2E,QAA8E,IAArE3E,KAAKsJ,cAAc3E,MAAMuF,QAAQxB,EAAAA,EAAsBuB,SACvE,OAGJ,GAAI,OAAOE,KAAK7D,EAAMpF,KAAM,CAC1B,IAAKlB,KAAK2E,QAAU3E,KAAKsJ,cAAc3E,MACrC,OAEF,GAAI3E,KAAK2E,QAAU,OAAOwF,KAAKnK,KAAKsJ,cAAc3E,OAChD,OAIJ,GAAkB,MAAd2B,EAAMpF,IAAa,CACrB,IAAKlB,KAAK2E,QAAU3E,KAAKsJ,cAAc3E,MACrC,OAEF,GAAI3E,KAAK2E,OAAS3E,KAAKsJ,cAAc3E,MAAM9F,MAAM,KAAKC,QAAU,EAC9D,OAGJwH,EAAMM,iBAAgB,EAGhB,KAAA6C,iBAAmB,CACzBW,EACAtD,KAEA,GAAKA,aAAuBuD,eAAiBvD,EAAYwD,QAAyB,WAAdtK,KAAK+E,KACvE,OAGF,MAAMwF,EAAWvK,KAAKwK,UAAYC,WAAWzK,KAAKwK,WAAa,KACzDE,EAAW1K,KAAK2K,UAAYF,WAAWzK,KAAK2K,WAAa,KAG/D3K,KAAK4K,gCAAgCR,EAAWG,EAAUG,EAAU5D,GAEhE9G,KAAK0H,4BACPF,OAAOC,cAAczH,KAAK0H,4BAE5B,IAAImD,GAAkB,EACtB7K,KAAK0H,2BAA6BF,OAAOsD,aAAY,KAC/CD,EACFA,GAAkB,EAIpB7K,KAAK4K,gCAAgCR,EAAWG,EAAUG,EAAU5D,EAAY,GAdtD,IAeL,EAGjB,KAAAiE,mCAAqC,KAC3CvD,OAAOC,cAAczH,KAAK0H,2BAA2B,EAG/C,KAAAsD,+BAAkC1E,IACxC,KAAK2E,EAAAA,EAAAA,GAAuB3E,GAC1B,OAGFA,EAAMM,iBACN,MAAMwD,EAAa9D,EAAMiC,OAA0B2C,QAAQC,WACtDnL,KAAKwG,UACRxG,KAAKyJ,iBAAiBW,EAAW9D,IAQ7B,KAAA8E,uBAA0B9E,IAC3BA,EAAMiC,OAA4BhK,OAASyB,KAAKzB,MACnDyB,KAAK+G,SAAS,CACZpC,MAAQ2B,EAAMiC,OAA4B5D,MAC1CsC,OAAQ,WAGZjH,KAAKgI,WACL1B,EAAM+E,iBAAiB,EAGjB,KAAAC,cAAiB9K,IACvBR,KAAKqI,QAAU7H,CAAE,EAGX,KAAA+K,oBAAuB/K,IAC7BR,KAAKsJ,cAAgB9I,CAAE,EAqBjB,KAAAgL,cAAiBC,KACL,SAAdzL,KAAK+E,MAAoB/E,KAAKqI,WAGhB,WAAdrI,KAAK+E,MAAsB/E,KAAKsJ,iBAGpCtJ,KAAK,QAAsB,WAAdA,KAAK+E,KAAoB,SAAW,QAAQJ,MAAQ8G,EAAa,EAGxE,KAAAnE,wBAA2B3C,IACjC3E,KAAKmH,qBAAuBnH,KAAK0L,eAAe/G,EAAM,EAOhD,KAAAgH,iBAAoBhH,IAC1B3E,KAAK4L,cAAgB5L,KAAK0L,eAAe/G,EAAM,EAGzC,KAAAoC,SAAWxJ,IAYlB,IAZmB,WAClByJ,GAAa,EAAK,YAClBF,EAAW,OACXG,EAAM,cACN2E,EAAa,MACbjH,GAODpH,EAIC,GAHAyC,KAAK2L,iBAAiBC,GAAiB5L,KAAK2E,OAC5C3E,KAAKiG,oBAAsBgB,EAET,WAAdjH,KAAK+E,KAAmB,CAC1B2D,EAAAA,EAAsBC,oBAAsB,CAC1CC,OAAQ5I,KAAK6I,gBACbC,gBAAiB9I,KAAK8I,gBACtBC,YAAa/I,KAAKgJ,eAClB6C,YAAa,SAGf,MAAMC,EACJ9L,KAAK4L,eAAe9M,OAAS6F,EAAM7F,QAAUkB,KAAK2E,OAAO7F,OAAS6F,EAAM7F,OACpEiN,EAAiE,MAAnCpH,EAAMhG,OAAOgG,EAAM7F,OAAS,GAC1DkN,EACJD,GAA+BD,EAAiBnH,GAAQsH,EAAAA,EAAAA,GAAqBtH,GAEzEuH,EACJvH,IAAUqH,GACN5C,EAAAA,EAAAA,GAAcpJ,KAAK4L,eACjB5L,KAAK4L,cACL,GACFI,EAEN,IAAIG,EAAoBzD,EAAAA,EAAsB0D,SAASF,GAExC,cAAXjF,GAA2B8E,IAC7BI,GAAoBE,EAAAA,EAAAA,GAClBF,EACAD,EACAxD,EAAAA,IAKJ1I,KAAKuJ,eACHwC,GAA+BD,EAC3B,GAAGK,IAAoBzD,EAAAA,EAAsBuB,UAC7CkC,EAENnM,KAAKoG,iBAA8B,SAAXa,GAAqBjH,KAAK2E,QAAUuH,EAG5DlM,KAAK2E,MAAQ,CAAC,IAAK,KAAKO,SAASgH,GAAY,GAAKA,OAElDlM,KAAKoG,iBAA8B,SAAXa,GAAqBjH,KAAK2E,QAAUA,EAC5D3E,KAAK2E,MAAQA,EAQf,GALe,WAAXsC,IACFjH,KAAKwL,cAAc7G,GACnB3E,KAAKmH,qBAAuBxC,GAG1BmC,EAAa,CACgB9G,KAAKsM,kBAAkBjF,OAC3BZ,kBACzBzG,KAAK2E,MAAQ3E,KAAK4L,cAClB5L,KAAKuJ,eACW,WAAdvJ,KAAK+E,KACD2D,EAAAA,EAAsB0D,SAASpM,KAAK4L,eACpC5L,KAAK4L,eACF5E,GACThH,KAAKkH,6BAKH,KAAAqF,kBAAoB,KAC1B/E,OAAOC,cAAczH,KAAK0H,2BAA2B,iBAp8BmB,8CAarC,iBAOD,iEA0BM,qCAQH,wDAeJ,iDAaZ,qJAuDmC,CACxDpE,OAAO,EACPkJ,UAAU,EACVC,aAAa,EACbC,iBAAiB,EACjBC,eAAe,EACfC,gBAAgB,EAChBC,cAAc,EACdC,SAAS,EACTC,UAAU,EACVC,cAAc,EACdC,cAAc,0CAa4C,yEAiBxB,iBAGA,aAGI,gBAGE,uGAyCvB,8CAQsC,YAuB5C,kBAGoB,wHA4HN,sEASkB,EAtZ7CC,6BAAAA,IACEC,EAAAA,EAAAA,IAAYnN,MAiCdoN,eAAAA,GACEpN,KAAKmG,oBAqEPkH,UAAAA,GACErN,KAAKwK,UAAYxK,KAAKsN,KAAKC,YAAc,KAY3CC,UAAAA,GACExN,KAAK2K,UAAY3K,KAAKyN,KAAKF,YAAc,KAmL3CG,gBAAAA,IAKAC,YAAAA,CAAazB,EAAkBN,GAC7B,IAAK5L,KAAKoG,iBAAkB,CAC1B,GAAkB,WAAdpG,KAAK+E,OAAmC,aAAbmH,GAAwC,cAAbA,GAGxD,OAFAlM,KAAKuJ,eAAiB2C,OACtBlM,KAAKmH,qBAAuB+E,GAI9BlM,KAAK+G,SAAS,CACZE,OAAQ,SACR2E,gBACAjH,MACc,MAAZuH,GAAgC,IAAZA,EAChB,GACc,WAAdlM,KAAK+E,MACHqE,EAAAA,EAAAA,GAAc8C,GACZA,EACAlM,KAAK4L,eAAiB,GACxBM,IAEVlM,KAAK4N,4BAA4B1B,GAEnClM,KAAKoG,kBAAmB,EAK1ByH,mBAAAA,GACE7N,KAAK2D,eAAgBC,EAAAA,EAAAA,GAAiB2B,EAAkBvF,KAAKrC,KAAMqC,KAAK+E,MAgC1E,eAAI2B,GACF,OAAQ1G,KAAK8N,aAAe9N,KAAK+N,WAA2B,WAAd/N,KAAK+E,OAAsB/E,KAAK2E,OAAO7F,OAAS,EAGhG,cAAIgP,GACF,MAA4B,aAArB9N,KAAKgG,YAiCdgI,qBAAAA,IACEC,EAAAA,EAAAA,GAAejO,KAAMA,KAAK6I,iBAa5B9I,iBAAAA,IACEmO,EAAAA,EAAAA,GAAiBlO,OACjBmO,EAAAA,EAAAA,GAAgBnO,MAEhBA,KAAKoO,iBAAmBpO,KAAKQ,GAAG6N,QAAQ,2BACpCrO,KAAKoO,mBACPpO,KAAKsO,eAAiBtO,KAAKoO,iBAAiBE,iBAAkB,IAEhEC,EAAAA,EAAAA,GAAavO,OACbwO,EAAAA,EAAAA,GAAYxO,MAEZA,KAAKkG,kBAAkB9C,QAAQpD,KAAKQ,GAAI,CAAEiO,WAAW,IAErDzO,KAAKmG,oBACLnG,KAAKQ,GAAGkO,iBAAiBC,EAAAA,EAA+B3O,KAAKoL,wBAG/DhL,oBAAAA,IACEwO,EAAAA,EAAAA,GAAgB5O,OAChB6O,EAAAA,EAAAA,GAAe7O,OACf8O,EAAAA,EAAAA,GAAoB9O,OACpB+O,EAAAA,EAAAA,GAAmB/O,MAEnBA,KAAKkG,kBAAkB5F,aACvBN,KAAKQ,GAAGwO,oBAAoBL,EAAAA,EAA+B3O,KAAKoL,wBAGlE,uBAAM6D,IACJC,EAAAA,EAAAA,GAAuBlP,MACvBA,KAAKgG,YAA4B,aAAdhG,KAAK+E,KAAsB,WAAa,QAC3D/E,KAAKwK,UAAYxK,KAAKsN,KAAKC,WAC3BvN,KAAK2K,UAAY3K,KAAKyN,KAAKF,WAC3BvN,KAAK2D,eAAgBC,EAAAA,EAAAA,GAAiB2B,EAAkBvF,KAAKrC,KAAMqC,KAAK+E,YAClEoK,EAAAA,EAAAA,GAAcnP,MAEpBA,KAAKsH,wBAAwBtH,KAAK2E,OAClC3E,KAAK2L,iBAAiB3L,KAAK2E,OAET,WAAd3E,KAAK+E,OACY,aAAf/E,KAAK2E,OAAuC,cAAf3E,KAAK2E,OACpC3E,KAAKuJ,eAAiBvJ,KAAK2E,MAC3B3E,KAAKmH,qBAAuBnH,KAAK2E,QAEjC3E,KAAK4N,4BAA4B5N,KAAK2E,OACtC3E,KAAK+G,SAAS,CACZE,OAAQ,YACRtC,OAAOyE,EAAAA,EAAAA,GAAcpJ,KAAK2E,OAAS3E,KAAK2E,MAAQ,OAMxDyK,gBAAAA,IACEC,EAAAA,EAAAA,GAAmBrP,MAGrBsP,qBAAAA,CAAsBpD,EAAkBqD,EAAkBC,GACxD,QAAkB,WAAdxP,KAAK+E,MAAkC,UAAbyK,GAAwBtD,KAAa9C,EAAAA,EAAAA,GAAc8C,MAC/ElM,KAAK+G,SAAS,CACZE,OAAQ,QACRtC,MAAO4K,KAEF,GAKXE,kBAAAA,IACEC,EAAAA,EAAAA,GAAsB1P,MAqCxB,cAAMgI,SACE2H,EAAAA,EAAAA,GAAmB3P,MAEP,WAAdA,KAAK+E,KACP/E,KAAKsJ,eAAesG,QAEpB5P,KAAKqI,SAASuH,QAMlB,gBAAMC,GACc,WAAd7P,KAAK+E,KACP/E,KAAKsJ,eAAewG,SAEpB9P,KAAKqI,SAASyH,SA0BlBC,YAAAA,GACE/P,KAAKgI,WAGP4C,+BAAAA,CACER,EACAG,EACAG,EACA5D,GAEA,MAAM,MAAEnC,GAAU3E,KAElB,GAAc,aAAV2E,GAAkC,cAAVA,EAC1B,OAGF,MAAMwG,EAA2B,OAAdf,EAAqB,GAAK,EACvC4F,EAA0B,QAAdhQ,KAAKiQ,KAAiB,EAAIC,KAAKC,IAAInQ,KAAKiQ,MAAQ,GAE5DG,EADW,IAAIC,EAAAA,EAAqB,KAAV1L,EAAeA,EAAQ,KAC1B2L,IAAI,GAAGN,EAAY7E,GAY1CoF,EATgB,kBAAb7F,IACNjM,MAAMiM,IACP0F,EAAYI,SAAS,GAAG9F,KAAY+F,WAQlC,GAAG/F,IALe,kBAAbH,GACN9L,MAAM8L,IACN6F,EAAYI,SAAS,GAAGjG,KAAYkG,WAMjCL,EAAY7C,WADZ,GAAGhD,IAGTvK,KAAK+G,SAAS,CACZC,YAAY,EACZF,cACAG,OAAQ,OACRtC,MAAO4L,IAoOXzL,mBAAAA,CAAoBR,IAClBQ,EAAAA,EAAAA,GAAoB9E,KAAK+E,KAAM/E,KAAMsE,GAsB/B6B,iBAAAA,GACN,MAAMuK,GAAkBC,EAAAA,EAAAA,GAAW3Q,KAAKQ,GAAI,UAEvCkQ,IAID1Q,KAAKwG,UACyC,MAA5CkK,EAAgBE,aAAa,cAC/B5Q,KAAK6Q,mCAAoC,GAE3CH,EAAgB9L,aAAa,WAAY,KAChC5E,KAAK6Q,oCACdH,EAAgB7L,gBAAgB,YAChC7E,KAAK6Q,mCAAoC,IAkBrCnF,cAAAA,CAAe/G,GACrB,MAAqB,WAAd3E,KAAK+E,MAAqBqE,EAAAA,EAAAA,GAAczE,GAASA,EAAQ,GAAMA,EA4FhEiJ,2BAAAA,CAA4BjJ,GAChB,WAAd3E,KAAK+E,MAAqBJ,KAAUyE,EAAAA,EAAAA,GAAczE,IACpDjC,QAAQoO,KAAK,wBAAwBnM,4CAUzCpE,MAAAA,GACE,MAAMK,GAAMC,EAAAA,EAAAA,GAAcb,KAAKQ,IACzBuQ,GACJlT,EAAAA,EAAAA,GAAA,OAAAqD,IAAA,2CAAKpD,MAAOT,IACVQ,EAAAA,EAAAA,GAAA,oBAAAqD,IAAA,2CAAkB8P,MAAOhR,KAAKiR,SAASC,QAASnM,KAAK,mBAInDoM,GACJtT,EAAAA,EAAAA,GAAA,UAAAqD,IAAA,wDACclB,KAAKiR,SAASG,MAC1BtT,MAAOT,EACPmJ,SAAUxG,KAAKwG,UAAYxG,KAAKuG,SAChC8K,QAASrR,KAAK2G,gBACd2K,UAAW,EACXvM,KAAK,WAELlH,EAAAA,EAAAA,GAAA,gBAAAqD,IAAA,2CAAcvD,KAAK,IAAIH,OAAO+T,EAAAA,EAAAA,GAAavR,KAAKxC,UAG9CgU,GACJ3T,EAAAA,EAAAA,GAAA,gBAAAqD,IAAA,2CACEpD,MAAOT,EACPoD,QAAST,KAAKgE,YACdrG,KAAMqC,KAAK2D,cACXnG,OAAO+T,EAAAA,EAAAA,GAAavR,KAAKxC,SAIvBiU,EAAqD,eAA1BzR,KAAK0R,iBAEhCC,GACJ9T,EAAAA,EAAAA,GAAA,UAAAqD,IAAA,yDACc,OACZpD,MAAO,CACL,CAACT,IAAuB,EACxB,CAACA,GAA2BoU,GAC7B,kBACe,KAChBjL,SAAUxG,KAAKwG,UAAYxG,KAAKuG,SAChCqL,cAAe5R,KAAKgL,+BACpB6G,aAAc7R,KAAK+K,mCACnB+G,YAAa9R,KAAK+K,mCAClBuG,UAAW,EACXvM,KAAK,WAELlH,EAAAA,EAAAA,GAAA,gBAAAqD,IAAA,2CAAcvD,KAAK,aAAaH,OAAO+T,EAAAA,EAAAA,GAAavR,KAAKxC,UAIvDuU,GACJlU,EAAAA,EAAAA,GAAA,UAAAqD,IAAA,yDACc,OACZpD,MAAO,CACL,CAACT,IAAuB,EACxB,CAACA,GAA2BoU,GAC7B,kBACe,OAChBjL,SAAUxG,KAAKwG,UAAYxG,KAAKuG,SAChCqL,cAAe5R,KAAKgL,+BACpB6G,aAAc7R,KAAK+K,mCACnB+G,YAAa9R,KAAK+K,mCAClBuG,UAAW,EACXvM,KAAK,WAELlH,EAAAA,EAAAA,GAAA,gBAAAqD,IAAA,2CAAcvD,KAAK,eAAeH,OAAO+T,EAAAA,EAAAA,GAAavR,KAAKxC,UAIzDwU,GACJnU,EAAAA,EAAAA,GAAA,OAAAqD,IAAA,2CAAKpD,MAAOT,GACTsU,EACAI,GAICE,GAAapU,EAAAA,EAAAA,GAAA,OAAAqD,IAAA,2CAAKpD,MAAOT,GAAa2C,KAAKiS,YAC3CC,GAAarU,EAAAA,EAAAA,GAAA,OAAAqD,IAAA,2CAAKpD,MAAOT,GAAa2C,KAAKkS,YAE3CC,KAAYnS,KAAKQ,GAAG2R,YAAanS,KAAKQ,GAAG4R,aAAa,eAAsB,KAC5EC,EAAerS,KAAKQ,GAAG6R,cAAgBrS,KAAKQ,GAAGoQ,aAAa,gBAC5D0B,EAAYtS,KAAKQ,GAAG8R,WAAatS,KAAKQ,GAAGoQ,aAAa,aAEtD2B,EACU,WAAdvS,KAAK+E,MACHlH,EAAAA,EAAAA,GAAA,SACE2U,OAAQxS,KAAKwS,OAAM,oBACAlN,EAAqB,gBAC1BnE,EAAAA,EAAAA,GAA8B,YAAhBnB,KAAKvC,QAAqB,cAC1CgV,EAAAA,EAAAA,GAAazS,MACzB0S,aAAc1S,KAAK0S,aACnBP,UAAWA,EACXQ,aAAc3S,KAAK2S,aACnBnM,WAAUxG,KAAKwG,UAAkB,KACjC6L,aAAcA,EACdC,UAAWA,EACXpR,IAAI,kBACJ0R,UAAW5S,KAAK4S,UAChBC,UAAW7S,KAAK6S,UAChBC,SAAU9S,KAAK8S,SACfvU,UAAMwU,EACNC,OAAQhT,KAAKuH,iBACb0L,QAASjT,KAAKiI,kBACdiL,QAASlT,KAAKyI,wBACd0K,UAAWnT,KAAKwJ,0BAChB4J,QAASpT,KAAKuM,kBACd8G,QAASrT,KAAKqT,QACdC,YAAatT,KAAKsT,aAAe,GACjC/M,SAAUvG,KAAKuG,SACfgN,IAAKvT,KAAKuL,oBACVxG,KAAK,OACLJ,MAAO3E,KAAKuJ,iBAEZ,KAEAlB,EACU,WAAdrI,KAAK+E,KACD,EACElH,EAAAA,EAAAA,GAACmC,KAAKgG,YAAW,CACfwM,OAAQxS,KAAKwS,OAAM,oBACAlN,EAAqB,gBAC1BnE,EAAAA,EAAAA,GAA8B,YAAhBnB,KAAKvC,QAAqB,cAC1CgV,EAAAA,EAAAA,GAAazS,MACzB0S,aAAc1S,KAAK0S,aACnBP,UAAWA,EACXrU,MAAO,CACL,CAACT,GAAqB2C,KAAKsO,eAC3B,CAACjR,KAAoB2C,KAAKoO,kBAE5BuE,aAAc3S,KAAK2S,aACnBnM,WAAUxG,KAAKwG,UAAkB,KACjC6L,aAAcA,EACdC,UAAWA,EACXhF,IAAKtN,KAAKwK,UACVoI,UAAW5S,KAAK4S,UAChBnF,IAAKzN,KAAK2K,UACVkI,UAAW7S,KAAK6S,UAChBC,SAAU9S,KAAK8S,SACfvU,KAAMyB,KAAKzB,KACXyU,OAAQhT,KAAKuH,iBACbiM,SAAUxT,KAAKmI,mBACf8K,QAASjT,KAAKiI,kBACdiL,QAASlT,KAAKsI,kBACd6K,UAAWnT,KAAKwI,oBAChB4K,QAASpT,KAAKuM,kBACd8G,QAASrT,KAAKqT,QACdC,YAAatT,KAAKsT,aAAe,GACjC/M,SAAUvG,KAAKuG,SACfgN,IAAKvT,KAAKsL,cACVmI,WAAUzT,KAAKyT,UAAkB,KACjCxD,KAAMjQ,KAAKiQ,KACXqB,SACEtR,KAAKwG,UAAaxG,KAAKoO,mBAAqBpO,KAAKsO,gBAAmB,EAAI,KAE1EvJ,KAAM/E,KAAK+E,KACXJ,MAAO3E,KAAK2E,QAEd3E,KAAK8N,YACHjQ,EAAAA,EAAAA,GAAA,OAAKC,MAAOT,IACVQ,EAAAA,EAAAA,GAAA,gBAAcF,KAAK,eAAeH,OAAO+T,EAAAA,EAAAA,GAAavR,KAAKxC,UAE3D,MAEN,KAEN,OACEK,EAAAA,EAAAA,GAACoD,EAAAA,GAAI,CAAAC,IAAA,2CAACmQ,QAASrR,KAAK4H,aAAcuL,UAAWnT,KAAKqG,iBAChDxI,EAAAA,EAAAA,GAAC6V,EAAAA,EAAoB,CAAAxS,IAAA,2CAACsF,SAAUxG,KAAKwG,WACnC3I,EAAAA,EAAAA,GAAA,OAAAqD,IAAA,2CACEpD,MAAO,CAAE,CAACT,IAAmB,EAAM,CAACsW,EAAAA,EAAYC,KAAc,QAARhT,GACtD2S,IAAM/S,GAAQR,KAAK8H,eAAiBtH,GAErB,WAAdR,KAAK+E,MAA+C,eAA1B/E,KAAK0R,kBAAsC1R,KAAKuG,SAEvE,KADAwL,EAEH/R,KAAKiS,WAAaA,EAAa,MAChCpU,EAAAA,EAAAA,GAAA,OAAAqD,IAAA,2CAAKpD,MAAOT,GACTkV,EACAlK,EACArI,KAAK0G,YAAcyK,EAAmB,KACtCnR,KAAK2D,cAAgB6N,EAAS,KAC9BxR,KAAKkR,QAAUH,EAAS,OAE3BlT,EAAAA,EAAAA,GAAA,OAAAqD,IAAA,2CAAKpD,MAAOT,EAAmBkW,IAAM/S,GAAQR,KAAK+H,gBAAkBvH,IAClE3C,EAAAA,EAAAA,GAAA,QAAAqD,IAAA,2CAAM3C,KAAMuH,KAEC,WAAd9F,KAAK+E,MAA+C,aAA1B/E,KAAK0R,kBAAoC1R,KAAKuG,SAErE,KADAyL,EAEHhS,KAAKkS,WAAaA,EAAa,KACjB,WAAdlS,KAAK+E,MAA+C,eAA1B/E,KAAK0R,kBAAsC1R,KAAKuG,SAEvE,KADAoL,GAEJ9T,EAAAA,EAAAA,GAACgW,EAAAA,EAAmB,CAAA3S,IAAA,2CAAC4S,UAAW9T,QAEjCA,KAAK+T,mBAAqC,YAAhB/T,KAAKvC,QAC9BI,EAAAA,EAAAA,GAACP,EAAAA,EAAU,CACTK,KAAMqC,KAAKgU,eACXtW,GAAI4H,EACJ1H,QAASoC,KAAK+T,kBACdvW,MAAOwC,KAAKxC,MACZC,OAAQuC,KAAKvC,SAEb,ueCjxCG,qjgBCAjB,MCQawW,GAAQpU,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,+EAS8C,yBAGjD,oDASoB,EAEpCS,MAAAA,GACE,MACM2T,EAD8B,gBAAdlU,KAAK+E,KACO,CAAEtD,MAAuB,IAAbzB,KAAK2E,MAAR,KAA2B,CAAC,EACjE/D,GAAMC,EAAAA,EAAAA,GAAcb,KAAKQ,IAC/B,OACE3C,EAAAA,EAAAA,GAAA,OAAAqD,IAAA,wDACclB,KAAKgR,OAAShR,KAAKmU,KAAI,gBACpB,EAAC,gBACD,EAAC,gBACDnU,KAAK2E,MACpBvD,KAAK,gBAELvD,EAAAA,EAAAA,GAAA,OAAAqD,IAAA,2CAAKpD,MAAM,UACTD,EAAAA,EAAAA,GAAA,OAAAqD,IAAA,2CACEpD,MAAO,CACLsW,KAAK,EACLC,cAA6B,kBAAdrU,KAAK+E,KACpB,CAAC4O,EAAAA,EAAYC,KAAc,QAARhT,EACnB0T,SAAUtU,KAAKsU,UAEjBC,MAAOL,KAGVlU,KAAKmU,MAAOtW,EAAAA,EAAAA,GAAA,OAAKC,MAAM,QAAQkC,KAAKmU,MAAc,oDDtDvC,utDEMb,MAAMK,EAA4E,CAAC,EAqB1F,SAASC,IACP,MAAM,IAAIC,MAAM,2CAClB,CAEA,SAASC,EAAcb,GACrBA,EAAU7C,SAAW,IAChB6C,EAAUc,mBACVd,EAAUe,iBAEjB,CAEA,SAASC,KASF9S,eAAemN,EAAc2E,GAClCA,EAAUc,sBAAwBG,EAAcjB,EAAWA,EAAUjL,iBACrE8L,EAAcb,EAChB,CAEA9R,eAAe+S,EAAcjB,EAAyBkB,GACpD,KAAKlT,EAAAA,EAAAA,KACH,MAAO,CAAC,EAGV,MAAM,GAAEtB,GAAOsT,EAETmB,EADMzU,EAAG0U,QAAQxQ,cACGvF,QAAQ,WAAY,IAE9C,OArDF6C,eAAgCgT,EAAclB,GAC5C,MAAM5S,EAAM,GAAG4S,KAAakB,IAE5B,OAAIR,EAAkCtT,KAItCsT,EAAkCtT,GAAOkB,OAAMC,EAAAA,EAAAA,IAAa,YAAYyR,kBAA0BkB,WAC/F1S,MAAMC,IACAA,EAAK4S,IACRV,IAEKlS,EAAKC,UAEbC,OAAM,IAAMgS,OAVND,EAAkCtT,EAa7C,CAoCSkU,EAAiBC,EAAAA,EAAAA,GAAmBL,EAAM,OAAQC,EAC3D,CAaOjT,eAAeiM,EAAe6F,EAAyBkB,GAC5DlB,EAAUc,sBAAwBG,EAAcjB,EAAWkB,GAC3DL,EAAcb,EAChB,UAWgB3F,EAAgB2F,GAC9BA,EAAUpG,iBAAmB4H,CAC/B,UASgBvG,EAAmB+E,GAEjCA,EAAUpG,iBAAmBoH,CAC/B,CA6CA,SAASQ,IACPX,EAAc3U,KAChB","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/Validation.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/interfaces.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.scss?tag=calcite-input-message&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/input/common/input.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input/input.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input/input.scss?tag=calcite-input&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/progress/progress.scss?tag=calcite-progress&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/progress/progress.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/t9n.ts"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\n\ninterface ValidationProps extends JSXBase.HTMLAttributes {\n  scale: Scale;\n  status: Status;\n  icon?: IconNameOrString | boolean;\n  id?: string;\n  message: string;\n}\n\nexport const CSS = {\n  validationContainer: \"validation-container\",\n};\n\nexport const Validation: FunctionalComponent<ValidationProps> = ({\n  scale,\n  status,\n  id,\n  icon,\n  message,\n}): VNode => (\n  <div class={CSS.validationContainer}>\n    <calcite-input-message aria-live=\"polite\" icon={icon} id={id} scale={scale} status={status}>\n      {message}\n    </calcite-input-message>\n  </div>\n);\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: [Deprecated] Use `--calcite-icon-color`. Specifies the component's color. Defaults to current color.\n * @prop --calcite-icon-color: Specifies the component's color. Defaults to current color.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","export const StatusIconDefaults = {\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n  idle: \"information\",\n} as const;\n","import { Component, Element, h, Host, Prop, VNode, Watch } from \"@stencil/core\";\nimport { setRequestedIcon } from \"../../utils/dom\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { StatusIconDefaults } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-input-message\",\n  styleUrl: \"input-message.scss\",\n  shadow: true,\n})\nexport class InputMessage {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"status\")\n  @Watch(\"icon\")\n  handleIconEl(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  render(): VNode {\n    const hidden = this.el.hidden;\n    return (\n      <Host calcite-hydrated-hidden={hidden}>\n        {this.renderIcon(this.requestedIcon)}\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputMessageElement;\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private renderIcon(iconName: IconNameOrString): VNode {\n    if (iconName) {\n      return (\n        <calcite-icon\n          class=\"calcite-input-message-icon\"\n          flipRtl={this.iconFlipRtl}\n          icon={iconName}\n          scale=\"s\"\n        />\n      );\n    }\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-message-spacing-value: The top margin spacing above the component.\n */\n\n:host {\n  @apply text-color-1 transition-default box-border flex h-auto w-full items-center font-medium opacity-100;\n  --calcite-input-message-spacing-value: theme(\"spacing.1\");\n  margin-block-start: var(--calcite-input-message-spacing-value);\n}\n\n.calcite-input-message-icon {\n  @apply transition-default pointer-events-none inline-flex flex-shrink-0;\n  margin-inline-end: theme(\"margin.2\");\n}\n\n:host([status=\"invalid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([status=\"warning\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-warning);\n}\n\n:host([status=\"valid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-success);\n}\n\n:host([status=\"idle\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-brand);\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n3h;\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n2h;\n}\n\n:host([scale=\"l\"]) {\n  @apply text-n1h;\n}\n\n@include base-component();\n","export type InputComponent = NumericInputComponent | TextualInputComponent | DateTimeInputComponent;\n\nexport interface DateTimeInputComponent {\n  min: string;\n  max: string;\n}\n\nexport interface NumericInputComponent {\n  min: number;\n  max: number;\n  step: number | \"any\";\n}\n\nexport interface TextualInputComponent {\n  pattern?: string;\n  minLength: number;\n  maxLength: number;\n}\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxStepTypes = [\"date\", \"datetime-local\", \"month\", \"number\", \"range\", \"time\", \"week\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const patternTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"url\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxLengthTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"textarea\", \"url\"];\n\nfunction updateConstraintValidation(\n  inputComponent: InputComponent,\n  input: HTMLInputElement,\n  propName: string,\n  matchesType: boolean,\n): void {\n  const attributeName = propName.toLowerCase();\n  const value = inputComponent[propName];\n\n  if (matchesType && value != null) {\n    input.setAttribute(attributeName, `${value}`);\n  } else {\n    // we remove the attribute to ensure validation-constraints are properly reset\n    input.removeAttribute(attributeName);\n  }\n}\n\n/**\n * Synchronizes the hidden form input with the validation-related input properties.\n *\n * Note: loss of precision is expected due to the hidden input's value and validation-constraint props being strings.\n *\n * @param type - The input type.\n * @param inputComponent\n * @param hiddenFormInput\n */\nexport function syncHiddenFormInput(\n  type: HTMLInputElement[\"type\"] | \"textarea\",\n  inputComponent: InputComponent,\n  hiddenFormInput: HTMLInputElement,\n): void {\n  hiddenFormInput.type = type === \"textarea\" ? \"text\" : type;\n\n  const isMinMaxStepType = minMaxStepTypes.includes(type);\n  const numericInputComponent = inputComponent as NumericInputComponent;\n\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"min\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"max\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"step\", isMinMaxStepType);\n\n  const isMinMaxLengthType = minMaxLengthTypes.includes(type);\n\n  const textualInputComponent = inputComponent as TextualInputComponent;\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"minLength\", isMinMaxLengthType);\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"maxLength\", isMinMaxLengthType);\n\n  const isPatternType = patternTypes.includes(type);\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"pattern\", isPatternType);\n}\n","export const CSS = {\n  loader: \"loader\",\n  clearButton: \"clear-button\",\n  editingEnabled: \"editing-enabled\",\n  inlineChild: \"inline-child\",\n  inputIcon: \"icon\",\n  prefix: \"prefix\",\n  suffix: \"suffix\",\n  numberButtonWrapper: \"number-button-wrapper\",\n  buttonItemHorizontal: \"number-button-item--horizontal\",\n  wrapper: \"element-wrapper\",\n  inputWrapper: \"wrapper\",\n  actionWrapper: \"action-wrapper\",\n  resizeIconWrapper: \"resize-icon-wrapper\",\n  numberButtonItem: \"number-button-item\",\n};\n\nexport const IDS = {\n  validationMessage: \"inputValidationMessage\",\n};\n\nexport const INPUT_TYPE_ICONS = {\n  tel: \"phone\",\n  password: \"lock\",\n  email: \"email-address\",\n  date: \"calendar\",\n  time: \"clock\",\n  search: \"search\",\n} as const;\n\nexport const SLOTS = {\n  action: \"action\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getSlotted,\n  isPrimaryPointerButton,\n  setRequestedIcon,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport { Scale, Status, Alignment } from \"../interfaces\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  internalHiddenInputInputEvent,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  addLocalizedTrailingDecimalZeros,\n  BigDecimal,\n  isValidNumber,\n  parseNumberString,\n  sanitizeNumberString,\n} from \"../../utils/number\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { InputMessages } from \"./assets/input/t9n\";\nimport { InputPlacement, NumberNudgeDirection, SetValueOrigin } from \"./interfaces\";\nimport { CSS, IDS, INPUT_TYPE_ICONS, SLOTS } from \"./resources\";\nimport { NumericInputComponent, syncHiddenFormInput, TextualInputComponent } from \"./common/input\";\n\n/**\n * @slot action - A slot for positioning a `calcite-button` next to the component.\n */\n@Component({\n  tag: \"calcite-input\",\n  styleUrl: \"input.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Input\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    T9nComponent,\n    LocalizedComponent,\n    LoadableComponent,\n    NumericInputComponent,\n    TextualInputComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"autofocus\")\n  @Watch(\"enterkeyhint\")\n  @Watch(\"inputmode\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component's value. */\n  @Prop({ reflect: true }) alignment: Extract<\"start\" | \"end\", Alignment> = \"start\";\n\n  /**\n   * Adds global prop, missing from Stencil's `HTMLElement` type, see https://github.com/ionic-team/stencil/issues/5726\n   *\n   * @ignore\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() autofocus: boolean;\n\n  /**\n   * When `true`, a clear button is displayed when the component has a value. The clear button shows by default for `\"search\"`, `\"time\"`, and `\"date\"` types, and will not display for the `\"textarea\"` type.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(): void {\n    this.setDisabledAction();\n  }\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() enterKeyHint: string;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * When `true`, shows a default recommended icon. Alternatively, pass a Calcite UI Icon name to display a specific icon.\n   */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() inputMode: string;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** When `true`, a busy indicator is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * When `true`, uses locale formatting for numbers.\n   *\n   * @internal\n   */\n  @Prop() localeFormat = false;\n\n  /**\n   * Specifies the maximum value for type \"number\".\n   *\n   * @mdn [max](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max)\n   */\n  @Prop({ reflect: true }) max: number;\n\n  /** watcher to update number-to-string for max */\n  @Watch(\"max\")\n  maxWatcher(): void {\n    this.maxString = this.max?.toString() || null;\n  }\n\n  /**\n   * Specifies the minimum value for `type=\"number\"`.\n   *\n   * @mdn [min](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min)\n   */\n  @Prop({ reflect: true }) min: number;\n\n  /** watcher to update number-to-string for min */\n  @Watch(\"min\")\n  minWatcher(): void {\n    this.minString = this.min?.toString() || null;\n  }\n\n  /**\n   * Specifies the maximum length of text for the component's value.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Specifies the minimum length of text for the component's value.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the placement of the buttons for `type=\"number\"`. */\n  @Prop({ reflect: true }) numberButtonType: InputPlacement = \"vertical\";\n\n  /**\n   * Specifies placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /** Adds text to the start of the component. */\n  @Prop() prefixText: string;\n\n  /**\n   * When `true`, the component's value can be read, but cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the granularity the component's `value` must adhere to.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)\n   */\n  @Prop({ reflect: true }) step: number | \"any\";\n\n  /**\n   * Specifies the type of content to autocomplete, for use in forms.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n   */\n  @Prop() autocomplete: string;\n\n  /**\n   * Specifies a regex pattern the component's `value` must match for validation.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\n   */\n  @Prop() pattern: string;\n\n  /**\n   * Specifies a comma separated list of unique file type specifiers for limiting accepted file types.\n   * This property only has an effect when `type` is \"file\".\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\n   */\n  @Prop() accept: string;\n\n  /**\n   * When `true`, the component can accept more than one value.\n   * This property only has an effect when `type` is \"email\" or \"file\".\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple)\n   */\n  @Prop() multiple = false;\n\n  /** Adds text to the end of the component. */\n  @Prop() suffixText: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  /**\n   * Specifies the component type.\n   *\n   * Note that the following `type`s add type-specific icons by default: `\"date\"`, `\"email\"`, `\"password\"`, `\"search\"`, `\"tel\"`, `\"time\"`.\n   */\n  @Prop({ reflect: true }) type:\n    | \"color\"\n    | \"date\"\n    | \"datetime-local\"\n    | \"email\"\n    | \"file\"\n    | \"image\"\n    | \"month\"\n    | \"number\"\n    | \"password\"\n    | \"search\"\n    | \"tel\"\n    | \"text\"\n    | \"textarea\"\n    | \"time\"\n    | \"url\"\n    | \"week\" = \"text\";\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * When `type` is `\"file\"`, specifies the component's selected files.\n   *\n   * @mdn https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/files\n   */\n  @Prop() files: FileList | undefined;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string, previousValue: string): void {\n    if (!this.userChangedValue) {\n      if (this.type === \"number\" && (newValue === \"Infinity\" || newValue === \"-Infinity\")) {\n        this.displayedValue = newValue;\n        this.previousEmittedValue = newValue;\n        return;\n      }\n\n      this.setValue({\n        origin: \"direct\",\n        previousValue,\n        value:\n          newValue == null || newValue == \"\"\n            ? \"\"\n            : this.type === \"number\"\n              ? isValidNumber(newValue)\n                ? newValue\n                : this.previousValue || \"\"\n              : newValue,\n      });\n      this.warnAboutInvalidNumberValue(newValue);\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"icon\")\n  @Watch(\"type\")\n  updateRequestedIcon(): void {\n    this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Input[\"value\"];\n\n  inlineEditableEl: HTMLCalciteInlineEditableElement;\n\n  private inputWrapperEl: HTMLDivElement;\n\n  private actionWrapperEl: HTMLDivElement;\n\n  /** keep track of the rendered child type */\n  private childEl?: HTMLInputElement | HTMLTextAreaElement;\n\n  /** keep track of the rendered child type */\n  private childElType?: \"input\" | \"textarea\" = \"input\";\n\n  /** number text input element for locale */\n  private childNumberEl?: HTMLInputElement;\n\n  get isClearable(): boolean {\n    return !this.isTextarea && (this.clearable || this.type === \"search\") && this.value?.length > 0;\n  }\n\n  get isTextarea(): boolean {\n    return this.childElType === \"textarea\";\n  }\n\n  private minString?: string;\n\n  private maxString?: string;\n\n  private previousEmittedValue: string;\n\n  private previousValue: string;\n\n  private previousValueOrigin: SetValueOrigin = \"initial\";\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  private nudgeNumberValueIntervalId: number;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  State\n  //\n  //--------------------------------------------------------------------------\n\n  @State() defaultMessages: InputMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() displayedValue: string;\n\n  @State() slottedActionElDisabledInternally = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n\n    this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n    if (this.inlineEditableEl) {\n      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n    }\n    connectLabel(this);\n    connectForm(this);\n\n    this.mutationObserver?.observe(this.el, { childList: true });\n\n    this.setDisabledAction();\n    this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n\n    this.mutationObserver?.disconnect();\n    this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.childElType = this.type === \"textarea\" ? \"textarea\" : \"input\";\n    this.maxString = this.max?.toString();\n    this.minString = this.min?.toString();\n    this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);\n    await setUpMessages(this);\n\n    this.setPreviousEmittedValue(this.value);\n    this.setPreviousValue(this.value);\n\n    if (this.type === \"number\") {\n      if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n        this.displayedValue = this.value;\n        this.previousEmittedValue = this.value;\n      } else {\n        this.warnAboutInvalidNumberValue(this.value);\n        this.setValue({\n          origin: \"connected\",\n          value: isValidNumber(this.value) ? this.value : \"\",\n        });\n      }\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentShouldUpdate(newValue: string, oldValue: string, property: string): boolean {\n    if (this.type === \"number\" && property === \"value\" && newValue && !isValidNumber(newValue)) {\n      this.setValue({\n        origin: \"reset\",\n        value: oldValue,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputFocus: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputBlur: EventEmitter<void>;\n\n  /**\n   * Fires each time a new `value` is typed.\n   */\n  @Event({ cancelable: true }) calciteInputInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new `value` is typed and committed.\n   */\n  @Event({ cancelable: false }) calciteInputChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    if (this.type === \"number\") {\n      this.childNumberEl?.focus();\n    } else {\n      this.childEl?.focus();\n    }\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    if (this.type === \"number\") {\n      this.childNumberEl?.select();\n    } else {\n      this.childEl?.select();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly || this.disabled || event.defaultPrevented) {\n      return;\n    }\n\n    if (this.isClearable && event.key === \"Escape\") {\n      this.clearInputValue(event);\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\") {\n      if (submitForm(this)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  incrementOrDecrementNumberValue(\n    direction: NumberNudgeDirection,\n    inputMax: number | null,\n    inputMin: number | null,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void {\n    const { value } = this;\n\n    if (value === \"Infinity\" || value === \"-Infinity\") {\n      return;\n    }\n\n    const adjustment = direction === \"up\" ? 1 : -1;\n    const inputStep = this.step === \"any\" ? 1 : Math.abs(this.step || 1);\n    const inputVal = new BigDecimal(value !== \"\" ? value : \"0\");\n    const nudgedValue = inputVal.add(`${inputStep * adjustment}`);\n\n    const nudgedValueBelowInputMin = () =>\n      typeof inputMin === \"number\" &&\n      !isNaN(inputMin) &&\n      nudgedValue.subtract(`${inputMin}`).isNegative;\n\n    const nudgedValueAboveInputMax = () =>\n      typeof inputMax === \"number\" &&\n      !isNaN(inputMax) &&\n      !nudgedValue.subtract(`${inputMax}`).isNegative;\n\n    const finalValue = nudgedValueBelowInputMin()\n      ? `${inputMin}`\n      : nudgedValueAboveInputMax()\n        ? `${inputMax}`\n        : nudgedValue.toString();\n\n    this.setValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: finalValue,\n    });\n  }\n\n  private clearInputValue = (nativeEvent: KeyboardEvent | MouseEvent): void => {\n    this.setValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: \"\",\n    });\n  };\n\n  private emitChangeIfUserModified = (): void => {\n    if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedValue) {\n      this.calciteInputChange.emit();\n      this.setPreviousEmittedValue(this.value);\n    }\n  };\n\n  private inputBlurHandler = () => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n    this.calciteInternalInputBlur.emit();\n    this.emitChangeIfUserModified();\n  };\n\n  private clickHandler = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    const composedPath = event.composedPath();\n\n    if (\n      !composedPath.includes(this.inputWrapperEl) ||\n      composedPath.includes(this.actionWrapperEl)\n    ) {\n      return;\n    }\n\n    this.setFocus();\n  };\n\n  private inputFocusHandler = (): void => {\n    this.calciteInternalInputFocus.emit();\n  };\n\n  private inputChangeHandler = (): void => {\n    if (this.type === \"file\") {\n      this.files = (this.childEl as HTMLInputElement).files;\n    }\n  };\n\n  private inputInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    this.setValue({\n      nativeEvent,\n      origin: \"user\",\n      value: (nativeEvent.target as HTMLInputElement).value,\n    });\n  };\n\n  private inputKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    if (event.key === \"Enter\") {\n      this.emitChangeIfUserModified();\n    }\n  };\n\n  private inputNumberInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      return;\n    }\n\n    const value = (nativeEvent.target as HTMLInputElement).value;\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    const delocalizedValue = numberStringFormatter.delocalize(value);\n    if (nativeEvent.inputType === \"insertFromPaste\") {\n      if (!isValidNumber(delocalizedValue)) {\n        nativeEvent.preventDefault();\n      }\n      this.setValue({\n        nativeEvent,\n        origin: \"user\",\n        value: parseNumberString(delocalizedValue),\n      });\n      this.childNumberEl.value = this.displayedValue;\n    } else {\n      this.setValue({\n        nativeEvent,\n        origin: \"user\",\n        value: delocalizedValue,\n      });\n    }\n  };\n\n  private inputNumberKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.type !== \"number\" || this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      event.preventDefault();\n      if (event.key === \"Backspace\" || event.key === \"Delete\") {\n        this.clearInputValue(event);\n      }\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      /* prevent default behavior of moving cursor to the beginning of the input when holding down ArrowUp */\n      event.preventDefault();\n      this.nudgeNumberValue(\"up\", event);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      this.nudgeNumberValue(\"down\", event);\n      return;\n    }\n    const supportedKeys = [\n      ...numberKeys,\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Backspace\",\n      \"Delete\",\n      \"Enter\",\n      \"Escape\",\n      \"Tab\",\n    ];\n    if (event.altKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    const isShiftTabEvent = event.shiftKey && event.key === \"Tab\";\n    if (supportedKeys.includes(event.key) || isShiftTabEvent) {\n      if (event.key === \"Enter\") {\n        this.emitChangeIfUserModified();\n      }\n      return;\n    }\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    if (event.key === numberStringFormatter.decimal) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.indexOf(numberStringFormatter.decimal) === -1) {\n        return;\n      }\n    }\n    if (/[eE]/.test(event.key)) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && !/[eE]/.test(this.childNumberEl.value)) {\n        return;\n      }\n    }\n\n    if (event.key === \"-\") {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.split(\"-\").length <= 2) {\n        return;\n      }\n    }\n    event.preventDefault();\n  };\n\n  private nudgeNumberValue = (\n    direction: NumberNudgeDirection,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void => {\n    if ((nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) || this.type !== \"number\") {\n      return;\n    }\n\n    const inputMax = this.maxString ? parseFloat(this.maxString) : null;\n    const inputMin = this.minString ? parseFloat(this.minString) : null;\n    const valueNudgeDelayInMs = 150;\n\n    this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n\n    if (this.nudgeNumberValueIntervalId) {\n      window.clearInterval(this.nudgeNumberValueIntervalId);\n    }\n    let firstValueNudge = true;\n    this.nudgeNumberValueIntervalId = window.setInterval(() => {\n      if (firstValueNudge) {\n        firstValueNudge = false;\n        return;\n      }\n\n      this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n    }, valueNudgeDelayInMs);\n  };\n\n  private numberButtonPointerUpAndOutHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private numberButtonPointerDownHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    event.preventDefault();\n    const direction = (event.target as HTMLDivElement).dataset.adjustment as NumberNudgeDirection;\n    if (!this.disabled) {\n      this.nudgeNumberValue(direction, event);\n    }\n  };\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(this.type, this, input);\n  }\n\n  private onHiddenFormInputInput = (event: Event): void => {\n    if ((event.target as HTMLInputElement).name === this.name) {\n      this.setValue({\n        value: (event.target as HTMLInputElement).value,\n        origin: \"direct\",\n      });\n    }\n    this.setFocus();\n    event.stopPropagation();\n  };\n\n  private setChildElRef = (el: HTMLInputElement | HTMLTextAreaElement) => {\n    this.childEl = el;\n  };\n\n  private setChildNumberElRef = (el: HTMLInputElement) => {\n    this.childNumberEl = el;\n  };\n\n  private setDisabledAction(): void {\n    const slottedActionEl = getSlotted(this.el, \"action\");\n\n    if (!slottedActionEl) {\n      return;\n    }\n\n    if (this.disabled) {\n      if (slottedActionEl.getAttribute(\"disabled\") == null) {\n        this.slottedActionElDisabledInternally = true;\n      }\n      slottedActionEl.setAttribute(\"disabled\", \"\");\n    } else if (this.slottedActionElDisabledInternally) {\n      slottedActionEl.removeAttribute(\"disabled\");\n      this.slottedActionElDisabledInternally = false;\n    }\n  }\n\n  private setInputValue = (newInputValue: string): void => {\n    if (this.type === \"text\" && !this.childEl) {\n      return;\n    }\n    if (this.type === \"number\" && !this.childNumberEl) {\n      return;\n    }\n    this[`child${this.type === \"number\" ? \"Number\" : \"\"}El`].value = newInputValue;\n  };\n\n  private setPreviousEmittedValue = (value: string): void => {\n    this.previousEmittedValue = this.normalizeValue(value);\n  };\n\n  private normalizeValue(value: string): string {\n    return this.type === \"number\" ? (isValidNumber(value) ? value : \"\") : value;\n  }\n\n  private setPreviousValue = (value: string): void => {\n    this.previousValue = this.normalizeValue(value);\n  };\n\n  private setValue = ({\n    committing = false,\n    nativeEvent,\n    origin,\n    previousValue,\n    value,\n  }: {\n    committing?: boolean;\n    nativeEvent?: MouseEvent | KeyboardEvent | InputEvent;\n    origin: SetValueOrigin;\n    previousValue?: string;\n    value: string;\n  }): void => {\n    this.setPreviousValue(previousValue ?? this.value);\n    this.previousValueOrigin = origin;\n\n    if (this.type === \"number\") {\n      numberStringFormatter.numberFormatOptions = {\n        locale: this.effectiveLocale,\n        numberingSystem: this.numberingSystem,\n        useGrouping: this.groupSeparator,\n        signDisplay: \"never\",\n      };\n\n      const isValueDeleted =\n        this.previousValue?.length > value.length || this.value?.length > value.length;\n      const hasTrailingDecimalSeparator = value.charAt(value.length - 1) === \".\";\n      const sanitizedValue =\n        hasTrailingDecimalSeparator && isValueDeleted ? value : sanitizeNumberString(value);\n\n      const newValue =\n        value && !sanitizedValue\n          ? isValidNumber(this.previousValue)\n            ? this.previousValue\n            : \"\"\n          : sanitizedValue;\n\n      let newLocalizedValue = numberStringFormatter.localize(newValue);\n\n      if (origin !== \"connected\" && !hasTrailingDecimalSeparator) {\n        newLocalizedValue = addLocalizedTrailingDecimalZeros(\n          newLocalizedValue,\n          newValue,\n          numberStringFormatter,\n        );\n      }\n\n      // adds localized trailing decimal separator\n      this.displayedValue =\n        hasTrailingDecimalSeparator && isValueDeleted\n          ? `${newLocalizedValue}${numberStringFormatter.decimal}`\n          : newLocalizedValue;\n\n      this.userChangedValue = origin === \"user\" && this.value !== newValue;\n      // don't sanitize the start of negative/decimal numbers, but\n      // don't set value to an invalid number\n      this.value = [\"-\", \".\"].includes(newValue) ? \"\" : newValue;\n    } else {\n      this.userChangedValue = origin === \"user\" && this.value !== value;\n      this.value = value;\n    }\n\n    if (origin === \"direct\") {\n      this.setInputValue(value);\n      this.previousEmittedValue = value;\n    }\n\n    if (nativeEvent) {\n      const calciteInputInputEvent = this.calciteInputInput.emit();\n      if (calciteInputInputEvent.defaultPrevented) {\n        this.value = this.previousValue;\n        this.displayedValue =\n          this.type === \"number\"\n            ? numberStringFormatter.localize(this.previousValue)\n            : this.previousValue;\n      } else if (committing) {\n        this.emitChangeIfUserModified();\n      }\n    }\n  };\n\n  private inputKeyUpHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private warnAboutInvalidNumberValue(value: string): void {\n    if (this.type === \"number\" && value && !isValidNumber(value)) {\n      console.warn(`The specified value \"${value}\" cannot be parsed, or is out of range.`);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const loader = (\n      <div class={CSS.loader}>\n        <calcite-progress label={this.messages.loading} type=\"indeterminate\" />\n      </div>\n    );\n\n    const inputClearButton = (\n      <button\n        aria-label={this.messages.clear}\n        class={CSS.clearButton}\n        disabled={this.disabled || this.readOnly}\n        onClick={this.clearInputValue}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n    const iconEl = (\n      <calcite-icon\n        class={CSS.inputIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.requestedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const isHorizontalNumberButton = this.numberButtonType === \"horizontal\";\n\n    const numberButtonsHorizontalUp = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"up\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.numberButtonPointerDownHandler}\n        onPointerOut={this.numberButtonPointerUpAndOutHandler}\n        onPointerUp={this.numberButtonPointerUpAndOutHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-up\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsHorizontalDown = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"down\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.numberButtonPointerDownHandler}\n        onPointerOut={this.numberButtonPointerUpAndOutHandler}\n        onPointerUp={this.numberButtonPointerUpAndOutHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsVertical = (\n      <div class={CSS.numberButtonWrapper}>\n        {numberButtonsHorizontalUp}\n        {numberButtonsHorizontalDown}\n      </div>\n    );\n\n    const prefixText = <div class={CSS.prefix}>{this.prefixText}</div>;\n    const suffixText = <div class={CSS.suffix}>{this.suffixText}</div>;\n\n    const autofocus = this.el.autofocus || this.el.hasAttribute(\"autofocus\") ? true : null;\n    const enterKeyHint = this.el.enterKeyHint || this.el.getAttribute(\"enterkeyhint\");\n    const inputMode = this.el.inputMode || this.el.getAttribute(\"inputmode\");\n\n    const localeNumberInput =\n      this.type === \"number\" ? (\n        <input\n          accept={this.accept}\n          aria-errormessage={IDS.validationMessage}\n          aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n          aria-label={getLabelText(this)}\n          autocomplete={this.autocomplete}\n          autofocus={autofocus}\n          defaultValue={this.defaultValue}\n          disabled={this.disabled ? true : null}\n          enterKeyHint={enterKeyHint}\n          inputMode={inputMode}\n          key=\"localized-input\"\n          maxLength={this.maxLength}\n          minLength={this.minLength}\n          multiple={this.multiple}\n          name={undefined}\n          onBlur={this.inputBlurHandler}\n          onFocus={this.inputFocusHandler}\n          onInput={this.inputNumberInputHandler}\n          onKeyDown={this.inputNumberKeyDownHandler}\n          onKeyUp={this.inputKeyUpHandler}\n          pattern={this.pattern}\n          placeholder={this.placeholder || \"\"}\n          readOnly={this.readOnly}\n          ref={this.setChildNumberElRef}\n          type=\"text\"\n          value={this.displayedValue}\n        />\n      ) : null;\n\n    const childEl =\n      this.type !== \"number\"\n        ? [\n            <this.childElType\n              accept={this.accept}\n              aria-errormessage={IDS.validationMessage}\n              aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n              aria-label={getLabelText(this)}\n              autocomplete={this.autocomplete}\n              autofocus={autofocus}\n              class={{\n                [CSS.editingEnabled]: this.editingEnabled,\n                [CSS.inlineChild]: !!this.inlineEditableEl,\n              }}\n              defaultValue={this.defaultValue}\n              disabled={this.disabled ? true : null}\n              enterKeyHint={enterKeyHint}\n              inputMode={inputMode}\n              max={this.maxString}\n              maxLength={this.maxLength}\n              min={this.minString}\n              minLength={this.minLength}\n              multiple={this.multiple}\n              name={this.name}\n              onBlur={this.inputBlurHandler}\n              onChange={this.inputChangeHandler}\n              onFocus={this.inputFocusHandler}\n              onInput={this.inputInputHandler}\n              onKeyDown={this.inputKeyDownHandler}\n              onKeyUp={this.inputKeyUpHandler}\n              pattern={this.pattern}\n              placeholder={this.placeholder || \"\"}\n              readOnly={this.readOnly}\n              ref={this.setChildElRef}\n              required={this.required ? true : null}\n              step={this.step}\n              tabIndex={\n                this.disabled || (this.inlineEditableEl && !this.editingEnabled) ? -1 : null\n              }\n              type={this.type}\n              value={this.value}\n            />,\n            this.isTextarea ? (\n              <div class={CSS.resizeIconWrapper}>\n                <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n              </div>\n            ) : null,\n          ]\n        : null;\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            class={{ [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}\n            ref={(el) => (this.inputWrapperEl = el)}\n          >\n            {this.type === \"number\" && this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalDown\n              : null}\n            {this.prefixText ? prefixText : null}\n            <div class={CSS.wrapper}>\n              {localeNumberInput}\n              {childEl}\n              {this.isClearable ? inputClearButton : null}\n              {this.requestedIcon ? iconEl : null}\n              {this.loading ? loader : null}\n            </div>\n            <div class={CSS.actionWrapper} ref={(el) => (this.actionWrapperEl = el)}>\n              <slot name={SLOTS.action} />\n            </div>\n            {this.type === \"number\" && this.numberButtonType === \"vertical\" && !this.readOnly\n              ? numberButtonsVertical\n              : null}\n            {this.suffixText ? suffixText : null}\n            {this.type === \"number\" && this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalUp\n              : null}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-prefix-size: Specifies the component's prefix width.\n * @prop --calcite-input-suffix-size: Specifies the component's suffix width.\n */\n\n:host {\n  @apply block;\n}\n\n// scales\n:host([scale=\"s\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n2h h-6 px-2;\n  }\n  & textarea {\n    @apply h-6;\n    min-block-size: theme(\"spacing.6\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-6;\n  }\n  & input[type=\"file\"] {\n    @apply h-6;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.6\");\n    min-inline-size: theme(\"spacing.6\");\n  }\n  & textarea {\n    @apply text-n2h\n    h-auto\n    py-1\n    px-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n1h h-8 px-3;\n  }\n  & textarea {\n    min-block-size: theme(\"spacing.8\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-8;\n  }\n  & input[type=\"file\"] {\n    @apply h-8;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.8\");\n    min-inline-size: theme(\"spacing.8\");\n  }\n  & textarea {\n    @apply text-n1h\n      h-auto\n      py-2\n      px-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-0h h-11 px-4;\n  }\n  & textarea {\n    min-block-size: theme(\"spacing.11\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-11;\n  }\n  & input[type=\"file\"] {\n    @apply h-11;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.11\");\n    min-inline-size: theme(\"spacing.11\");\n  }\n  & textarea {\n    @apply text-0h\n      h-auto\n      py-3\n      px-4;\n  }\n}\n\n@include disabled() {\n  & textarea {\n    resize: none;\n  }\n}\n\ntextarea,\ninput {\n  transition:\n    var(--calcite-animation-timing),\n    block-size 0,\n    outline-offset 0s;\n  -webkit-appearance: none;\n  @apply font-inherit\n    text-color-1\n    bg-foreground-1\n    relative\n    m-0\n    box-border\n    flex\n    max-h-full\n    w-full\n    max-w-full\n    flex-1\n    rounded-none\n    font-normal;\n}\n\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n// states\ninput,\ntextarea {\n  @apply border\n    border-color-input\n    border-solid\n    text-color-1\n    text-ellipsis;\n  &::placeholder,\n  &:-ms-input-placeholder,\n  &::-ms-input-placeholder {\n    @apply text-color-3 font-normal;\n  }\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\ninput:focus,\ntextarea:focus {\n  @apply border-color-brand text-color-1;\n}\ninput[readonly],\ntextarea[readonly] {\n  @apply bg-background font-medium;\n}\ninput[readonly]:focus,\ntextarea[readonly]:focus {\n  @apply text-color-1;\n}\ncalcite-icon {\n  @apply text-color-3;\n}\n\n//focus\ntextarea,\ninput {\n  @apply focus-base;\n}\ntextarea:focus,\ninput:focus {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) {\n  & input,\n  & textarea {\n    @apply border-color-danger;\n  }\n  & input:focus,\n  & textarea:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n// ICONS\n\n// position icons\n\n:host([scale=\"s\"]) .icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n:host([scale=\"m\"]) .icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host([scale=\"l\"]) .icon {\n  inset-inline-start: theme(\"spacing.4\");\n}\n\n// position placeholder/value text in relation to icons\n\n:host([icon][scale=\"s\"]) input {\n  padding-inline-start: theme(\"padding.8\");\n}\n\n:host([icon][scale=\"m\"]) input {\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host([icon][scale=\"l\"]) input {\n  padding-inline-start: theme(\"padding.14\");\n}\n\n// positioning wrapper for icon and loader\n\n.element-wrapper {\n  @apply relative\n    order-3\n    inline-flex\n    flex-1\n    items-center;\n}\n\n.icon {\n  @apply transition-default\n    pointer-events-none\n    absolute\n    block;\n}\n\n.icon,\n.resize-icon-wrapper {\n  @apply z-default; // needed for firefox to display the icon properly\n}\n\n// hide browser default clear\n\ninput[type=\"text\"]::-ms-clear,\ninput[type=\"text\"]::-ms-reveal {\n  @apply hidden\n    h-0\n    w-0;\n}\ninput[type=\"search\"]::-webkit-search-decoration,\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-results-button,\ninput[type=\"search\"]::-webkit-search-results-decoration,\ninput[type=\"date\"]::-webkit-clear-button,\ninput[type=\"time\"]::-webkit-clear-button {\n  @apply hidden;\n}\n\n.clear-button {\n  pointer-events: initial;\n  @apply focus-base\n    border-color-input\n    bg-foreground-1\n    order-4\n    m-0\n    box-border\n    flex\n    min-h-full\n    cursor-pointer\n    items-center\n    justify-center\n    self-stretch\n    border\n    border-solid;\n\n  border-inline-start-width: theme(\"borderWidth.0\");\n\n  &:hover {\n    @apply bg-foreground-2 transition-default;\n    calcite-icon {\n      @apply text-color-1 transition-default;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:disabled {\n    @apply opacity-disabled;\n  }\n}\n\n// loading\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  @apply pointer-events-none\n    absolute\n    block;\n}\n\n// slotted action\n.action-wrapper {\n  @apply order-7 flex;\n}\n\n// prefix and suffix\n.prefix,\n.suffix {\n  @apply border-color-input\n    bg-background\n    text-color-2\n    box-border\n    flex\n    h-auto\n    min-h-full\n    select-none\n    content-center\n    items-center\n    break-words\n    border\n    border-solid\n    font-medium\n    leading-none;\n}\n\n.prefix {\n  @apply order-2;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  inline-size: var(--calcite-input-prefix-size, auto);\n}\n.suffix {\n  @apply order-5;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  inline-size: var(--calcite-input-suffix-size, auto);\n}\n\n// alignment type\n:host([alignment=\"start\"]) {\n  & textarea,\n  & input {\n    text-align: start;\n  }\n}\n\n:host([alignment=\"end\"]) {\n  & textarea,\n  & input {\n    text-align: end;\n  }\n}\n\n// number buttons\ninput[type=\"number\"] {\n  -moz-appearance: textfield;\n\n  &::-webkit-inner-spin-button,\n  &::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    -moz-appearance: textfield;\n    @apply m-0;\n  }\n}\n\n.number-button-wrapper {\n  @apply transition-default\n    pointer-events-none\n    order-6\n    box-border\n    flex\n    flex-col;\n}\n\n:host([number-button-type=\"vertical\"]) .wrapper {\n  flex-direction: row;\n  display: flex;\n}\n\n:host([number-button-type=\"vertical\"]) {\n  & input,\n  textarea {\n    @apply order-2;\n  }\n}\n\n:host([number-button-type=\"horizontal\"]) .calcite--rtl {\n  & .number-button-item[data-adjustment=\"down\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n  & .number-button-item[data-adjustment=\"up\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n}\n\n.number-button-item.number-button-item--horizontal {\n  &[data-adjustment=\"down\"],\n  &[data-adjustment=\"up\"] {\n    @apply order-1\n      max-h-full\n      min-h-full\n      self-stretch;\n    & calcite-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"down\"] {\n  @apply border-color-input\n    border\n    border-solid;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"up\"] {\n  @apply order-5;\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"up\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"] {\n  @apply border-t-0;\n}\n\n.number-button-item {\n  max-block-size: 50%;\n  min-block-size: 50%;\n  pointer-events: initial;\n  @apply border-color-input\n    bg-foreground-1\n    transition-default\n    m-0\n    box-border\n    flex\n    cursor-pointer\n    items-center\n    self-center\n    border\n    border-solid\n    py-0\n    px-2;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  & calcite-icon {\n    @apply transition-default pointer-events-none;\n  }\n  &:focus {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n  }\n  &:disabled {\n    @apply pointer-events-none;\n  }\n}\n\n.wrapper {\n  @apply relative\n    flex\n    flex-row\n    items-center;\n}\n\n// hide the default date picker\n:input::-webkit-calendar-picker-indicator {\n  @apply hidden;\n}\n\ninput[type=\"date\"]::-webkit-input-placeholder {\n  visibility: hidden !important;\n}\n\n// textarea resize icon\ntextarea::-webkit-resizer {\n  @apply absolute\n    bottom-0\n    box-border\n    py-0\n    px-1;\n  inset-inline-end: 0;\n}\n\n.resize-icon-wrapper {\n  inset-block-end: 2px;\n  inset-inline-end: 2px;\n\n  @apply bg-foreground-1\n    text-color-3\n    pointer-events-none\n    absolute\n    h-3\n    w-3;\n\n  & calcite-icon {\n    inset-block-end: theme(\"spacing.1\");\n    inset-inline-end: theme(\"spacing.1\");\n    transform: rotate(-45deg);\n  }\n}\n\n.calcite--rtl {\n  .resize-icon-wrapper {\n    & calcite-icon {\n      transform: rotate(45deg);\n    }\n  }\n}\n\n:host([type=\"color\"]) input {\n  @apply p-1;\n}\n\n// file input\n:host([type=\"file\"]) input {\n  @apply bg-foreground-1\n    border-color-input\n    cursor-pointer\n    border\n    border-dashed\n    text-center;\n}\n\n:host([type=\"file\"][scale=\"s\"]) input {\n  @apply py-px px-2;\n}\n\n:host([type=\"file\"][scale=\"m\"]) input {\n  @apply py-1 px-3;\n}\n\n:host([type=\"file\"][scale=\"l\"]) input {\n  @apply py-2 px-4;\n}\n\n:host(.no-bottom-border) input {\n  @apply border-b-0;\n}\n\n:host(.border-top-color-one) input {\n  @apply border-t-color-1;\n}\n\n// input needed for higher specificity of these overrides\ninput {\n  &.inline-child {\n    @apply transition-default bg-transparent;\n    .editing-enabled {\n      background-color: inherit;\n    }\n  }\n\n  &.inline-child:not(.editing-enabled) {\n    @apply border-color-transparent\n      flex\n      cursor-pointer text-ellipsis;\n    padding-inline-start: 0;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n","/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-progress-background-color: Specifies the component's background color.\n* @prop --calcite-progress-fill-color: Specifies the component's fill color.\n* @prop --calcite-progress-text-color: Specifies the component's text color.\n*/\n\n@import \"../../assets/styles/animation\";\n\n:host {\n  @apply relative block w-full;\n}\n\n.track,\n.bar {\n  @apply absolute top-0;\n  block-size: 2px;\n}\n\n.track {\n  @apply z-default w-full overflow-hidden;\n  background-color: var(--calcite-progress-background-color, var(--calcite-color-border-3));\n}\n\n.bar {\n  @apply z-default;\n\n  background-color: var(--calcite-progress-fill-color, var(--calcite-color-brand));\n}\n\n@media (forced-colors: active) {\n  .track {\n    background-color: highlightText;\n  }\n  .bar {\n    background-color: linkText;\n  }\n}\n\n.indeterminate {\n  @apply w-1/5;\n  animation: looping-progress-bar-ani scale-duration(--calcite-internal-animation-timing-medium, 11) linear infinite;\n  &.calcite--rtl {\n    animation-name: looping-progress-bar-ani-rtl;\n  }\n}\n\n.reversed {\n  animation-direction: reverse;\n}\n\n.text {\n  @apply text-n2h px-0 pt-4 pb-0 text-center font-medium;\n  color: var(--calcite-progress-text-color, var(--calcite-color-text-2));\n}\n\n@keyframes looping-progress-bar-ani {\n  0% {\n    transform: translate3d(-100%, 0, 0);\n  }\n  50% {\n    inline-size: 40%;\n  }\n  100% {\n    transform: translate3d(600%, 0, 0);\n  }\n}\n\n@keyframes looping-progress-bar-ani-rtl {\n  0% {\n    transform: translate3d(100%, 0, 0);\n  }\n  50% {\n    inline-size: 40%;\n  }\n  100% {\n    transform: translate3d(-600%, 0, 0);\n  }\n}\n\n@include base-component();\n","import { Component, Element, h, Prop, VNode } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\n@Component({\n  tag: \"calcite-progress\",\n  styleUrl: \"progress.scss\",\n  shadow: true,\n})\nexport class Progress {\n  @Element() el: HTMLCalciteProgressElement;\n\n  /**\n   * Specifies the component type.\n   *\n   * Use `\"indeterminate\"` if finding actual progress value is impossible.\n   *\n   */\n  @Prop({ reflect: true }) type: \"indeterminate\" | \"determinate\" = \"determinate\";\n\n  /** When `type` is `\"determinate\"`, the component's progress value with a range of 0.0 - 1.0. */\n  @Prop() value = 0;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** Text that displays under the component's indicator. */\n  @Prop() text: string;\n\n  /** When `true` and for `\"indeterminate\"` progress bars, reverses the animation direction. */\n  @Prop({ reflect: true }) reversed = false;\n\n  render(): VNode {\n    const isDeterminate = this.type === \"determinate\";\n    const barStyles = isDeterminate ? { width: `${this.value * 100}%` } : {};\n    const dir = getElementDir(this.el);\n    return (\n      <div\n        aria-label={this.label || this.text}\n        aria-valuemax={1}\n        aria-valuemin={0}\n        aria-valuenow={this.value}\n        role=\"progressbar\"\n      >\n        <div class=\"track\">\n          <div\n            class={{\n              bar: true,\n              indeterminate: this.type === \"indeterminate\",\n              [CSS_UTILITY.rtl]: dir === \"rtl\",\n              reversed: this.reversed,\n            }}\n            style={barStyles}\n          />\n        </div>\n        {this.text ? <div class=\"text\">{this.text}</div> : null}\n      </div>\n    );\n  }\n}\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["CSS","Validation","_ref","scale","status","id","icon","message","h","class","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","name","numberLeadingName","isNaN","Number","charAt","parts","split","length","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","normalizeIconName","filled","substring","getCachedIconDataByKey","Icon","proxyCustomElement","HTMLElement","connectedCallback","this","visible","waitUntilVisible","loadIconPathData","disconnectedCallback","intersectionObserver","disconnect","render","el","flipRtl","pathData","textLabel","dir","getElementDir","semantic","paths","concat","Host","key","toAriaBoolean","role","svg","fill","height","viewBox","width","xmlns","path","d","opacity","isBrowser","fetchIconProps","async","props","cachedIconKey","cachedIconData","fetch","getAssetPath","then","resp","json","catch","console","error","fetchIcon","callback","createObserver","entries","forEach","entry","isIntersecting","rootMargin","observe","StatusIconDefaults","valid","invalid","idle","InputMessage","handleIconEl","requestedIcon","setRequestedIcon","hidden","renderIcon","iconName","iconFlipRtl","minMaxStepTypes","patternTypes","minMaxLengthTypes","updateConstraintValidation","inputComponent","input","propName","matchesType","attributeName","toLowerCase","value","setAttribute","removeAttribute","syncHiddenFormInput","type","hiddenFormInput","isMinMaxStepType","includes","numericInputComponent","isMinMaxLengthType","textualInputComponent","IDS","INPUT_TYPE_ICONS","tel","password","email","date","time","search","SLOTS","Input","childElType","previousValueOrigin","mutationObserver","setDisabledAction","userChangedValue","keyDownHandler","event","readOnly","disabled","defaultPrevented","isClearable","clearInputValue","preventDefault","submitForm","nativeEvent","setValue","committing","origin","emitChangeIfUserModified","previousEmittedValue","calciteInputChange","emit","setPreviousEmittedValue","inputBlurHandler","window","clearInterval","nudgeNumberValueIntervalId","calciteInternalInputBlur","clickHandler","composedPath","inputWrapperEl","actionWrapperEl","setFocus","inputFocusHandler","calciteInternalInputFocus","inputChangeHandler","files","childEl","inputInputHandler","target","inputKeyDownHandler","inputNumberInputHandler","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","delocalizedValue","delocalize","inputType","isValidNumber","parseNumberString","childNumberEl","displayedValue","inputNumberKeyDownHandler","nudgeNumberValue","supportedKeys","numberKeys","altKey","ctrlKey","metaKey","isShiftTabEvent","shiftKey","decimal","indexOf","test","direction","KeyboardEvent","repeat","inputMax","maxString","parseFloat","inputMin","minString","incrementOrDecrementNumberValue","firstValueNudge","setInterval","numberButtonPointerUpAndOutHandler","numberButtonPointerDownHandler","isPrimaryPointerButton","dataset","adjustment","onHiddenFormInputInput","stopPropagation","setChildElRef","setChildNumberElRef","setInputValue","newInputValue","normalizeValue","setPreviousValue","previousValue","signDisplay","isValueDeleted","hasTrailingDecimalSeparator","sanitizedValue","sanitizeNumberString","newValue","newLocalizedValue","localize","addLocalizedTrailingDecimalZeros","calciteInputInput","inputKeyUpHandler","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","handleGlobalAttributesChanged","forceUpdate","disabledWatcher","maxWatcher","max","toString","minWatcher","min","onMessagesChange","valueWatcher","warnAboutInvalidNumberValue","updateRequestedIcon","isTextarea","clearable","effectiveLocaleChange","updateMessages","connectLocalized","connectMessages","inlineEditableEl","closest","editingEnabled","connectLabel","connectForm","childList","addEventListener","internalHiddenInputInputEvent","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","removeEventListener","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentShouldUpdate","oldValue","property","componentDidRender","updateHostInteraction","componentFocusable","focus","selectText","select","onLabelClick","inputStep","step","Math","abs","nudgedValue","BigDecimal","add","finalValue","subtract","isNegative","slottedActionEl","getSlotted","getAttribute","slottedActionElDisabledInternally","warn","loader","label","messages","loading","inputClearButton","clear","onClick","tabIndex","getIconScale","iconEl","isHorizontalNumberButton","numberButtonType","numberButtonsHorizontalUp","onPointerDown","onPointerOut","onPointerUp","numberButtonsHorizontalDown","numberButtonsVertical","prefixText","suffixText","autofocus","hasAttribute","enterKeyHint","inputMode","localeNumberInput","accept","getLabelText","autocomplete","defaultValue","maxLength","minLength","multiple","undefined","onBlur","onFocus","onInput","onKeyDown","onKeyUp","pattern","placeholder","ref","onChange","required","InteractiveContainer","CSS_UTILITY","rtl","HiddenFormInputSlot","component","validationMessage","validationIcon","Progress","barStyles","text","bar","indeterminate","reversed","style","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","fetchMessages","lang","componentName","tagName","ok","getMessageBundle","getSupportedLocale","defaultOnMessagesChange"],"sourceRoot":""}