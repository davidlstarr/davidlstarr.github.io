"use strict";(self.webpackChunkegis_tdat=self.webpackChunkegis_tdat||[]).push([[82951],{82951:(e,t,r)=>{r.r(t),r.d(t,{default:()=>q});var i=r(35143),s=r(3825),a=r(50076),o=r(27741),n=r(77717),l=r(50346),p=r(46053),h=r(40565),u=(r(47249),r(81806),r(28379)),d=r(85842),y=r(17707),c=r(49140),m=r(76797),g=r(68002),f=r(80963),b=r(25515),v=r(12406),x=r(36648),_=r(19502),M=r(65624),I=r(31362),S=r(11270),w=r(94729),Z=r(21617),O=r(5682),P=r(73907),T=r(78817),E=r(95363),A=r(1420),L=r(16852),F=r(39568),R=r(65419),j=r(38278),J=r(59187),N=r(67478);let k=class extends((0,M.dM)((0,T.e)((0,O.j)((0,P.I)((0,x.V)((0,_.b)((0,S.q)((0,w.A)((0,n.P)((0,Z.J)((0,v.p)((0,I.d)(b.A))))))))))))){constructor(){super(...arguments),this._exportImageParameters=new A.g({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(l.throwIfAbortError).then((()=>this._fetchService(t)))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.includes("PNG32")?"png32":"png24"}writeSublayers(e,t,r,i){if(!this.loaded||!e)return;const s=e.slice().reverse().flatten((e=>{let{sublayers:t}=e;return t&&t.toArray().reverse()})).toArray();let a=!1;const o=(0,c.aB)(i.origin);if(this.capabilities?.operations.supportsExportMap&&this.capabilities?.exportMap?.supportsDynamicLayers)if(o===c.Gr.PORTAL_ITEM){const e=this.createSublayersForOrigin("service").sublayers;a=(0,R.Zx)(s,e,c.Gr.SERVICE)}else if(o>c.Gr.PORTAL_ITEM){const e=this.createSublayersForOrigin("portal-item");a=(0,R.Zx)(s,e.sublayers,(0,c.aB)(e.origin))}const n=[],l={writeSublayerStructure:a,...i};let p=a||this.hasVisibleLayersForOrigin(o);s.forEach((e=>{const t=e.write({},l);n.push(t),p=p||"user"===e.originOf("visible")})),n.some((e=>Object.keys(e).length>1))&&(t.layers=n),p&&(t.visibleLayers=s.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,r,i){const s=i?.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=i?.floors??null,this._exportImageParameters.scale=(0,g.X_)({extent:e,width:t})*s;const a=this._exportImageParameters.toJSON(),o=!i?.rotation||this.version<10.3?{}:{rotation:-i.rotation},n=e?.spatialReference,l=(0,f.YX)(n);a.dpi*=s;const p={};if(i?.timeExtent){const{start:e,end:t}=i.timeExtent.toJSON();p.time=e&&t&&e===t?""+e:`${e??"null"},${t??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(p.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:l,imageSR:l,size:t+","+r,...a,...o,...p}}async fetchImage(e,t,r,i){const{data:s}=await this._fetchImage("image",e,t,r,i);return s}async fetchImageBitmap(e,t,r,i){const{data:s,url:a}=await this._fetchImage("blob",e,t,r,i);return(0,L.m)(s,a,i?.signal)}async fetchRecomputedExtents(){const e={...arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:t}=await(0,s.default)(this.url,e),{extent:r,fullExtent:i,timeExtent:a}=t,o=r||i;return{fullExtent:o&&m.A.fromJSON(o),timeExtent:a&&J.default.fromJSON({start:a[0],end:a[1]})}}loadAll(){return(0,o.g)(this,(e=>{e(this.allSublayers),e(this.subtables)}))}serviceSupportsSpatialReference(e){return(0,j.D)(this,e)}async _fetchImage(e,t,r,i,o){const n={responseType:e,signal:o?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(t,r,i,o),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},p=this.parsedUrl.path+"/export";if(null!=n.query?.dynamicLayers&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new a.A("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n.query});try{const{data:e}=await(0,s.default)(p,n);return{data:e,url:p}}catch(h){if((0,l.isAbortError)(h))throw h;throw new a.A("mapimagelayer:image-fetch-error",`Unable to load image: ${p}`,{error:h})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await(0,s.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){return!(null==e||!this.sublayersSourceJSON[e]?.visibleLayers)}};(0,i._)([(0,p.MZ)((0,N.P6)("dateFieldsTimeReference"))],k.prototype,"dateFieldsTimeZone",void 0),(0,i._)([(0,p.MZ)({type:Boolean})],k.prototype,"datesInUnknownTimezone",void 0),(0,i._)([(0,p.MZ)()],k.prototype,"dpi",void 0),(0,i._)([(0,p.MZ)()],k.prototype,"gdbVersion",void 0),(0,i._)([(0,p.MZ)()],k.prototype,"imageFormat",void 0),(0,i._)([(0,u.w)("imageFormat",["supportedImageFormatTypes"])],k.prototype,"readImageFormat",null),(0,i._)([(0,p.MZ)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],k.prototype,"imageMaxHeight",void 0),(0,i._)([(0,p.MZ)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],k.prototype,"imageMaxWidth",void 0),(0,i._)([(0,p.MZ)()],k.prototype,"imageTransparency",void 0),(0,i._)([(0,p.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],k.prototype,"isReference",void 0),(0,i._)([(0,p.MZ)({json:{read:!1,write:!1}})],k.prototype,"labelsVisible",void 0),(0,i._)([(0,p.MZ)({type:["ArcGISMapServiceLayer"]})],k.prototype,"operationalLayerType",void 0),(0,i._)([(0,p.MZ)({json:{read:!1,write:!1}})],k.prototype,"popupEnabled",void 0),(0,i._)([(0,p.MZ)((0,N.P6)("preferredTimeReference"))],k.prototype,"preferredTimeZone",void 0),(0,i._)([(0,p.MZ)()],k.prototype,"sourceJSON",void 0),(0,i._)([(0,p.MZ)({json:{write:{ignoreOrigin:!0}}})],k.prototype,"sublayers",void 0),(0,i._)([(0,y.K)("sublayers",{layers:{type:[F.A]},visibleLayers:{type:[h.jz]}})],k.prototype,"writeSublayers",null),(0,i._)([(0,p.MZ)({type:["show","hide","hide-children"]})],k.prototype,"listMode",void 0),(0,i._)([(0,p.MZ)({json:{read:!1},readOnly:!0,value:"map-image"})],k.prototype,"type",void 0),(0,i._)([(0,p.MZ)(E.OZ)],k.prototype,"url",void 0),k=(0,i._)([(0,d.$)("esri.layers.MapImageLayer")],k);const q=k}}]);
//# sourceMappingURL=82951.e2fd285b.chunk.js.map