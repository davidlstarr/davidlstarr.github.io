"use strict";(self.webpackChunkegis_tdat=self.webpackChunkegis_tdat||[]).push([[48678],{48678:(e,t,i)=>{i.r(t),i.d(t,{default:()=>gt});var s=i(35143),n=i(16868),r=i(69098),a=i(50076),o=i(76460),l=i(77717),c=i(50346),u=i(68134),h=i(46053),f=i(40565),d=(i(47249),i(81806)),p=i(85842),m=i(25515),y=i(19502),g=i(65624),x=i(31362),w=(i(35238),i(71719)),v=i(3825),b=i(63241),I=i(6409),R=i(28379),_=i(80963),S=i(13096),T=i(95363),A=i(15359),M=i(13023),F=i(58646),O=i(44038),C=i(42915),k=i(88235),P=i(65215),D=i(42553),N=i(22848),J=i(49653),E=i(68347),B=i(12838),L=i(52297),z=i(37267),H=i(52494),W=i(59844),G=i(99846),Z=i(80544),q=i(19247),$=i(76797),j=i(13312);let U=0,V=class extends D.oY{constructor(){super(...arguments),this._tileFetchQueue=new Z.e({concurrency:32,process:(e,t)=>this._fetchRawTile(e.pyramidLevel,e.row,e.col,{...e.options,signal:t})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}normalizeCtorArgs(e){return e?.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:k.A.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=(0,W.FT)(e.spatialReference);return null!=t&&e.extent.width>=t/2}get _hasNoneOrGCSShiftTransform(){const{transform:e}=this.rasterInfo;return null==e||"gcs-shift"===e.type}set rasterJobHandler(e){this._set("rasterJobHandler",e),"Function"===this.datasetFormat&&this.primaryRasters?.rasters?.forEach((t=>t.rasterJobHandler=e))}get rasterId(){return this.url||"rasterId-"+U++}set url(e){this._set("url",(0,S.Jf)(e,o.A.getLogger(this)))}async open(e){return this._openPromise??=(0,W.Hh)().then((()=>this._open(e))),this._openPromise}async fetchTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const n=s.tileInfo||this.rasterInfo.storageInfo.tileInfo,r=this.getTileExtentFromTileInfo(e,t,i,n);return s={noClip:!0,...s},this.fetchPixels(r,n.size[0],n.size[1],s)}async identify(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e=(0,f.PZ)(q.A,e).clone().normalize();const{multidimensionalDefinition:i,timeExtent:s}=t,{rasterInfo:n}=this,{hasMultidimensionalTranspose:r,multidimensionalInfo:a}=n;let{transposedVariableName:o}=t;const l=null!=a&&r&&(null!=s||(0,E.DY)(i));l&&!o&&(o=null!=i&&i.length>0?i[0].variableName??void 0:a.variables[0].name,t={...t,transposedVariableName:o}),t=this._getRequestOptionsWithSliceId(t);const{spatialReference:c,extent:u}=n,{datumTransformation:h}=t;let d=(0,W._I)(e,c,h);if(!u.intersects(d))return{location:d,value:null};if(null!=n.transform){const e=n.transform.inverseTransform(d);if(!n.nativeExtent.intersects(e))return{location:e,value:null};d=e}let p=0;const m=null!=o&&null!=a&&n.hasMultidimensionalTranspose;if("Function"===this.datasetFormat){const e=this.primaryRasters.rasters[0];if(m)return e.identify(d,t);const{pixelSize:s}=n,r=3,a=s.x*r/2,o=s.y*r/2,l=new $.A({xmin:d.x-a,xmax:d.x+a,ymin:d.y-o,ymax:d.y+o,spatialReference:c}),u={interpolation:"nearest",multidimensionalDefinition:i,sliceId:t.sliceId},{pixelBlock:h}=await e.fetchPixels(l,r,r,u),{pixelBlock:f}=await this.fetchPixels(l,r,r,u);if(null==h)return{location:d,value:null};const p=Math.floor(r*r*.5),y=!h.mask||h.mask[p]?h.pixels.map((e=>e[p])):null;let g;return null!=f&&(g=!f.mask||f.mask[p]?f.pixels.map((e=>e[p])):void 0),{location:d,value:y,processedValue:g,pyramidLevel:0}}if(!m)if(t.srcResolution)p=(0,W.t$)(t.srcResolution,n,this.ioConfig.sampling).pyramidLevel;else if(p=await this.computeBestPyramidLevelForLocation(e,t),null==p)return{location:d,value:null};const y=this.identifyPixelLocation(d,p,null,m);if(null===y)return{location:d,value:null};const{row:g,col:x,rowOffset:w,colOffset:v,blockWidth:b}=y,I=o??t.sliceId,R=(0,B.ph)(this.rasterId,I),_=`${p}/${g}/${x}`;let S=(0,B.gd)(R,null,_);null==S&&(S=this.fetchRawTile(p,g,x,t),(0,B.no)(R,null,_,S));const T=await S;if(!T?.pixels?.length)return{location:d,value:null};const A=w*b+v;return this._processIdentifyResult(T,{srcLocation:d,position:A,pyramidLevel:p,useTransposedTile:!!m,requestSomeSlices:l,identifyOptions:t})}async fetchPixels(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};e=(0,W.Ps)(e),s=this._getRequestOptionsWithSliceId(s);const{_hasNoneOrGCSShiftTransform:n}=this;if(s.requestRawData&&n)return this._fetchPixels(e,t,i,s);const r=(0,W.FT)(e.spatialReference),a=(0,W.OM)(e);if(null==r||0===a||1===a&&this._isGlobalWrappableSource&&n)return this._fetchPixels(e,t,i,s);if(a>=3)return{extent:e,pixelBlock:null};const o=[],{xmin:l,xmax:c}=e,u=Math.round(r/(c-l)*t),h=u-Math.round((r/2-l)/(c-l)*t);let f=0;const d=[];for(let g=0;g<=a;g++){const n=new $.A({xmin:0===g?l:-r/2,xmax:g===a?c-r*g:r/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),p=0===g?u-h:g===a?t-f:u;f+=p,d.push(p);const m=s.disableWrapAround&&g>0?null:this._fetchPixels(n,p,i,s);o.push(m)}const p=(await Promise.all(o)).map((e=>e?.pixelBlock));let m=null;const y={width:t,height:i};return m=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:d},s)).pixelBlock:(0,H.z7)(p,y,{blockWidths:d}),{extent:e,srcExtent:(0,W._l)(e,this.rasterInfo.spatialReference,s.datumTransformation),pixelBlock:m}}async fetchRawPixels(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};t={x:Math.floor(t.x),y:Math.floor(t.y)};const n=await this._fetchRawTiles(e,t,i,s),{nativeExtent:r,nativePixelSize:a,storageInfo:o}=this.rasterInfo,l=2**e,c=a.x*l,u=a.y*l,h=new $.A({xmin:r.xmin+c*t.x,xmax:r.xmin+c*(t.x+i.width-1),ymin:r.ymax-u*(t.y+i.height-1),ymax:r.ymax-u*t.y,spatialReference:r.spatialReference});if(!n)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:f,mosaicSize:d}=n;if(1===f.length&&null!=f[0]&&f[0].width===i.width&&f[0].height===i.height)return{extent:h,srcExtent:h,pixelBlock:n.pixelBlocks[0]};const p=e>0?o.pyramidBlockWidth:o.blockWidth,m=e>0?o.pyramidBlockHeight:o.blockHeight,y={x:t.x%p,y:t.y%m};let g;return g=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:d,destDimension:i,clipOffset:y,clipSize:i,coefs:null,sampleSpacing:null,interpolation:s.interpolation,alignmentInfo:null,blockWidths:null},s)).pixelBlock:(0,H.z7)(f,d,{clipOffset:y,clipSize:i}),{extent:h,srcExtent:h,pixelBlock:g}}fetchRawTile(e,t,i,s){throw new a.A("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,W._l)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,z.D)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const{customFetchParameters:s}=this.ioConfig,{range:n,query:r,headers:a}=t;i=i??t.retryCount??this.ioConfig.retryCount;const o=n?{Range:`bytes=${n.from}-${n.to}`}:null;try{return await(0,v.default)(e,{...t,query:{...r,...s},headers:{...a,...o}})}catch(l){if(i>0)return i--,this.request(e,t,i);throw l}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return null==t||null==e||0===e.length?null:(0,E.NG)(e,t)}getTileExtentFromTileInfo(e,t,i,s){const n=s.lodAt(e);return this.getTileExtent({x:n.resolution,y:n.resolution},t,i,s.origin,s.spatialReference,s.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:s}=this.rasterInfo,{pyramidResolutions:n}=e;if(!e.tileInfo){const r=[],a=e.maximumPyramidLevel||0;let o=(s.x+s.y)/2,l=1/.0254*96*o;for(let e=0;e<=a&&(r.unshift(new N.A({level:a-e,resolution:o,scale:l})),e!==a);e++)if(n){const t=(n[e].x+n[e].y)/2;l*=t/o,o=t}else o*=2,l*=2;const c=new q.A({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new k.A({origin:c,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:512,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:512,s=arguments.length>3?arguments[3]:void 0;const{width:n,height:r,nativeExtent:a,pixelSize:o,spatialReference:l}=e,c=new q.A({x:a.xmin,y:a.ymax,spatialReference:l});null==s&&(s=Math.max(0,Math.round(Math.log(Math.max(n,r))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],s);e.storageInfo=new J.A({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:s,blockBoundary:u})}async computeBestPyramidLevelForLocation(e){return 0}computeBlockBoundary(e,t,i,s,n){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:2;if(1===n.length&&r>0){n=[...n];let{x:e,y:t}=n[0];for(let i=0;i<r;i++)e*=a,t*=a,n.push({x:e,y:t})}const o=[],{x:l,y:c}=s;for(let u=0;u<n.length;u++){const{x:s,y:r}=n[u];o.push({minCol:Math.floor((e.xmin-l+.1*s)/t/s),maxCol:Math.floor((e.xmax-l-.1*s)/t/s),minRow:Math.floor((c-e.ymax+.1*r)/i/r),maxRow:Math.floor((c-e.ymin-.1*r)/i/r)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:s}=this.rasterInfo.storageInfo;if(0===e)return t;if(null!=i&&i.length)return i[e-1];const n=s**e;return{x:t.x*n,y:t.y*n}}identifyPixelLocation(e,t,i,s){const{spatialReference:n,nativeExtent:r,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=a,u=s&&null!=c?c.tileSize[0]:a.blockWidth,h=s&&null!=c?c.tileSize[1]:a.blockHeight,f=(0,W._I)(e,n,i);if(!r.intersects(f))return null;if(t<0||t>o)return null;const d=this.getPyramidPixelSize(t),{x:p,y:m}=d,y=(l.y-f.y)/m/h,g=(f.x-l.x)/p/u,x=Math.min(h-1,Math.floor((y-Math.floor(y))*h)),w=Math.min(u-1,Math.floor((g-Math.floor(g))*u));return{pyramidLevel:t,row:Math.floor(y),col:Math.floor(g),rowOffset:x,colOffset:w,blockWidth:u,srcLocation:f}}getTileExtent(e,t,i,s,n,r){const[a,o]=r,l=s.x+i*a*e.x,c=l+a*e.x,u=s.y-t*o*e.y,h=u-o*e.y;return new $.A({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:n})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const s=this.rasterInfo.storageInfo.blockBoundary[e];return!s||s.maxRow<t||s.maxCol<i||s.minRow>t||s.minCol>i}updateImageSpaceRasterInfo(e){const{pixelSize:t}=e,{width:i,height:s}=e,n=j.A.WebMercator;e.spatialReference=n,e.extent=e.nativeExtent=new $.A({xmin:-.5,ymax:.5,xmax:i-.5,ymin:.5-s,spatialReference:n}),e.isPseudoSpatialReference=!0,e.transform=null,e.pixelSize=new q.A({x:1,y:1,spatialReference:n});const{extent:r,storageInfo:a}=e;if(a){a.origin=new q.A({x:r.xmin,y:r.ymax,spatialReference:n});const{pyramidResolutions:i,tileInfo:s}=a;if(i&&i.forEach((e=>{e.x/=t.x,e.y/=t.y})),s){s.origin=a.origin;const t=(e.nativePixelSize.x+e.nativePixelSize.y)/2;s.lods.forEach(((e,i)=>{e.resolution=t*2**i,e.scale=96*e.resolution/.0254}))}}}async _fetchPixels(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=(0,W.OM)(e);if(n>=2)return{extent:e,pixelBlock:null};const r=this._getSourceDataInfo(e,t,i,s),{pyramidLevel:a,srcResolution:o,srcExtent:l,srcWidth:c,srcHeight:u,ul:h}=r;if(0===c||0===u)return{extent:e,srcExtent:l,pixelBlock:null};const{rasterInfo:f}=this,d=f.transform,p="gcs-shift"===d?.type,m=null!=(0,W.FT)(e.spatialReference);!p&&m||(n=(0,W.OM)(r.srcExtent,p));const y=await this._fetchRawTiles(a,h,{width:c,height:u,wrapCount:n},s);if(!y)return{extent:e,srcExtent:l,pixelBlock:null};const g=f.storageInfo,x=a>0?g.pyramidBlockWidth:g.blockWidth,w=a>0?g.pyramidBlockHeight:g.blockHeight;let{x:v,y:b}=f.pixelSize;if(a>0){const{pyramidResolutions:e,pyramidScalingFactor:t}=g;if(null!=e&&e[a-1])({x:v,y:b}=e[a-1]);else{const e=t**a;v*=e,b*=e}}const I=f.spatialReference,R=new q.A({x:v,y:b,spatialReference:I}),_=x===c&&w===u&&h.x%x==0&&h.y%w==0,S=new q.A({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),T=!e.spatialReference.equals(I),A=I.isGeographic?1e-9:1e-4,{datumTransformation:M}=s;if(!T&&_&&1===y.pixelBlocks.length&&x===t&&w===i&&function(e,t,i){return Math.abs(e.x-t.x)<i&&Math.abs(e.y-t.y)<i}(o,S,A))return{extent:e,srcExtent:l,srcTilePixelSize:R,pixelBlock:y.pixelBlocks[0]};const F=m&&null!=(0,W.FT)(l.spatialReference)&&this._hasNoneOrGCSShiftTransform,O=s.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");O&&!this.rasterJobHandler&&await(0,W.Hh)();const C=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:y.extent,pixelSize:S.toJSON(),datumTransformation:M,rasterTransform:d,hasWrapAround:n>0||F,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:O},s):(0,W.l0)({projectedExtent:e,srcBufferExtent:y.extent,pixelSize:S,datumTransformation:M,rasterTransform:d,hasWrapAround:n>0||F,isAdaptive:!1,includeGCSGrid:O});let k;const P=!s.requestRawData,D={rows:C.spacing[0],cols:C.spacing[1]},N=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(a,y.extent.xmin):void 0,{pixelBlocks:J,mosaicSize:E,isPartiallyFilled:B}=y;let L=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:J,srcMosaicSize:E,destDimension:P?{width:t,height:i}:null,coefs:P?C.coefficients:null,sampleSpacing:P?D:null,projectDirections:O,gcsGrid:O?C.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:s.interpolation,alignmentInfo:N,blockWidths:null},s);({pixelBlock:k,localNorthDirections:L}=e)}else{const e=(0,H.z7)(J,E,{alignmentInfo:N});k=P?(0,H.$i)(e,{width:t,height:i},C.coefficients,D,s.interpolation):e,O&&C.gcsGrid&&(L=(0,H.QF)({width:t,height:i},C.gcsGrid),k=(0,G.Y2)(k,this.rasterInfo.dataType,L))}return s.requestRawData||O?{extent:e,srcExtent:l,srcTilePixelSize:R,pixelBlock:k,transformGrid:C,localNorthDirections:L,isPartiallyFilled:B}:{extent:e,srcExtent:l,srcTilePixelSize:R,pixelBlock:k}}async _fetchRawTiles(e,t,i,s){const{origin:n,blockBoundary:r}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:o}=this.getBlockWidthHeight(e);let{x:l,y:c}=t,{width:u,height:h,wrapCount:f}=i;const d=this._getRasterTileAlignmentInfo(e,0);s.buffer&&(l-=s.buffer.cols,c-=s.buffer.rows,u+=2*s.buffer.cols,h+=2*s.buffer.rows);let p=0,m=0,y=0;f&&null!=d&&(({worldColumnCountFromOrigin:m,originColumnOffset:y,rightPadding:p}=d),m*d.blockWidth-p>=l+u&&(p=0));const g=Math.floor(l/a),x=Math.floor(c/o),w=Math.floor((l+u+p-1)/a),v=Math.floor((c+h+p-1)/o),b=r[e];if(!b)return null;const{minRow:I,minCol:R,maxCol:_,maxRow:S}=b;if(0===f&&(v<I||w<R||x>S||g>_))return null;const T=new Array;let A=!1;const M=null==this.ioConfig.allowPartialFill?s.allowPartialFill:this.ioConfig.allowPartialFill;for(let N=x;N<=v;N++)for(let t=g;t<=w;t++){let i=t;if(!s.disableWrapAround&&f&&null!=d&&m<=t&&(i=t-m-y),N>=I&&i>=R&&S>=N&&_>=i){const t=this._tileFetchQueue.push({pyramidLevel:e,row:N,col:i,options:s},{signal:s.signal});M?T.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{A=!0,e(null)}))}))):T.push(t)}else T.push(Promise.resolve(null))}if(0===T.length)return null;const F=await Promise.all(T),O={height:(v-x+1)*o,width:(w-g+1)*a},{spatialReference:C}=this.rasterInfo,k=this.getPyramidPixelSize(e),{x:P,y:D}=k;return{extent:new $.A({xmin:n.x+g*a*P,xmax:n.x+(w+1)*a*P,ymin:n.y-(v+1)*o*D,ymax:n.y-x*o*D,spatialReference:C}),pixelBlocks:F,mosaicSize:O,isPartiallyFilled:A}}_fetchRawTile(e,t,i,s){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:r,minCol:a,maxCol:o,maxRow:l}=n;if(t<r||i<a||t>l||i>o)return Promise.resolve(null);const u=(0,B.ph)(this.rasterId,s.sliceId),h=`${e}/${t}/${i}`;let f=(0,B.gd)(u,s.registryId,h);if(null==f){const n=new AbortController;f=this.fetchRawTile(e,t,i,{...s,signal:n.signal}),(0,B.no)(u,s.registryId,h,f,n),f.catch((()=>(0,B.zo)(u,s.registryId,h)))}return s.signal&&(0,c.onAbort)(s,(()=>{(0,B.jX)(u,s.registryId,h)})),f}_computeMagDirValues(e){const{bandCount:t,dataType:i}=this.rasterInfo;if((2!==t||"vector-magdir"!==i)&&"vector-uv"!==i||2!==e?.length||!e[0]?.length)return null;const s=e[0].length;if("vector-magdir"===i){const t=e[1].map((e=>(e+360)%360));return[e[0],t]}const[n,r]=e,a=[],o=[];for(let l=0;l<s;l++){const[e,t]=(0,G.Lu)([n[l],r[l]]);a.push(e),o.push(t)}return[a,o]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlignmentInfo&&(this._rasterTileAlignmentInfo=(0,W.DO)(this.rasterInfo)),null==this._rasterTileAlignmentInfo.pyramidsInfo?null:{startX:t,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const n={datumTransformation:s.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};s.srcResolution&&(n.srcResolution=s.srcResolution,this._updateSourceDataInfo(e,n));const r=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=n,c=a/t,u=o/i,h=l<r&&c*u>=16,f=l===r&&this._requireTooManySrcTiles(a,o,t,i);if(h||f||0===a||0===o){const a=new q.A({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let o=(0,W.Wo)(a,this.rasterInfo.spatialReference,e,n.datumTransformation);const f=!o||s.srcResolution&&o.x+o.y<s.srcResolution.x+s.srcResolution.y;if(h&&s.srcResolution&&f){const e=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(r-l+3>=e){const t=2**e;o={x:s.srcResolution.x*t,y:s.srcResolution.y*t}}}o&&(n.srcResolution=o,this._updateSourceDataInfo(e,n))}return this._requireTooManySrcTiles(n.srcWidth,n.srcHeight,t,i)&&(n.srcWidth=0,n.srcHeight=0),n}_requireTooManySrcTiles(e,t,i,s){const{tileInfo:n}=this.rasterInfo.storageInfo,r=e/i,a=t/s;return Math.ceil(e/n.size[0])*Math.ceil(t/n.size[1])>=256*Math.max(1,(i+s)/1024)||r>8||a>8}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const{rasterInfo:i}=this,s=i.spatialReference,{srcResolution:n,datumTransformation:r}=t,{pyramidLevel:a,pyramidResolution:o,excessiveReading:l}=(0,W.t$)(n,i,this.ioConfig.sampling);if(l)return;let c=t.srcExtent||(0,W._l)(e,s,r);if(null==c)return;const u=i.transform;u&&(c=u.inverseTransform(c)),t.srcExtent=c;const{x:h,y:f}=i.storageInfo.origin,d=Math.floor((c.xmin-h)/o.x+.1),p=Math.floor((f-c.ymax)/o.y+.1),m=Math.floor((c.xmax-h)/o.x-.1),y=Math.floor((f-c.ymin)/o.y-.1),g=c.width<.1*o.x?0:m-d+1,x=c.height<.1*o.y?0:y-p+1;t.pyramidLevel=a,t.pyramidResolution=o,t.srcWidth=g,t.srcHeight=x,t.ul={x:d,y:p}}_getRequestOptionsWithSliceId(e){return null!=this.rasterInfo.multidimensionalInfo&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:s,pyramidLevel:n,useTransposedTile:r}=t,a=e.pixels[0].length/e.width/e.height;if(e.mask&&!e.mask[s])return{location:i,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(null==o||!r){const t=e.pixels.map((e=>e[s])),r={location:i,value:t,pyramidLevel:n},a=this._computeMagDirValues(t.map((e=>[e])));return a?.length&&(r.magdirValue=a.map((e=>e[0]))),r}let l=e.pixels.map((e=>e.slice(s*a,s*a+a))),c=this._computeMagDirValues(l);const{requestSomeSlices:u,identifyOptions:h}=t;let f=(0,E.QW)(o,h.transposedVariableName);if(u){const e=(0,E.xx)(f,h.multidimensionalDefinition,h.timeExtent);l=l.map((t=>e.map((e=>t[e])))),c=c?.map((t=>e.map((e=>t[e])))),f=e.map((e=>f[e]))}const d=e.noDataValues||this.rasterInfo.noDataValue,p={pixels:l,pixelType:e.pixelType};let m;return null!=d&&((0,L.Sp)(p,d),m=p.mask),{location:i,value:null,dataSeries:f.map(((e,t)=>{const i={value:0===m?.[t]?null:l.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition.map((e=>new A.A({...e,isSlice:!0})))};return c?.length&&(i.magdirValue=[c[0][t],c[1][t]]),i})),pyramidLevel:n}}};(0,s._)([(0,h.MZ)()],V.prototype,"_rasterTileAlignmentInfo",void 0),(0,s._)([(0,h.MZ)()],V.prototype,"_tileFetchQueue",void 0),(0,s._)([(0,h.MZ)({readOnly:!0})],V.prototype,"_isGlobalWrappableSource",null),(0,s._)([(0,h.MZ)({readOnly:!0})],V.prototype,"_hasNoneOrGCSShiftTransform",null),(0,s._)([(0,h.MZ)()],V.prototype,"_openPromise",void 0),(0,s._)([(0,h.MZ)()],V.prototype,"rasterJobHandler",null),(0,s._)([(0,h.MZ)({readOnly:!0})],V.prototype,"rasterId",null),(0,s._)([(0,h.MZ)(T.OZ)],V.prototype,"url",null),(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],V.prototype,"datasetName",void 0),(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],V.prototype,"datasetFormat",void 0),(0,s._)([(0,h.MZ)()],V.prototype,"hasUniqueSourceStorageInfo",void 0),(0,s._)([(0,h.MZ)()],V.prototype,"rasterInfo",void 0),(0,s._)([(0,h.MZ)()],V.prototype,"ioConfig",void 0),(0,s._)([(0,h.MZ)()],V.prototype,"sourceJSON",void 0),V=(0,s._)([(0,p.$)("esri.layers.support.rasterDatasets.BaseRaster")],V);const Y=V;var X=i(61229),K=i(77725);let Q=class extends Y{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}async fetchPixels(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{rasters:n,rasterIds:r}=this.primaryRasters;let a=!1;const{interpolation:o}=s,l=this.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!s.requestRawData&&l&&(a=1===n.length&&!s.skipRasterFunction,s={...s,interpolation:"bilinear",requestRawData:a});const c=n.map((n=>n.fetchPixels(e,t,i,s))),u=await Promise.all(c),h=u.map((e=>e.pixelBlock)),f=a||s.requestRawData?u.map((e=>e.srcTilePixelSize)):null;if(s.skipRasterFunction||h.every((e=>null==e)))return u[0];const d=u.find((e=>null!=e.pixelBlock))?.extent??e;let p=this.rasterJobHandler?await this.rasterJobHandler.process({extent:d,primaryPixelBlocks:h,primaryPixelSizes:f,primaryRasterIds:r}):this.rasterFunction.process({extent:d,primaryPixelBlocks:h,primaryPixelSizes:f,primaryRasterIds:r});const{transformGrid:m}=u[0];if(!a||null==p||null==m){const e=s.noClip?null:this.getClippingGeometry(d.spatialReference);return s.noClip||s.requestRawData||null==p||!e||(p=await(0,X.$Q)(p,d,e)),{...u[0],pixelBlock:p}}const y={rows:m.spacing[0],cols:m.spacing[1]};let g;g=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[p],srcMosaicSize:{width:p.width,height:p.height},destDimension:{width:t,height:i},coefs:m.coefficients,sampleSpacing:y,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:o,alignmentInfo:void 0,blockWidths:null},s)).pixelBlock:(0,H.$i)(p,{width:t,height:i},m.coefficients,y,o);const x=s.noClip?null:this.getClippingGeometry(e.spatialReference);return s.noClip||s.requestRawData||null==g||null==x||(g=await(0,X.$Q)(g,e,x)),{extent:e,srcExtent:u[0].srcExtent,pixelBlock:g}}getClippingGeometry(e){const t=this._clippingGeometry.get("0");if(!e||!t)return t;const i=function(e){return String(e.wkid??e.wkt??e.wkt2)}(e);let s=this._clippingGeometry.get(i);return null!=s||(s=e.equals(t.spatialReference)?t:(0,W.uk)(t,e),this._clippingGeometry.set(i,s)),s}async _open(e){const{rasterFunction:t}=this;this.primaryRasters?.rasters?.length?t.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=t.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach((e=>e.rasterJobHandler=this.rasterJobHandler)));const{rasters:i,rasterIds:s}=this.primaryRasters,n=i.map((t=>t.rasterInfo?void 0:t.open(e)));await Promise.all(n);const r=i.map((e=>{let{rasterInfo:t}=e;return t})),o=t.bind({rasterInfos:r,rasterIds:s});if(t.rawSourceRasterInfos=r,!o.success||0===r.length)throw new a.A("raster-function:open",`cannot bind the function: ${o.error??""}`);const l="Table"===t.functionName?t:t.functionArguments?.raster;"Table"===l?.functionName&&(t.rasterInfo.attributeTable=K.default.fromJSON(l.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const c=r[0];this.hasUniqueSourceStorageInfo=1===r.length||r.slice(1).every((e=>function(e,t){const{storageInfo:i,pixelSize:s,spatialReference:n,extent:r}=e,{storageInfo:a,pixelSize:o,spatialReference:l,extent:c}=t;return s.x===o.x&&s.y===o.y&&n.equals(l)&&r.equals(c)&&i.blockHeight===a.blockHeight&&i.blockWidth===a.blockWidth&&i.maximumPyramidLevel===a.maximumPyramidLevel}(e,c))),this.set("sourceJSON",i[0].sourceJSON),this.set("rasterInfo",t.rasterInfo),await this._updateClipGeometry()}async syncJobHandler(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)}async _updateClipGeometry(){const e=this.rasterFunction.getClippingGeometries()[0];let t=e?.clippingGeometry;if(t&&"inside"===e.clippingType){const{extent:e}=this.rasterInfo,{difference:s,densify:n}=await Promise.all([i.e(52612),i.e(63391)]).then(i.bind(i,63391));let r=n(P.A.fromExtent(e),2*(e.width+e.height)/40);r=(0,W.uk)(r,t.spatialReference),t=s(r,t)}this._clippingGeometry.clear(),t&&this._clippingGeometry.set("0",t)}};(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],Q.prototype,"datasetFormat",void 0),(0,s._)([(0,h.MZ)()],Q.prototype,"tileType",void 0),(0,s._)([(0,h.MZ)()],Q.prototype,"rasterFunction",void 0),(0,s._)([(0,h.MZ)()],Q.prototype,"primaryRasters",void 0),Q=(0,s._)([(0,p.$)("esri.layers.support.rasterDatasets.FunctionRaster")],Q);const ee=Q;var te=i(81633),ie=i(86866),se=i(78937),ne=i(20118),re=i(46570),ae=i(46533);const oe=e=>{let t=class extends e{constructor(){super(...arguments),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation=null,this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster="Function"===(arguments.length<=0?void 0:arguments[0])?.raster?.datasetFormat}get fullExtent(){return this.serviceRasterInfo?.extent}set multidimensionalDefinition(e){this._set("multidimensionalDefinition",e),this.updateRenderer()}set rasterFunction(e){"none"===e?.functionName?.toLowerCase()&&(e=void 0),this._set("rasterFunction",e),this.updateRasterFunction()}get rasterInfo(){return(0,b.Lx)(o.A.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(e){this._set("url",(0,S.Jf)(e,o.A.getLogger(this)))}get renderer(){if("imagery-tile"!==this.type)return this.internalRenderer;const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const i=t?.find((t=>{let{name:i}=t;return i===e}));return i?.renderer.clone()}return this.internalRenderer}set renderer(e){"imagery-tile"===this.type&&(this.activePresetRendererName=null),this.internalRenderer=e}set internalRenderer(e){null==e&&null==this.rasterFunction?this._configDefaultRenderer("override"):(this._set("internalRenderer",e),this.updateRenderer())}readRenderer(e,t,i){const s=t?.layerDefinition?.drawingInfo?.renderer;return(0,w.LF)(s,i)||void 0}async convertVectorFieldData(e,t){const{serviceRasterInfo:i}=this;if(null==e||!i)return null;const s=this._rasterJobHandler.instance,n=i.dataType;return s?s.convertVectorFieldData({pixelBlock:e,dataType:n},t):(0,G.FI)(e,n)}async computeStatisticsHistograms(e,t){await this.load(t),e=(0,f.PZ)(re.A,e).clone();const{serviceRasterInfo:i}=this;if(null==i)throw new a.A("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");const{geometry:s}=e;if(null==s)throw new a.A("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let n=s;const{spatialReference:r}=i;s.spatialReference.equals(r)||(await(0,W.Hh)(),n="extent"===s.type?(0,W._l)(s,r):(0,W.uk)(s,r));const o=e.pixelSize??new q.A({x:i.pixelSize.x,y:i.pixelSize.y,spatialReference:r}),{extent:l,width:c,height:u}=(0,X.b7)(i,n,o),h=await this.fetchPixels(l,c,u,{...t,interpolation:"nearest"});if(null==h.pixelBlock)throw new a.A("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const d=await(0,X.$Q)(h.pixelBlock,l,n),p=this._rasterJobHandler.instance;return p?p.computeStatisticsHistograms({pixelBlock:d},t):(0,ie.eH)(d)}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,ae.CW)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.serviceRasterInfo??{};if(null==t)return e;let i=e.multidimensionalDefinition||this.multidimensionalDefinition;i?.length||(i=(0,E.fy)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const s=e.timeExtent||this.timeExtent;if(null!=i&&null!=s&&(null!=s.start||null!=s.end)){i=i.map((e=>e.clone()));const n=t.variables.find((e=>{let{name:t}=e;return t===i[0].variableName}))?.dimensions?.find((e=>{let{name:t}=e;return"StdTime"===t})),r=i.find((e=>{let{dimensionName:t}=e;return"StdTime"===t}));if(!n||!r)return{...e,multidimensionalDefinition:null};const{start:a,end:o}=s,l=null==a?null:a.getTime(),c=null==o?null:o.getTime(),u=l??c,h=c??l;if(null!=n.values){const e=n.values.filter((e=>{if(Array.isArray(e)){if(u===h)return e[0]<=u&&e[1]>=u;const t=e[0]<=u&&e[1]>u||e[0]<h&&e[1]>=h,i=e[0]>=u&&e[1]<=h||e[0]<u&&e[1]>h;return t||i}return u===h?e===u:e>=u&&e<=h}));if(e.length){const t=e.sort(((e,t)=>{const i=Array.isArray(e)?e[0]:e,s=Array.isArray(e)?e[1]:e,n=Array.isArray(t)?t[0]:t,r=Array.isArray(t)?t[1]:t;return u===h?i-n:Math.abs(s-h)-Math.abs(r-h)}))[0];r.values=[t]}else i=null}else if(n.hasRegularIntervals&&n.extent){const[e,t]=n.extent;u>t||h<e?i=null:r.values=u===h?[u]:[Math.max(e,u),Math.min(t,h)]}}return null!=i&&(0,E.sx)(i,this.multidimensionalSubset)?{...e,multidimensionalDefinition:null}:{...e,multidimensionalDefinition:i}}async updateRasterFunction(){if(!this.loaded||"imagery-tile"!==this.type||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&"Function"===this.raster.datasetFormat){const e=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&e&&this._set("rasterFunction",O.A.fromJSON(e)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let e,t=this.raster,i=!1;"Function"===t.datasetFormat?(e=t.primaryRasters.rasters,t=e[0],i=!0):e=[t];const{rasterFunction:s}=this;if(s){const i={raster:t};e.length>1&&e.forEach((e=>i[e.url]=e));const n=(0,te.vt)(s.functionDefinition?.toJSON()??s.toJSON(),i),r=new ee({rasterFunction:n});r.rasterJobHandler=this._rasterJobHandler.instance,await r.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=r}else this.raster=t,this._cachedRasterFunctionJson=null,await t.open();if(this._cachedRendererJson=null,!i&&!s)return;const{bandIds:n}=this,{bandCount:r}=this.raster.rasterInfo,a=n?.length?n.some((e=>e>=r)):r>=3;n&&(a||this.renderer&&"raster-stretch"!==this.renderer.type)&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:e,symbolizer:t}=this;if(!e||!t||!this.renderer)return;const{rasterInfo:i}=this.raster,s=(0,E.ct)(i,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),n=s?.name,r=(0,se.$P)({...this.renderer.toJSON(),variableName:n});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(r))return;const a=this._rasterJobHandler.instance;a&&(t.rasterInfo=(0,se.m7)(i,n),t.rendererJSON=r,t.bind(),await a.updateSymbolizer(t),this._cachedRendererJson=r)}async applyRenderer(e,t){const i=e?.pixelBlock;if(!(null!=i&&i.pixels&&i.pixels.length>0))return null;let s;await this.updateRenderer();const n=this._rasterJobHandler.instance,r=this.bandIds??[];return s=n?await n.symbolize({...e,simpleStretchParams:t,bandIds:r}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:r}),s}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this.loaded||null==t)return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const s=(0,_.Vp)(e);return k.A.create({size:256,spatialReference:e,origin:s?{x:s.origin[0],y:s.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent?.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(i(this),n.requestAsImageElement){const i=this.getTileUrl(e,t,s);return(0,v.default)(i,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then((e=>e.data))}const{serviceRasterInfo:r}=this;if(null!=r.multidimensionalInfo&&null==(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition){const i=n.tileInfo||r.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,s,i),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),"raster-shaded-relief"===this.renderer?.type&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,s,n)}async fetchPixels(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return null!=this.serviceRasterInfo.multidimensionalInfo&&null==(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),t=Math.round(t),i=Math.round(i),this.raster.fetchPixels(e,t,i,s))}async identify(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};await this.load();const{raster:i,serviceRasterInfo:s}=this;if(null!=s?.multidimensionalInfo&&(!s.hasMultidimensionalTranspose||!((0,E.DY)(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent))&&null==(t=this.normalizeRasterFetchOptions(t)).multidimensionalDefinition)return{location:e,value:null};const n=this.multidimensionalSubset?.areaOfInterest;if(n&&!n.contains(e))throw new a.A("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return i.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const e=this.serviceRasterInfo?.multidimensionalInfo;if(null==e||"standard-time"!==this.serviceRasterInfo?.dataType)return!1;const t=this.multidimensionalDefinition,i=t?.[0]?.variableName;return e.variables.some((e=>e.name===i&&(!t?.[0].dimensionName||e.dimensions.some((e=>"StdTime"===e.name)))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo?.multidimensionalInfo;return(0,E.z2)(this.multidimensionalSubset,t)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,E.fy)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&"Function"===this.raster.datasetFormat&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new C.A;return this._rasterJobHandler.connectionPromise=e.initialize().then((async()=>{i(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch((()=>{})),this.renderer&&this.updateRenderer()})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){i(this);const{raster:e}=this,t=(0,se.w6)(e.rasterInfo,e.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultRenderer(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"no";i(this);const{rasterInfo:t}=this.raster,s=(0,E.ct)(t,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),n=s?.name,r=(0,se.I8)({variableName:n,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&t.bandCount>1&&(this.bandIds=r?.bandIds??(0,se.ci)(t)),!this.renderer||"override"===e){const e=(0,se.Mm)(this.raster),i=r?.renderer??(0,se.PD)(t,{bandIds:this.bandIds,variableName:n,rasterFunctionColorRamp:e}),s=t.statistics,a=s&&s.length>0?s[0]:null,o=a?.max??0,l=a?.min??0;"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===i.type&&(o>1e24||l<-1e24)&&(i.dynamicRangeAdjustment=!0,i.customStatistics=null,"none"===i.stretchType&&(i.stretchType="min-max")),this.renderer=i}const a=(0,se.$P)({...this.renderer.toJSON(),variableName:n}),l=(0,se.m7)(t,n);this.symbolizer?(this.symbolizer.rendererJSON=a,this.symbolizer.rasterInfo=l):this.symbolizer=new ne.A({rendererJSON:a,rasterInfo:l});const c=this.symbolizer.bind();if(c.success){if("auto"===e){const{colormap:e}=this.raster.rasterInfo,t=this.renderer;if(null!=e&&"raster-colormap"===t.type){const e=(0,se.PD)(this.raster.rasterInfo);JSON.stringify(e)!==JSON.stringify(t)&&this._configDefaultRenderer("override")}else if("raster-stretch"===t.type){const e=this.bandIds?.length,i=t.customStatistics?.length;!t.dynamicRangeAdjustment&&i&&e&&i!==e&&this._configDefaultRenderer("override")}}}else o.A.getLogger(this).warn("imagery-tile-mixin",c.error||"The given renderer is not supported by the layer."),"auto"===e&&this._configDefaultRenderer("override")}};function i(e){if(!e.raster||!e.serviceRasterInfo)throw new a.A("imagery-tile","no raster")}return(0,s._)([(0,h.MZ)({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),(0,s._)([(0,h.MZ)({clonable:!1})],t.prototype,"_cachedRasterFunctionJson",void 0),(0,s._)([(0,h.MZ)({clonable:!1})],t.prototype,"_compatibleFullExtent",void 0),(0,s._)([(0,h.MZ)({clonable:!1})],t.prototype,"_isConstructedFromFunctionRaster",void 0),(0,s._)([(0,h.MZ)({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),(0,s._)([(0,h.MZ)({type:[f.jz],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],t.prototype,"bandIds",void 0),(0,s._)([(0,h.MZ)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,s._)([(0,h.MZ)({json:{read:!1}})],t.prototype,"fullExtent",null),(0,s._)([(0,h.MZ)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,I.e)(F.SZ)],t.prototype,"interpolation",void 0),(0,s._)([(0,h.MZ)()],t.prototype,"ioConfig",void 0),(0,s._)([(0,h.MZ)({type:[A.A],json:{write:!0}})],t.prototype,"multidimensionalDefinition",null),(0,s._)([(0,h.MZ)({type:M.A,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,s._)([(0,h.MZ)()],t.prototype,"raster",void 0),(0,s._)([(0,h.MZ)({type:O.A,json:{name:"renderingRule",write:!0}})],t.prototype,"rasterFunction",null),(0,s._)([(0,h.MZ)({readOnly:!0})],t.prototype,"rasterInfo",null),(0,s._)([(0,h.MZ)()],t.prototype,"serviceRasterInfo",void 0),(0,s._)([(0,h.MZ)()],t.prototype,"sourceJSON",void 0),(0,s._)([(0,h.MZ)({readOnly:!0,type:j.A,json:{read:!1}})],t.prototype,"spatialReference",void 0),(0,s._)([(0,h.MZ)({type:k.A})],t.prototype,"tileInfo",void 0),(0,s._)([(0,h.MZ)(T.OZ)],t.prototype,"url",null),(0,s._)([(0,h.MZ)()],t.prototype,"renderer",null),(0,s._)([(0,h.MZ)({types:w.uy,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const e="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!e}}},origins:{"web-scene":{types:w.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"internalRenderer",null),(0,s._)([(0,R.w)("internalRenderer")],t.prototype,"readRenderer",null),(0,s._)([(0,h.MZ)({clonable:!1})],t.prototype,"symbolizer",void 0),t=(0,s._)([(0,p.$)("esri.layers.mixins.ImageryTileMixin")],t),t};var le=i(11270),ce=i(94729),ue=i(8350),he=i(21617),fe=i(5682),de=i(78817),pe=i(44135),me=i(69539),ye=i(38042),ge=i(66486);function xe(e){return["x","e","east","long","longitude"].includes(e.toLowerCase())}function we(e){return["y","n","west","lat","latitude"].includes(e.toLowerCase())}function ve(e){const{axes:t}=e.domain,i=Object.keys(t),s=[],n=[];let r=-1,a=-1,o=[];for(let x=0;x<i.length;x++){const e=i[x];xe(e)?r=x:we(e)&&(a=x);const l=t[e],c=[];if("values"in l){l.values.forEach((e=>c.push("string"==typeof e?new Date(e).getTime():e)));const e=c[1]-c[0];s.push([c[0]-.5*e,c[c.length-1]+.5*e]),n.push(e)}else{const{start:e,stop:t,num:i}=l,r=(t-e)/(i-1);s.push([e-.5*r,t+.5*r]),n.push(r);for(let s=0;s<i;s++)c.push(e+r*s)}o.push({name:e,values:c,extent:[c[0],c[c.length-1]]})}r>-1&&-1===a?a=0===r?1:0:a>-1&&-1===r?r=0===a?1:0:-1===a&&-1===r&&(r=0,a=1),o=o.filter(((e,t)=>!(t===r||t===a)));const{referencing:l}=e.domain,c=l.find((e=>e.coordinates.includes(i[r]))).system.id,u=c?.slice(c.lastIndexOf("/")+1),h=null==u||"CRS84"===u?4326:Number(u),f=new j.A({wkid:h}),[d,p]=s[r],[m,y]=s[a],g=new $.A({xmin:d,xmax:p,ymin:m,ymax:y,spatialReference:f});return{width:Math.round(g.width/n[r]),height:Math.round(g.height/n[a]),extent:g,dimensions:o}}function be(e){const t=(0,ye.Z0)();return t?e[t]??Object.values(e)[0]:Object.values(e)[0]}function Ie(){return Math.round(255*Math.random())}function Re(e){let t=Number.MAX_VALUE,i=-Number.MAX_VALUE;for(let s=0;s<e.length;s++){const n=e[s];null!=n&&(n<t&&(t=n),n>i&&(i=n))}return(0,L.X1)(t,i)}function _e(e,t,i){const s=e.map(((e,i)=>({name:e,count:t[i]}))).sort(((e,t)=>e.name>t.name?-1:1)),n=(r=1,e=>r*=e.count);var r;const a=[...s.slice(1),{name:"",count:1}].reverse().map(n).reverse();let o=0;for(let l=e.length-1;l>=0;l--)o+=a[s.findIndex((t=>{let{name:i}=t;return i===e[l]}))]*(i%t[l]),i=Math.floor(i/t[l]);return o}function Se(e){const{width:t,height:i,extent:s,dimensions:n}=ve(e),{ranges:r}=e,a=Object.keys(r).sort(((e,t)=>e<t?-1:1)),o=[];for(let f=0;f<a.length;f++){const e=a[f];n?.length&&o.push({name:e,dimensions:n})}const l=function(e){const t={},{parameters:i}=e;if(!i)return t;for(const[s,n]of Object.entries(i)){const{type:e,description:i,unit:r,categoryEncoding:a,observedProperty:o}=n;if("Parameter"===e&&(t[s]={},i&&(t[s].description=be(i)),r&&(t[s].unit=r.label?be(r.label):null,t[s].symbol=r.symbol?.value),a)){const e=Object.entries(a).map(((e,t)=>({OID:t,Value:Number(e[1]),ClassName:e[0].slice(e[0].lastIndexOf("/")+1),Count:1})));let i=!1;o?.categories?.length&&(o.categories.forEach((t=>{if(!t.id)return;const s=t.id.slice(t.id.lastIndexOf("/")+1),n=e.find((e=>e.ClassName===s));if(!n)return;const r=t.label?be(t.label):null;if(n.Label=r,t.preferredColor){const e=me.A.fromHex(t.preferredColor);e&&(i=!0,n.Red=e.r,n.Green=e.g,n.Blue=e.b)}})),i&&e.forEach((e=>{null==e.Red&&(e.Red=Ie(),e.Green=Ie(),e.Blue=Ie())})));const n={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:e.map((e=>({attributes:e})))};i&&n.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),t[s].attributeTable=n}}return t}(e);o.forEach((e=>l[e.name]&&Object.assign(e,l[e.name])));const c=o.length?{variables:o}:void 0,u=[];for(let f=0;f<a.length;f++){const e=a[f],{values:s,dataType:o,axisNames:l,shape:c}=r[e],h=c.length>2?f*c.slice(0,-2).reduce(((e,t)=>e*t)):0,d=l.slice(0,-2),p=c.slice(0,-2),m="float"===o?"f32":Re(s),y=t*i,g=s.length/y;for(let r=0;r<g;r++){const e=ge.A.createEmptyBand(m,y),a=new Uint8Array(y).fill(255);let o=!1;const l=r*y;for(let t=0;t<y;t++){const i=s[l+t];null==i?(a[t]=0,o=!0):e[t]=i}if(0===f||n?.length){const s=new ge.A({width:t,height:i,mask:o?a:null,pixels:[e],pixelType:m});s.updateStatistics(),n?.length?u[_e(d,p,r)+h]=s:u.push(s)}else{const t=u[r];t.pixels.push(e),o?t.mask&&(t.mask=ge.A.combineBandMasks([t.mask,a])):t.mask=o?a:null}}}const h=Object.values(l).find((e=>e.attributeTable))?.attributeTable;return{extent:s,pixelBlocks:u,multidimensionalInfo:c,attributeTable:h,bandNames:c?void 0:a}}var Te=i(23032);let Ae=class extends Y{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this._pixelBlockTiles){const{rasterInfo:n}=this,[r,a]=n.storageInfo.tileInfo.size,{sliceId:o}=s,{pixelBlocks:l}=this.source,c={pixelBlock:null==o?l[0]:l[o],useBilinear:"thematic"!==n.dataType,tileSize:{width:r,height:a},level:e,row:t,col:i},u=this.rasterJobHandler?this.rasterJobHandler.clipTile(c,s):(0,H.J$)(c);return Promise.resolve(u)}const n=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(n)}async _open(e){const t=this.source,{pixelBlocks:i,attributeTable:s,statistics:n,histograms:r,name:a,nativeExtent:o,transform:l}=t,c=i[0],{width:u,height:h,pixelType:f}=c,d=t.extent??new $.A({xmin:-.5,ymin:.5,xmax:u-.5,ymax:h-.5,spatialReference:new j.A({wkid:3857})}),p=t.isPseudoSpatialReference??!t.extent,m={x:d.width/u,y:d.height/h},y={...t.keyProperties};s&&(y.DataType="Thematic");const g=new Te.A({width:u,height:h,pixelType:f,extent:d,nativeExtent:o,attributeTable:s,transform:l,pixelSize:m,spatialReference:d.spatialReference,bandCount:c.pixels.length,keyProperties:y,multidimensionalInfo:t.multidimensionalInfo,statistics:n,isPseudoSpatialReference:p,histograms:r});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(g),this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),g.multidimensionalInfo?await this._buildMDimStats(t.pixelBlocks,g.multidimensionalInfo):await this._buildInMemoryRaster(c,{width:512,height:512},e),g.multidimensionalInfo||(this.source=null),this.datasetName=a}async _buildInMemoryRaster(e,t,i){const{rasterInfo:s}=this,n=s.storageInfo.maximumPyramidLevel??0,r="thematic"!==s.dataType,o=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:n,useBilinear:r},i):Promise.resolve((0,H.lD)(e,t,n,r)),l=null!=s.statistics,u=null!=s.histograms,h=this.ioConfig.skipStatistics||l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,ie.f4)(e)),f=await(0,c.eachAlways)([o,h]);if(!f[0].value&&f[1].value)throw new a.A("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=f[0].value,l||(s.statistics=f[1].value?.statistics),u||(s.histograms=f[1].value?.histograms)}async _buildMDimStats(e,t,i){for(let s=0;s<t.variables.length;s++){const n=t.variables[s];if(n.statistics)continue;const r=n.dimensions.map((e=>new A.A({variableName:n.name,dimensionName:e.name,values:[e.values?.[0]??e.extent?.[0]],isSlice:!0}))),a=(0,E.NG)(r,t),o=null==a?null:e[a];if(null==o)continue;const l=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:o},i):(0,ie.eH)(o);n.statistics=l.statistics,n.histograms||(n.histograms=l.histograms)}}};(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],Ae.prototype,"datasetFormat",void 0),(0,s._)([(0,h.MZ)()],Ae.prototype,"source",void 0),(0,s._)([(0,h.MZ)()],Ae.prototype,"url",null),Ae=(0,s._)([(0,p.$)("esri.layers.support.rasterDatasets.InMemoryRaster")],Ae);const Me=Ae;let Fe=class extends Y{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,s)}async _open(e){const{extent:t,pixelBlocks:i,multidimensionalInfo:s,attributeTable:n,bandNames:r}=await this._fetchData(e),{statistics:a,histograms:o}=(0,ie.eH)(i[0]),l=r?.map((e=>({BandName:e}))),c={DataType:n?"Thematic":s?"Scientific":"Generic",BandProperties:l},u=new Me({source:{extent:t,pixelBlocks:i,attributeTable:n?K.default.fromJSON(n):null,multidimensionalInfo:s,statistics:a,histograms:o,keyProperties:c,isPseudoSpatialReference:!1}});await u.open(),this._inMemoryRaster=u;const h=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",h.slice(0,h.indexOf("."))),this._set("rasterInfo",u.rasterInfo)}async _fetchData(e){const t=this.source??(await this.request(this.url,{signal:e?.signal})).data,i="imagery-tile-layer:open-coverage-json";if("coverage"!==t.type?.toLowerCase()||"grid"!==t.domain?.domainType?.toLowerCase())throw new a.A(i,"Only coverage with Grid domain type is supported");if(!t.ranges)throw new a.A(i,"Missing ranges in the grid coverage data");if(!t.domain.referencing?.length)throw new a.A(i,"Missing domain referencing in the grid coverage data");const s=Object.values(t.ranges);for(let n=0;n<s.length;n++){const{axisNames:e,shape:t,type:r,values:o}=s[n];if(!("ndarray"===r.toLowerCase()&&o?.length&&e?.length&&t?.length))throw new a.A(i,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!xe(e[e.length-1])||!we(e[e.length-2]))throw new a.A(i,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return Se(t)}};(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],Fe.prototype,"datasetFormat",void 0),(0,s._)([(0,h.MZ)({constructOnly:!0})],Fe.prototype,"source",void 0),Fe=(0,s._)([(0,p.$)("esri.layers.support.rasterDatasets.CovJSONRaster")],Fe);const Oe=Fe;var Ce=i(18690);function ke(e,t){if(!e||!t)return[];let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=[];if(t){const n=ke(e,i);for(let e=0;e<n.length;e++)ke(n[e],t).forEach((e=>s.push(e)));return s}const n=e.getElementsByTagNameNS("*",i);if(!n||0===n.length)return[];for(let r=0;r<n.length;r++)s.push(n[r]||n.item(r));return s}function Pe(e,t){if(!e||!t)return null;let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=ke(e,i);return s.length>0?t?Pe(s[0],t):s[0]:null}function De(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const i=t?Pe(e,t):e;let s;return i?(s=i.textContent||i.nodeValue,s?s.trim():null):null}function Ne(e,t){return function(e,t){const i=ke(e,t),s=[];let n;for(let r=0;r<i.length;r++)n=i[r].textContent||i[r].nodeValue,n&&(n=n.trim(),""!==n&&s.push(n));return s}(e,t).map((e=>Number(e)))}function Je(e,t){const i=De(e,t);return Number(i)}function Ee(e,t){const i=e?.nodeName?.toLowerCase(),s=t.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===s}var Be=i(29754);function Le(e,t){if(!e||!t)return null;const i=[];for(let s=0;s<e.length;s++)i.push(e[s]),i.push(t[s]);return i}function ze(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new j.A({wkid:t});if(e=String(e).trim(),(0,_.jp)(e))return new j.A({wkt2:e});const i=e.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const s=i.indexOf("VERTCS"),n=i.indexOf("PROJCS"),r=n>-1?n:i.indexOf("GEOGCS");if(-1===r)return null;const a=e.slice(r,e.lastIndexOf("]",s)+1).trim(),o=e.slice(s,e.lastIndexOf("]")).trim();t=He(a);const l=new j.A(t?{wkid:t}:{wkt:a}),c=He(o);return c&&(l.vcsWkid=c),l}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(t=He(e),new j.A(0!==t?{wkid:t}:{wkt:e})):null}function He(e){const t=e.replaceAll("]","[").replaceAll('"',"").split("[").map((e=>e.trim())).filter((e=>""!==e)),i=t[t.length-1].split(","),s=i[0]?.toLowerCase();if(("epsg"===s||"esri"===s)&&e.endsWith('"]]')){const e=Number(i[1]);if(!isNaN(e)&&0!==e)return e}return 0}function We(e){if("pamdataset"!==e?.documentElement.tagName?.toLowerCase())return{};const t={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(Ee(e,"SRS")){if(!t.spatialReference){const i=De(e);t.spatialReference=ze(i)}}else if(Ee(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:i,transform:s}=function(e){const t=Pe(e,"GeodataXform"),i=ze(Je(t,"SpatialReference/WKID")||De(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:i,transform:null};const s=Je(t,"PolynomialOrder")??1,n=Ne(t,"CoeffX/Double"),r=Ne(t,"CoeffY/Double"),a=Ne(t,"InverseCoeffX/Double"),o=Ne(t,"InverseCoeffY/Double"),l=Le(n,r),c=Le(a,o);return{spatialReference:i,transform:l&&c&&l.length&&c.length?new Be.A({spatialReference:i,polynomialOrder:s,forwardCoefficients:l,inverseCoefficients:c}):null}}(e);t.transform=s,t.spatialReference||(t.spatialReference=i)}else ke(e,"MDI").forEach((e=>t.metadata[e.getAttribute("key")]=De(e)));else if(Ee(e,"PAMRasterBand")){const i=function(e){const t=Je(e,"NoDataValue"),i=Pe(e,"Histograms/HistItem"),s=Je(i,"HistMin"),n=Je(i,"HistMax"),r=Je(i,"BucketCount"),a=De(i,"HistCounts")?.split("|").map((e=>Number(e)));let o,l,c,u;ke(e,"Metadata/MDI").forEach((e=>{const t=Number(e.textContent??e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=t;break;case"STATISTICS_MAXIMUM":l=t;break;case"STATISTICS_MEAN":c=t;break;case"STATISTICS_STDDEV":u=t}}));const h=Je(e,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:a?.length&&null!=s&&null!=n?{min:s,max:n,size:r||a.length,counts:a}:null,sourceBandIndex:h,statistics:null!=o&&null!=l?{min:o,max:l,avg:c,stddev:u}:null}}(e);null!=i.sourceBandIndex&&null==t.rasterBands[i.sourceBandIndex]?t.rasterBands[i.sourceBandIndex]=i:t.rasterBands.push(i)}}));const i=t.rasterBands;if(i.length){const e=!!i[0].statistics;t.statistics=e?i.map((e=>e.statistics)).filter(Ce.Ru):null;const s=!!i[0].histogram;t.histograms=s?i.map((e=>e.histogram)).filter(Ce.Ru):null}return t}let Ge=class extends Y{fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,s)}async _open(e){const t=await this._fetchData(e);let{spatialReference:i,statistics:s,histograms:n,transform:r}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new j.A({wkid:3857})),n?.length&&null==s&&(s=(0,ie.Pg)(n));const{width:o,height:l}=t;let c=new $.A({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=r?r.forwardTransform(c):c;let h=!0;if(r){const e=r.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(r=null,c=u)}const f=new Me({source:{extent:u,nativeExtent:c,transform:r,pixelBlocks:[t],statistics:s,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(f.ioConfig.skipMapInfo=!0),await f.open(),f.source=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:e?.signal}),i=(0,z.g)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new a.A("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const s=i.toLowerCase(),n="gif"===s||"bmp"===s||!(0,d.A)("ios"),r=await this.decodePixelBlock(t,{format:s,useCanvas:n,hasNoZlibMask:!0});if(null==r)throw new a.A("image-aux-raster:open","the data cannot be decoded");return r}async _fetchAuxiliaryData(e){const t=e?.signal,{skipExtensions:i=[],skipMapInfo:s}=this.ioConfig,n=s||i.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:t}),r=this.datasetFormat,a="JPG"===r?"jgw":"PNG"===r?"pgw":"BMP"===r?"bpw":null,o=a&&i.includes(a)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+a,{responseType:"text",signal:t}),l=await(0,c.eachAlways)([n,o]);if(t?.aborted)throw(0,c.createAbortError)();const u=We(l[0].value?.data);if(!u.transform){const e=l[1].value?l[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;u.transform=6===e?.length?new Be.A({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return u}};(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],Ge.prototype,"datasetFormat",void 0),Ge=(0,s._)([(0,p.$)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Ge);const Ze=Ge;var qe=i(30726),$e=i(90534),je=i(82356),Ue=i(26855),Ve=i(25213);let Ye=class extends Y{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{storageInfo:n,extent:r}=this.rasterInfo,{transposeInfo:a}=n,o=null!=a&&!!s.transposedVariableName;if(this._slices&&!o&&null==s.sliceId)return null;const l=o?0:n.maximumPyramidLevel-e+this._levelOffset,c=`${this.url}/tile/${l}/${t}/${i}`,u=this._slices?o?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:h}=await this.request(c,{query:u,responseType:"array-buffer",signal:s.signal});if(!h)return null;const f=o?a.tileSize:n.tileInfo.size,d=await this.decodePixelBlock(h,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(null==d)return null;const p=n.blockBoundary[e];if("jpg"!==n.compression||i>p.minCol&&i<p.maxCol&&t>p.minRow&&t<p.maxRow)return d;const{origin:m,blockWidth:y,blockHeight:g}=n,{x:x,y:w}=this.getPyramidPixelSize(e),v=Math.round((r.xmin-m.x)/x)%y,b=Math.round((r.xmax-m.x)/x)%y||y,I=Math.round((m.y-r.ymax)/w)%g,R=Math.round((m.y-r.ymin)/w)%g||g,_=i===p.minCol?v:0,S=t===p.minRow?I:0,T=i===p.maxCol?b:y,A=t===p.maxRow?R:g;return(0,H.z$)(d,{x:_,y:S},{width:T-_,height:A-S}),d}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.statistics)),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.histograms)),n=await Promise.all([i,s]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),n[1]?.[0]?.counts?.length||(n[1]=null),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let s=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let r=n-s+this._levelOffset;const a=i.srcLocation;for(;r>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(r,i.row,i.col,t))break}catch{}if(r--,s++,i=this.identifyPixelLocation(a,s,t.datumTransformation),null===i)return null}return-1===r||null==i?null:s}async _open(e){const t=e?.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const s=i.data;if(this.sourceJSON=s,!s)throw new a.A("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!s.tileInfo)throw new a.A("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=s.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(s.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===s.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=s.name?.slice(s.name.indexOf("/")+1)??"";const n=await this._fetchRasterInfo({signal:t});if(null==n)throw new a.A("image-server-raster:open","cannot initialize image service");(0,Ve.E9)(n,s);const r="Map"===this.tileType?function(e,t){if(!e)return null;const{minScale:i,maxScale:s,minLOD:n,maxLOD:r}=t;if(null!=n&&null!=r)return k.A.fromJSON({...e,lods:e.lods.filter((e=>{let{level:t}=e;return null!=t&&t>=n&&t<=r}))});if(0!==i&&0!==s){const t=e=>Math.round(1e4*e)/1e4,n=i?t(i):1/0,r=s?t(s):-1/0;return k.A.fromJSON({...e,lods:e.lods.filter((e=>{const i=t(e.scale);return i<=n&&i>=r}))})}return k.A.fromJSON(e)}(s.tileInfo,s):k.A.fromJSON(s.tileInfo);(0,qe.Lw)(r);const[o,l]=this._computeMinMaxLOD(n,r),{extent:c,pixelSize:u}=n,h=.5/n.width*u.x,f=Math.max(u.x,u.y),{lods:d}=r;("Map"!==this.tileType&&0!==s.maxScale||Math.abs(u.x-u.y)>h||!d.some((e=>Math.abs(e.resolution-f)<h)))&&(u.x=u.y=o.resolution,n.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),n.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const p=o.level-l.level,[m,y]=r.size,g=[],x=[];d.forEach(((e,t)=>{e.level>=l.level&&e.level<=o.level&&g.push({x:e.resolution,y:e.resolution}),t<d.length-1&&x.push(Math.round(10*e.resolution/d[t+1].resolution)/10)})),g.sort(((e,t)=>e.x-t.x));const w=this.computeBlockBoundary(c,m,y,r.origin,g,p),v=g.length>1?g.slice(1):null;let b;s.transposeInfo&&(b={tileSize:[s.transposeInfo.rows,s.transposeInfo.cols],packetSize:n.keyProperties?._yxs.PacketSize??0});const I=x.length<=1||x.length>=3&&x.slice(0,-1).every((e=>e===x[0]))?x[0]??2:Math.round(10/(l.resolution/o.resolution)**(-1/p))/10;if(n.storageInfo=new J.A({blockWidth:r.size[0],blockHeight:r.size[1],pyramidBlockWidth:r.size[0],pyramidBlockHeight:r.size[1],pyramidResolutions:v,pyramidScalingFactor:I,compression:r.format,origin:r.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:r,transposeInfo:b,blockBoundary:w}),function(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&i?.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Ue.A,e.extent=e.transform.forwardTransform(t))}(n),this._set("rasterInfo",n),s.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:(0,$e.An)(this.url),url:this.url,tileServers:[]};this._tilemapCache=new je.d({layer:e})}}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),s=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),n=j.A.fromJSON(t.spatialReference||e.spatialReference),r=new q.A({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n});return new Te.A({width:i,height:s,bandCount:3,extent:$.A.fromJSON(e),spatialReference:n,pixelSize:r,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,s=(0,Ve.Tw)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),n=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then((e=>e.data?.slices)).catch((()=>null)):null,r=await Promise.all([s,n]);return this._slices=r[1],r[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_computeMinMaxLOD(e,t){const{pixelSize:i}=e,s=.5/e.width*i.x,{lods:n}=t,r=t.lodAt(Math.max.apply(null,n.map((e=>e.level)))),a=t.lodAt(Math.min.apply(null,n.map((e=>e.level)))),{tileType:o}=this;if("Map"===o)return this._levelOffset=n[0].level,[r,a];if("Raster"===o)return[n.find((e=>e.resolution===i.x))??r,a];const{minScale:l,maxScale:c}=this.sourceJSON;let u=r;c>0&&(u=n.find((e=>Math.abs(e.scale-c)<s)),u||(u=n.filter((e=>e.scale>c)).sort(((e,t)=>e.scale>t.scale?1:-1))[0]??r));let h=a;return l>0&&(h=n.find((e=>Math.abs(e.scale-l)<s))??a,this._levelOffset=h.level-a.level),[u,h]}};(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],Ye.prototype,"datasetFormat",void 0),(0,s._)([(0,h.MZ)()],Ye.prototype,"tileType",void 0),Ye=(0,s._)([(0,p.$)("esri.layers.support.rasterDatasets.ImageServerRaster")],Ye);const Xe=Ye;var Ke=i(10798);const Qe=new Map;Qe.set("Int8","s8"),Qe.set("UInt8","u8"),Qe.set("Int16","s16"),Qe.set("UInt16","u16"),Qe.set("Int32","s32"),Qe.set("UInt32","u32"),Qe.set("Float32","f32"),Qe.set("Float64","f32"),Qe.set("Double64","f32");const et=new Map;et.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),et.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),et.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),et.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let tt=class extends Y{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{blockWidth:n,blockHeight:r,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(e,t,i);if(!u||0===u.length)return null;if(0===u[0].from&&0===u[0].to){const e=new Uint8Array(n*r);return new ge.A({width:n,height:r,pixels:void 0,mask:e,validPixelCount:0})}const{bandIds:d}=this.ioConfig,p=this._getBandSegmentCount(),m=[];let y=0;for(y=0;y<p;y++)d&&!d.includes(y)||m.push(this.request(this._files.data,{range:{from:u[y].from,to:u[y].to},responseType:"array-buffer",signal:s.signal}));const g=await Promise.all(m),x=g.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),w=new Uint8Array(x),v=[];let b=0;for(y=0;y<p;y++)v.push(b),w.set(new Uint8Array(g[y].data),b),b+=g[y].data.byteLength;const I=et.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=await this.decodePixelBlock(w.buffer,{width:n,height:r,format:I,planes:d?.length||l,offsets:v,pixelType:c});if(null==R)return null;let{noDataValue:_}=this.rasterInfo;if(null!=_&&"lerc"!==I&&!R.mask&&(_=_[0],null!=_)){const e=R.width*R.height,t=new Uint8Array(e);if(Math.abs(_)>1e24)for(y=0;y<e;y++)Math.abs((R.pixels[0][y]-_)/_)>1e-6&&(t[y]=1);else for(y=0;y<e;y++)R.pixels[0][y]!==_&&(t[y]=1);R.mask=t}let S=0,T=0;if(h!==n||f!==r){let e=R.mask;if(e)for(y=0;y<r;y++)if(T=y*n,y<f)for(S=h;S<n;S++)e[T+S]=0;else for(S=0;S<n;S++)e[T+S]=0;else for(e=new Uint8Array(n*r),R.mask=e,y=0;y<f;y++)for(T=y*n,S=0;S<h;S++)e[T+S]=1}return R}async _open(e){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?e.signal:null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:s,files:n}=this._parseHeader(i.data),{skipMapInfo:r,skipExtensions:a=[]}=this.ioConfig;if(!a.includes("aux.xml")&&!r){const t=await this._fetchAuxiliaryData(e);null!=t&&(s.statistics=t.statistics??s.statistics,s.histograms=t.histograms,t.histograms&&null==s.statistics&&(s.statistics=(0,ie.Pg)(t.histograms)))}r&&this.updateImageSpaceRasterInfo(s),this._set("rasterInfo",s),this._files=n;const o=await this.request(n.index,{responseType:"array-buffer",signal:t});this._storageIndex=function(e){if(e.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let t,i,s,n,r,a;if(Ke.Z){for(i=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),s=new Uint8Array(n),r=0;r<e.byteLength/4;r++)for(a=0;a<4;a++)s[4*r+a]=i[4*r+3-a];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}(o.data);const{blockWidth:l,blockHeight:c}=this.rasterInfo.storageInfo,u=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:f}=this.rasterInfo,d=[],p=this._getBandSegmentCount();let m=0,y=-1;for(;m<this._storageIndex.length;){y++;const e=Math.ceil(h/l/u**y)-1,t=Math.ceil(f/c/u**y)-1;m+=(e+1)*(t+1)*p*4,d.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=d,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}_getBandSegmentCount(){return et.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:s,blockHeight:n,pyramidScalingFactor:r}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,f=0,d=0;for(h=0;h<e;h++)d=r**h,c=Math.ceil(a/s/d),u=Math.ceil(o/n/d),f+=c*u;d=r**e,c=Math.ceil(a/s/d),u=Math.ceil(o/n/d),f+=t*c+i,f*=4*l;const p=this._storageIndex.subarray(f,f+4*l);let m=0,y=0;const g=[];for(let x=0;x<l;x++)m=p[4*x]*2**32+p[4*x+1],y=m+p[4*x+2]*2**32+p[4*x+3],g.push({from:m,to:y});return{ranges:g,actualTileWidth:i<c-1?s:Math.ceil(a/d)-s*(c-1),actualTileHeight:t<u-1?n:Math.ceil(o/d)-n*(u-1)}}_parseHeader(e){const t=Pe(e,"MRF_META/Raster");if(!t)throw new a.A("mrf:open","not a valid MRF format");const i=Pe(t,"Size"),s=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),r=parseInt(i.getAttribute("c"),10),o=(De(t,"Compression")||"none").toLowerCase();if(!et.has(o))throw new a.A("mrf:open","currently does not support compression "+o);const l=De(t,"DataType")||"UInt8",c=Qe.get(l);if(null==c)throw new a.A("mrf:open","currently does not support pixel type "+l);const u=Pe(t,"PageSize"),h=parseInt(u.getAttribute("x"),10),f=parseInt(u.getAttribute("y"),10),d=Pe(t,"DataValues");let p,m;if(d&&(m=d.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map((e=>parseFloat(e))))),Pe(e,"MRF_META/CachedSource"))throw new a.A("mrf:open","currently does not support MRF referencing other data files");const y=Pe(e,"MRF_META/GeoTags"),g=Pe(y,"BoundingBox");let x,w=!1;if(null!=g){const e=parseFloat(g.getAttribute("minx")),t=parseFloat(g.getAttribute("miny")),i=parseFloat(g.getAttribute("maxx")),s=parseFloat(g.getAttribute("maxy")),n=De(y,"Projection")||"";let r=j.A.WGS84;if("LOCAL_CS[]"!==n)if(n.toLowerCase().startsWith("epsg:")){const e=Number(n.slice(5));isNaN(e)||0===e||(r=new j.A({wkid:e}))}else r=ze(n)??j.A.WGS84;else w=!0,r=new j.A({wkid:3857});x=new $.A(e,t,i,s),x.spatialReference=r}else w=!0,x=new $.A({xmin:-.5,ymin:.5-n,xmax:s-.5,ymax:.5,spatialReference:new j.A({wkid:3857})});const v=Pe(e,"MRF_META/Rsets"),b=parseInt(v?.getAttribute("scale")||"2",10),I=x.spatialReference,R=new J.A({origin:new q.A({x:x.xmin,y:x.ymax,spatialReference:I}),blockWidth:h,blockHeight:f,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:o,pyramidScalingFactor:b}),_=new q.A({x:x.width/s,y:x.height/n,spatialReference:I}),S=new Te.A({width:s,height:n,extent:x,isPseudoSpatialReference:w,spatialReference:I,bandCount:r,pixelType:c,pixelSize:_,noDataValue:p,storageInfo:R}),T=De(e,"datafile"),A=De(e,"IndexFile");return{rasterInfo:S,files:{mrf:this.url,index:A||this.url.replace(".mrf",".idx"),data:T||this.url.replace(".mrf",et.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return We(t)}catch{return null}}};(0,s._)([(0,h.MZ)()],tt.prototype,"_files",void 0),(0,s._)([(0,h.MZ)()],tt.prototype,"_storageIndex",void 0),(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],tt.prototype,"datasetFormat",void 0),tt=(0,s._)([(0,p.$)("esri.layers.support.rasterDatasets.MRFRaster")],tt);const it=tt;var st=i(50611);function nt(e){const t=e.fields,i=e.records,s=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",n=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),r=n.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[s]=o++,l=1;l<r.length;l++)t[r[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:n,features:a}}class rt{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const s=t.getUint32(4,!0),n=t.getUint16(8,!0),r=t.getUint16(10,!0),a={version:i,recordCount:s,headerByteCount:n,recordByteCount:r};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,st.w)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<s&&e.byteLength-o>r;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push((0,st.w)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const s=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(s.slice(0,4),10),parseInt(s.slice(4,6),10)-1,parseInt(s.slice(6,8),10)))}o+=t.length})),c.push(i)):o+=r}}return{header:a,fields:l,records:c,recordSet:nt({fields:l,records:c})}}}var at=i(87018),ot=i(48613);const lt=(e,t)=>e.get(t)?.values,ct=(e,t)=>e.get(t)?.values?.[0];let ut=class extends Y{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async fetchRawTile(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,i))return null;const n=await this._fetchRawTiffTile(e,t,i,!1,s);if(null!=n&&this._headerInfo.hasMaskBand){const r=await this._fetchRawTiffTile(e,t,i,!0,s);null!=r&&r.pixels[0]instanceof Uint8Array&&(n.mask=r.pixels[0])}return n}async _open(e){const t=e?e.signal:null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!i)throw new a.A("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:s,firstIFDPos:n,isBigTiff:r}=(0,at.uT)(i),l=[];await this._readIFDs(l,i,s,n,0,r?8:4,t);const{imageInfo:c,rasterInfo:u}=function(e){const t=(0,at.uc)(e),{width:i,height:s,tileWidth:n,tileHeight:r,planes:a,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:f,pyramidResolutions:d,tileBoundary:p,affine:m,metadata:y}=t,g=t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid;let x=ze(g),w=!!t.isPseudoGeographic;null==x&&(w=!0,x=new j.A({wkid:3857}));const v=new $.A({...t.extent,spatialReference:x}),b=new q.A(v?{x:v.xmin,y:v.ymax,spatialReference:x}:{x:0,y:0}),I=new J.A({blockWidth:n,blockHeight:r,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:l,origin:b,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidResolutions:d,blockBoundary:p}),R=new q.A({x:(v.xmax-v.xmin)/i,y:(v.ymax-v.ymin)/s,spatialReference:x}),_=y?{BandProperties:y.bandProperties,DataType:y.dataType}:{};let S=null;const T=ct(e[0],"PHOTOMETRICINTERPRETATION"),A=lt(e[0],"COLORMAP");if(T<=3&&A?.length>3&&A.length%3==0){S=[];const e=A.length/3;for(let t=0;t<e;t++)S.push([t,A[t]>>>8,A[t+e]>>>8,A[t+2*e]>>>8])}const M=new Te.A({width:i,height:s,bandCount:a,pixelType:o,pixelSize:R,storageInfo:I,spatialReference:x,isPseudoSpatialReference:w,keyProperties:_,extent:v,colormap:S,statistics:y?y.statistics:null});if(m?.length&&(M.nativeExtent=new $.A({xmin:-.5,ymin:.5-s,xmax:i-.5,ymax:.5,spatialReference:x}),M.transform=new Be.A({polynomialOrder:1,forwardCoefficients:[m[2]+m[0]/2,m[5]-m[3]/2,m[0],m[3],-m[1],-m[4]]}),M.extent=M.transform.forwardTransform(M.nativeExtent),M.pixelSize=new q.A({x:(v.xmax-v.xmin)/i,y:(v.ymax-v.ymin)/s,spatialReference:x}),I.origin.x=-.5,I.origin.y=.5),d){const{x:e,y:t}=M.pixelSize;d.forEach((i=>{i.x*=e,i.y*=t}))}return{imageInfo:t,rasterInfo:M}}(l),h=(0,at.zS)(l),f=(0,at.r9)(l);if(this._headerInfo={littleEndian:s,isBigTiff:r,ifds:l,pyramidIFDs:h,maskIFDs:f,...c},this._set("rasterInfo",u),!c.isSupported)throw new a.A("tiffraster:open","this tiff is not supported: "+c.message);if(!c.tileWidth)throw new a.A("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");u.isPseudoSpatialReference&&o.A.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const d=l[0].get("PREDICTOR")?.values?.[0],p=l[0].get("SAMPLEFORMAT")?.values?.[0];if(3===p&&2===d)throw new a.A("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:m,skipExtensions:y=[]}=this.ioConfig;if(!y.includes("aux.xml")&&!m){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&function(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=(0,ie.Pg)(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const i=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new q.A({x:(i.xmax-i.xmin)/t.width,y:(i.ymax-i.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=i}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}(t,u)}y.includes("vat.dbf")||1!==u.bandCount||"u8"!==u.pixelType||m||(u.attributeTable=await this._fetchAuxiliaryTable(e),null!=u.attributeTable&&(u.keyProperties.DataType="thematic")),m&&this.updateImageSpaceRasterInfo(u),this.updateTileInfo()}async _readIFDs(e,t,i,s,n){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:4,a=arguments.length>6?arguments[6]:void 0;if(!s)return null;(s>=t.byteLength||s<0)&&(t=(await this.request(this.url,{range:{from:s+n,to:s+n+this._bufferSize},responseType:"array-buffer",signal:a})).data,n=s+n,s=0);const o=await this._readIFD(t,i,s,n,ot.A.tiffTags,r,a);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,i,o.nextIFD-n,n,r,a)}async _readIFD(e,t,i,s){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ot.A.tiffTags,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:4,a=arguments.length>6?arguments[6]:void 0;if(!e)return null;const o=(0,at.JM)(e,t,i,s,n,r);if(o.success){const i=[];if(o.ifd?.forEach((e=>{e.values||i.push(e)})),i.length>0){const n=i.map((e=>e.offlineOffsetSize)).filter(Ce.Ru),r=Math.min.apply(null,n.map((e=>e[0])));if(Math.min.apply(null,n.map((e=>e[0]+e[1])))-r<=this._bufferSize){const{data:n}=await this.request(this.url,{range:{from:r,to:r+this._bufferSize},responseType:"array-buffer",signal:a});e=n,s=r,i.forEach((i=>(0,at.Cr)(e,t,i,s)))}}if(o.ifd?.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),n=i?.values;if(n&&n.length>4){const r=n[0]+"."+n[1]+"."+n[2],o=await this._readIFD(e,t,i.valueOffset+6-s,s,ot.A.geoKeys,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[r]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:s,to:s+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,s,ot.A.tiffTags,4,a)}}async _fetchRawTiffTile(e,t,i,s){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const r=this._getTileLocation(e,t,i,s);if(!r)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=r,u=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:n.signal}))),h=await Promise.all(u),f=h.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),d=1===h.length?h[0].data:new ArrayBuffer(f),p=[0],m=[0];if(h.length>1){const e=new Uint8Array(d);for(let t=0,i=0;t<h.length;t++){const s=h[t].data;e.set(new Uint8Array(s),i),p[t]=i,i+=s.byteLength,m[t]=s.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:m},width:y,height:g,planes:null,pixelType:null});if(null==x)return null;let w,v,b;if(o!==y||l!==g){let e=x.mask;if(e)for(w=0;w<g;w++)if(b=w*y,w<l)for(v=o;v<y;v++)e[b+v]=0;else for(v=0;v<y;v++)e[b+v]=0;else for(e=new Uint8Array(y*g),x.mask=e,w=0;w<l;w++)for(b=w*y,v=0;v<o;v++)e[b+v]=1}return x}_getTileLocation(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const{firstPyramidLevel:n,blockBoundary:r}=this.rasterInfo.storageInfo,a=0===e?0:e-(n-1),{_headerInfo:o}=this;if(!o)return null;const l=s?o.maskIFDs[a]:0===a?o?.ifds[0]:o?.pyramidIFDs[a-1];if(!l)return null;const c=(0,at.XO)(l,o),u=lt(l,"TILEOFFSETS");if(void 0===u)return null;const h=lt(l,"TILEBYTECOUNTS"),{minRow:f,minCol:d,maxRow:p,maxCol:m}=r[a];if(t>p||i>m||t<f||i<d)return null;const y=ct(l,"IMAGEWIDTH"),g=ct(l,"IMAGELENGTH"),x=ct(l,"TILEWIDTH"),w=ct(l,"TILELENGTH"),v=[];if(c){const{bandCount:e}=this.rasterInfo;for(let s=0;s<e;s++){const e=s*(p+1)*(m+1)+t*(m+1)+i;v[s]={from:u[e],to:u[e]+h[e]-1}}}else{const e=t*(m+1)+i;v.push({from:u[e],to:u[e]+h[e]-1})}for(let b=0;b<v.length;b++)if(null==v[b].from||!v[b].to||v[b].to<0)return null;return{ranges:v,ifd:l,actualTileWidth:i===m&&y%x||x,actualTileHeight:t===p&&g%w||w}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return We(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:e?.signal}),i=rt.parse(t);return i?.recordSet?K.default.fromJSON(i.recordSet):null}catch{return null}}};(0,s._)([(0,h.MZ)()],ut.prototype,"_files",void 0),(0,s._)([(0,h.MZ)()],ut.prototype,"_headerInfo",void 0),(0,s._)([(0,h.MZ)()],ut.prototype,"_bufferSize",void 0),(0,s._)([(0,h.MZ)({type:String,json:{write:!0}})],ut.prototype,"datasetFormat",void 0),ut=(0,s._)([(0,p.$)("esri.layers.support.rasterDatasets.TIFFRaster")],ut);const ht=ut,ft=new Map;ft.set("MRF",{desc:"Meta Raster Format",constructor:it}),ft.set("TIFF",{desc:"GeoTIFF",constructor:ht}),ft.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Xe}),ft.set("JPG",{desc:"JPG Raster Format",constructor:Ze}),ft.set("PNG",{desc:"PNG Raster Format",constructor:Ze}),ft.set("GIF",{desc:"GIF Raster Format",constructor:Ze}),ft.set("BMP",{desc:"BMP Raster Format",constructor:Ze}),ft.set("CovJSON",{desc:"COVJSON Raster Format",constructor:Oe}),ft.set("MEMORY",{desc:"In Memory Raster Format",constructor:Me});class dt{static get supportedFormats(){const e=new Set;return ft.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,source:s,sourceJSON:n}=e;let r=e.datasetFormat??i?.datasetFormat;null==r&&(t.includes(".")?r=t.slice(t.lastIndexOf(".")+1).toUpperCase():"coverage"===s?.type?.toLowerCase()?r="CovJSON":s?.extent&&s.pixelblocks&&(r="MEMORY")),"OVR"===r||"TIF"===r?r="TIFF":"JPG"===r||"JPEG"===r||"JFIF"===r?r="JPG":"COVJSON"===r&&(r="CovJSON"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(r="RasterTileServer");const o={url:t,source:s,sourceJSON:n,datasetFormat:r,ioConfig:i??{bandIds:null,sampling:null}};if(Object.keys(o).forEach((e=>{null==o[e]&&delete o[e]})),r){if(!this.supportedFormats.has(r))throw new a.A("rasterfactory:open","not a supported format "+r);if("CRF"===r)throw new a.A("rasterfactory:open",`cannot open raster: ${t}`);const i=new(0,ft.get(r).constructor)(o);return await i.open({signal:e.signal}),i}const l=Array.from(ft.keys()).filter((e=>"CovJSON"!==e&&"Memory"!==e));let c=0;const u=()=>{if(r=l[c++],!r)return null;if("CRF"===r)return null;const t=new(0,ft.get(r).constructor)(o);return t.open({signal:e.signal}).then((()=>t)).catch((()=>u()))};return u()}static register(e,t,i){ft.has(e.toUpperCase())||ft.set(e.toUpperCase(),{desc:t,constructor:i})}}var pt=i(30973),mt=i(61701);let yt=class extends((0,g.dM)((0,fe.j)((0,le.q)((0,ce.A)((0,ue.H)((0,x.d)(oe((0,de.e)((0,y.b)((0,he.J)((0,l.P)((0,r.O)(m.A))))))))))))){constructor(){super(...arguments),this._primaryRasters=[],this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=(0,c.debounce)((async(e,t,s)=>{const{save:n,saveAs:r}=await i.e(20964).then(i.bind(i,20964));switch(e){case mt.X.SAVE:return n(this,t);case mt.X.SAVE_AS:return r(this,s,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.throwIfAbortError).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const e=[new pe.default({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new pe.default({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],t=this.raster?.rasterInfo??this.serviceRasterInfo,i=t?.attributeTable,s=null!=i?i.fields:null;if(s){const t=s.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));e.push(...t)}const n=t?.dataType,r=t?.multidimensionalInfo;if(("vector-magdir"===n||"vector-uv"===n)&&null!=r){const t=r.variables[0].unit?.trim(),i="Magnitude"+(t?` (${t})`:"");e.push(new pe.default({name:"Raster.Magnitude",alias:i,domain:null,editable:!1,type:"double"})),e.push(new pe.default({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return e}createPopupTemplate(e){const{rasterFields:t}=this,i=e?.visibleFieldNames??new Set(t.map((e=>{let{name:t}=e;return t})).filter((e=>"raster.servicepixelvalue.raw"!==e.toLowerCase()))),s=(0,pt.tn)({fields:t,title:this.title},{...e,visibleFieldNames:i}),{rasterInfo:n}=this.raster;return s?.fieldInfos&&n?.pixelType.startsWith("f")&&s.fieldInfos.forEach((e=>{let{format:t,fieldName:i}=e;t&&i&&/^raster\.(item|service)pixelvalue/i.test(i)&&(t.places=2)})),s}async generateRasterInfo(e,t){if(e=(0,f.PZ)(O.A,e),await this.load(),!e||"none"===e.functionName?.toLowerCase())return this.serviceRasterInfo;try{const{rasterInfo:i}=await this._openFunctionRaster(e,t);return i}catch(i){if(i instanceof a.A)throw i;throw new a.A("imagery-tile-layer","the given raster function is not supported")}}async save(e){return this._debouncedSaveOperations(mt.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(mt.X.SAVE_AS,t,e)}write(e,t){const i=this._primaryRasters[0]??this.raster;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a.A("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){let t=!1;if(this.raster)await this._openFromRaster(this.raster,e),t="Function"===this.raster.datasetFormat,!t&&this.rasterFunction&&(this._primaryRasters=[this.raster],await this._initializeWithFunctionRaster(this.rasterFunction));else{const{url:t,rasterFunction:i,source:s}=this;if(!t&&!s)throw new a.A("imagery-tile-layer:open","missing url or source parameter");s?await this._openFromSource(s,e):i?await this._openFromUrlWithRasterFunction(t,i,e):await this._openFromUrl(t,e)}const i=this.raster.rasterInfo;if(!i)throw new a.A("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",t?i:this._primaryRasters[0].rasterInfo),this._set("spatialReference",i.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}else this.read({tileInfo:this.serviceRasterInfo?.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,u.watch)((()=>this.customParameters),(e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)})))}async _openFromRaster(e,t){e.rasterInfo||await e.open({signal:t}),this._primaryRasters="Function"===e.datasetFormat?e.primaryRasters.rasters:[e],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(e,t,i){const s=[e];t&&(0,te.UD)(t.toJSON(),s);const n=await Promise.all(s.map((e=>dt.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:i})))),r=n.findIndex((e=>null==e));if(r>-1)throw new a.A("imagery-tile-layer:open",`cannot open raster: ${s[r]}`);return this._primaryRasters=n,this._initializeWithFunctionRaster(t)}async _openFromUrl(e,t){const i=await dt.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==i)throw new a.A("imagery-tile-layer:open",`cannot open raster: ${e}`);this._primaryRasters=[i],this.raster=i}async _openFromSource(e,t){const i="the tiled imagery data source is not supported",s="coverage"===e.type?.toLowerCase()?"CovJSON":e.extent&&e.pixelBlock?"MEMORY":null;if(!s)throw new a.A("imagery-tile-layer:open",i);"MEMORY"===s&&(e={...e,pixelBlock:void 0,pixelBlocks:[e.pixelBlock]});const n=await dt.open({url:"",source:e,datasetFormat:s,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==n)throw new a.A("imagery-tile-layer:open",i);this._primaryRasters=[n],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=n}async _openFunctionRaster(e,t){const i={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((e=>i[e.url]=e));const s=(0,te.vt)(e.functionDefinition?.toJSON()??e.toJSON(),i),n=new ee({rasterFunction:s});return await n.open(t),n}async _initializeWithFunctionRaster(e,t){try{this.raster=await this._openFunctionRaster(e,t)}catch(i){i instanceof a.A&&o.A.getLogger(this).error("imagery-tile-layer:open",i.message),o.A.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};(0,s._)([(0,h.MZ)({clonable:!1})],yt.prototype,"_primaryRasters",void 0),(0,s._)([(0,h.MZ)(T.fV)],yt.prototype,"legendEnabled",void 0),(0,s._)([(0,h.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],yt.prototype,"isReference",void 0),(0,s._)([(0,h.MZ)({type:["show","hide"]})],yt.prototype,"listMode",void 0),(0,s._)([(0,h.MZ)({json:{read:!0,write:!0}})],yt.prototype,"blendMode",void 0),(0,s._)([(0,h.MZ)()],yt.prototype,"sourceJSON",void 0),(0,s._)([(0,h.MZ)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],yt.prototype,"version",void 0),(0,s._)([(0,h.MZ)({readOnly:!0,json:{read:!1}})],yt.prototype,"type",void 0),(0,s._)([(0,h.MZ)({type:["ArcGISTiledImageServiceLayer"]})],yt.prototype,"operationalLayerType",void 0),(0,s._)([(0,h.MZ)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],yt.prototype,"popupEnabled",void 0),(0,s._)([(0,h.MZ)({type:n.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],yt.prototype,"popupTemplate",void 0),(0,s._)([(0,h.MZ)({readOnly:!0})],yt.prototype,"defaultPopupTemplate",null),(0,s._)([(0,h.MZ)({readOnly:!0,type:[pe.default]})],yt.prototype,"fields",void 0),(0,s._)([(0,h.MZ)({readOnly:!0,type:[pe.default]})],yt.prototype,"rasterFields",null),(0,s._)([(0,h.MZ)({constructOnly:!0})],yt.prototype,"source",void 0),yt=(0,s._)([(0,p.$)("esri.layers.ImageryTileLayer")],yt);const gt=yt},82356:(e,t,i)=>{i.d(t,{d:()=>_});var s,n=i(35143),r=i(3825),a=i(91967),o=i(55877),l=i(50076),c=i(54901),u=(i(81806),i(30952)),h=i(30015),f=i(50346),d=i(68134),p=i(52394),m=i(90534),y=i(46053),g=(i(76460),i(47249),i(85842)),x=i(11164),w=i(53084),v=i(78393);class b{constructor(e){!function(e){if(!e?.location)throw new l.A("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new l.A("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new l.A("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new l.A("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new l.A("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}(e);const{location:t,data:i}=e;this.location=Object.freeze((0,w.o8)(t));const s=this.location.width,n=this.location.height;let r=!0,a=!0;const o=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return e<=v.y9?t?new Array(e).fill(0):new Array(e):new Uint32Array(e)}(Math.ceil(s*n/32));let c=0;for(let l=0;l<i.length;l++){const e=l%32;i[l]?(a=!1,o[c]|=1<<e):r=!1,31===e&&++c}a?(this._availability="unavailable",this.byteSize=40):r?(this._availability="available",this.byteSize=40):(this._availability=o,this.byteSize=40+(0,v.Ek)(o))}getAvailability(e,t){if("unavailable"===this._availability||"available"===this._availability)return this._availability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),s=i%32,n=i>>5,r=this._availability;return n<0||n>r.length?"unknown":r[n]&1<<s?"available":"unavailable"}static fromDefinition(e,t){const i=e.service.request||r.default,{row:s,col:n,width:a,height:o}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(function(e){let t;if(e.service.tileServers?.length){const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}else t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then((e=>e.data)).catch((e=>{if(422===e?.details?.httpStatus)return{location:{top:s,left:n,width:a,height:o},valid:!0,data:new Array(a*o).fill(0)};throw e})).then((e=>{if(e.location&&(e.location.top!==s||e.location.left!==n||e.location.width!==a||e.location.height!==o))throw new l.A("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:s,left:n,width:a,height:o}});return b.fromJSON(e)}))}static fromJSON(e){return Object.freeze(new b(e))}}function I(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}function R(e,t,i){return new l.A("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})}let _=s=class extends a.A{constructor(e){super(e),this._pendingTilemapRequests={},this.request=r.default,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new u.q(2*o.u.MEGABYTES),this.addHandles((0,d.watch)((()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]}),(()=>this._initializeTilemapDefinition()),d.initial))}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,t,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const s=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return s?s.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,s){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(R(e,t,i)):this._fetchTilemap(e,t,i,s).catch((e=>e)).then((s=>{if(s instanceof b){const n=s.getAvailability(t,i);if("unavailable"===n)throw R(e,t,i);return n}if((0,f.isAbortError)(s))throw s;return"unknown"}))}fetchAvailabilityUpsample(e,t,i,s,n){s.level=e,s.row=t,s.col=i;const r=this.layer.tileInfo;r.updateTileInfo(s);const a=this.fetchAvailability(e,t,i,n).catch((e=>{if((0,f.isAbortError)(e))throw e;if(r.upsampleTile(s))return this.fetchAvailabilityUpsample(s.level,s.row,s.col,s,n);throw e}));return this._fetchAvailabilityUpsamplePrefetch(s.id,e,t,i,n,a),a}async _fetchAvailabilityUpsamplePrefetch(e,t,i,n,r,a){if(!this._prefetchingEnabled||null==e)return;const o=`prefetch-${e}`;if(this.hasHandles(o))return;const l=new AbortController;a.then((()=>l.abort()),(()=>l.abort()));let u=!1;const h=(0,c.hA)((()=>{u||(u=!0,l.abort())}));if(this.addHandles(h,o),await(0,p.md)(10,l.signal).catch((()=>{})),u||(u=!0,this.removeHandles(o)),(0,f.isAborted)(l))return;const d=new x.U(e,t,i,n),m={...r,signal:l.signal},y=this.layer.tileInfo;for(let c=0;s._prefetches.length<s._maxPrefetch&&y.upsampleTile(d);++c){const e=this.fetchAvailability(d.level,d.row,d.col,m);s._prefetches.push(e);const t=()=>{s._prefetches.removeUnordered(e)};e.then(t,t)}}_fetchTilemap(e,t,i,s){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new l.A("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const n=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,t,i,n);if(r)return Promise.resolve(r);const a=s?.signal;return s={...s,signal:null},new Promise(((e,t)=>{(0,f.onAbort)(a,(()=>t((0,f.createAbortError)())));const i=I(n);let r=this._pendingTilemapRequests[i];if(!r){r=b.fromDefinition(n,s).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>{delete this._pendingTilemapRequests[i]};this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)}))}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:i}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:(0,m.x0)({...e.query,...i,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,s){s.level=e,s.row=t-t%this.size,s.col=i-i%this.size;const n=I(s);return this._tilemapCache.get(n)}get test(){}};_._maxPrefetch=4,_._prefetches=new h.A({initialSize:s._maxPrefetch}),(0,n._)([(0,y.MZ)({constructOnly:!0})],_.prototype,"layer",void 0),(0,n._)([(0,y.MZ)({constructOnly:!0})],_.prototype,"minLOD",void 0),(0,n._)([(0,y.MZ)({constructOnly:!0})],_.prototype,"maxLOD",void 0),(0,n._)([(0,y.MZ)({constructOnly:!0})],_.prototype,"request",void 0),(0,n._)([(0,y.MZ)({constructOnly:!0})],_.prototype,"size",void 0),_=s=(0,n._)([(0,g.$)("esri.layers.support.TilemapCache")],_)}}]);
//# sourceMappingURL=48678.62e14365.chunk.js.map