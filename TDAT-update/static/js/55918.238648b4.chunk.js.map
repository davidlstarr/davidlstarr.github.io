{"version":3,"file":"static/js/55918.238648b4.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/input-date-picker/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/input-date-picker/input-date-picker.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/input-date-picker/utils.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/input-date-picker/input-date-picker.scss?tag=calcite-input-date-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/openCloseComponent.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/date.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/date-picker/utils.ts"],"sourcesContent":["export const CSS = {\n  assistiveText: \"assistive-text\",\n  calendarWrapper: \"calendar-wrapper\",\n  calendarWrapperEnd: \"calendar-wrapper--end\",\n  horizontalArrowContainer: \"horizontal-arrow-container\",\n  inputBorderTopColorOne: \"border-top-color-one\",\n  inputContainer: \"input-container\",\n  inputNoBottomBorder: \"no-bottom-border\",\n  inputWrapper: \"input-wrapper\",\n  input: \"input\",\n  menu: \"menu-container\",\n  menuActive: \"menu-container--active\",\n  toggleIcon: \"toggle-icon\",\n  verticalArrowContainer: \"vertical-arrow-container\",\n  chevronIcon: \"chevron-icon\",\n};\n\nexport const IDS = {\n  validationMessage: \"inputDatePickerValidationMessage\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { FocusTrap } from \"focus-trap\";\nimport {\n  dateFromISO,\n  dateFromLocalizedString,\n  dateFromRange,\n  datePartsFromISO,\n  datePartsFromLocalizedString,\n  dateToISO,\n  inRange,\n} from \"../../utils/date\";\nimport { focusFirstTabbable, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultMenuPlacement,\n  disconnectFloatingUI,\n  filterValidFlipPlacements,\n  FloatingCSS,\n  FloatingUIComponent,\n  FlipPlacement,\n  MenuPlacement,\n  OverlayPositioning,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  getSupportedNumberingSystem,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n  getDateFormatSupportedLocale,\n} from \"../../utils/locale\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { DatePickerMessages } from \"../date-picker/assets/date-picker/t9n\";\nimport { DateLocaleData, getLocaleData, getValueAsDateRange } from \"../date-picker/utils\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrapComponent,\n} from \"../../utils/focusTrapComponent\";\nimport { guid } from \"../../utils/guid\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Status } from \"../interfaces\";\nimport { Validation } from \"../functional/Validation\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { syncHiddenFormInput } from \"../input/common/input\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { normalizeToCurrentCentury, isTwoDigitYear } from \"./utils\";\nimport { InputDatePickerMessages } from \"./assets/input-date-picker/t9n\";\nimport { CSS, IDS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-input-date-picker\",\n  styleUrl: \"input-date-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class InputDatePicker\n  implements\n    FloatingUIComponent,\n    FocusTrapComponent,\n    FormComponent,\n    InteractiveComponent,\n    LabelableComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    OpenCloseComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, the component's value can be read, but controls are not accessible and the value cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  @Watch(\"disabled\")\n  @Watch(\"readOnly\")\n  handleDisabledAndReadOnlyChange(value: boolean): void {\n    if (!value) {\n      this.open = false;\n    }\n  }\n\n  /** Selected date as a string in ISO format (`\"yyyy-mm-dd\"`). */\n  @Prop({ mutable: true }) value: string | string[] = \"\";\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string | string[]): void {\n    if (!this.userChangedValue) {\n      let newValueAsDate: Date | Date[];\n\n      if (Array.isArray(newValue)) {\n        newValueAsDate = getValueAsDateRange(newValue);\n      } else if (newValue) {\n        newValueAsDate = dateFromISO(newValue);\n      } else {\n        newValueAsDate = undefined;\n      }\n\n      if (!this.valueAsDateChangedExternally && newValueAsDate !== this.valueAsDate) {\n        this.valueAsDate = newValueAsDate;\n      }\n\n      this.localizeInputValues();\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"valueAsDate\")\n  valueAsDateWatcher(valueAsDate: Date): void {\n    this.datePickerActiveDate = valueAsDate;\n    const newValue =\n      this.range && Array.isArray(valueAsDate)\n        ? [dateToISO(valueAsDate[0]), dateToISO(valueAsDate[1])]\n        : dateToISO(valueAsDate);\n    if (this.value !== newValue) {\n      this.valueAsDateChangedExternally = true;\n      this.value = newValue;\n      this.valueAsDateChangedExternally = false;\n    }\n  }\n\n  /**\n   * Specifies the component's fallback `calcite-date-picker` `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** The component's value as a full date object. */\n  @Prop({ mutable: true }) valueAsDate: Date | Date[];\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputDatePickerMessages & DatePickerMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputDatePickerMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** Specifies the earliest allowed date as a full date object. */\n  @Prop({ mutable: true }) minAsDate: Date;\n\n  /** Specifies the latest allowed date as a full date object. */\n  @Prop({ mutable: true }) maxAsDate: Date;\n\n  /** Specifies the earliest allowed date (\"yyyy-mm-dd\"). */\n  @Prop({ reflect: true }) min: string;\n\n  @Watch(\"min\")\n  onMinChanged(min: string): void {\n    this.minAsDate = dateFromISO(min);\n  }\n\n  /** Specifies the latest allowed date (\"yyyy-mm-dd\"). */\n  @Prop({ reflect: true }) max: string;\n\n  @Watch(\"max\")\n  onMaxChanged(max: string): void {\n    this.maxAsDate = dateFromISO(max);\n  }\n\n  /** When `true`, displays the `calcite-date-picker` component. */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n\n    if (this.disabled || this.readOnly) {\n      this.open = false;\n      return;\n    }\n\n    this.reposition(true);\n  }\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization. This property cannot be dynamically changed.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: \"s\" | \"m\" | \"l\" = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the placement of the `calcite-date-picker` relative to the component.\n   *\n   * @default \"bottom-start\"\n   */\n  @Prop({ reflect: true }) placement: MenuPlacement = defaultMenuPlacement;\n\n  /** When `true`, activates a range for the component. */\n  @Prop({ reflect: true }) range = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, disables the default behavior on the third click of narrowing or extending the range.\n   * Instead starts a new range.\n   */\n  @Prop() proximitySelectionDisabled = false;\n\n  /** Defines the layout of the component. */\n  @Prop({ reflect: true }) layout: \"horizontal\" | \"vertical\" = \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteDaySelect\")\n  calciteDaySelectHandler(): void {\n    if (this.shouldFocusRangeStart() || this.shouldFocusRangeEnd()) {\n      return;\n    }\n\n    this.open = false;\n  }\n\n  private calciteInternalInputInputHandler = (event: CustomEvent<any>): void => {\n    const target = event.target as HTMLCalciteInputElement;\n    const value = target.value;\n    const parsedValue = this.parseNumerals(value);\n    const formattedValue = this.formatNumerals(parsedValue);\n\n    target.value = formattedValue;\n\n    const { year } = datePartsFromLocalizedString(value, this.localeData);\n\n    if (year && year.length < 4) {\n      return;\n    }\n\n    const date = dateFromLocalizedString(value, this.localeData);\n\n    if (inRange(date, this.min, this.max)) {\n      this.datePickerActiveDate = date;\n    }\n  };\n\n  private calciteInternalInputBlurHandler = (): void => {\n    this.commitValue();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's `value` changes.\n   */\n  @Event({ cancelable: false }) calciteInputDatePickerChange: EventEmitter<void>;\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteInputDatePickerBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteInputDatePickerClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteInputDatePickerBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteInputDatePickerOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed If true, the repositioning is delayed.\n   * @returns void\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl,\n        referenceEl,\n        overlayPositioning,\n        placement,\n        flipPlacements: filteredFlipPlacements,\n        type: \"menu\",\n      },\n      delayed,\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    this.handleDateTimeFormatChange();\n\n    const { open } = this;\n    open && this.openHandler();\n\n    if (this.min) {\n      this.minAsDate = dateFromISO(this.min);\n    }\n\n    if (this.max) {\n      this.maxAsDate = dateFromISO(this.max);\n    }\n\n    if (Array.isArray(this.value)) {\n      this.valueAsDate = getValueAsDateRange(this.value);\n    } else if (this.value) {\n      try {\n        const date = dateFromISO(this.value);\n        const dateInRange = dateFromRange(date, this.minAsDate, this.maxAsDate);\n        this.valueAsDate = dateInRange;\n      } catch (error) {\n        this.warnAboutInvalidValue(this.value);\n        this.value = \"\";\n      }\n    } else if (this.valueAsDate) {\n      if (this.range && Array.isArray(this.valueAsDate)) {\n        this.value = [dateToISO(this.valueAsDate[0]), dateToISO(this.valueAsDate[1])];\n      } else if (!this.range && !Array.isArray(this.valueAsDate)) {\n        this.value = dateToISO(this.valueAsDate);\n      }\n    }\n\n    connectLabel(this);\n    connectForm(this);\n    connectMessages(this);\n\n    this.setFilteredPlacements();\n\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await Promise.all([this.loadLocaleData(), setUpMessages(this)]);\n    this.onMinChanged(this.min);\n    this.onMaxChanged(this.max);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.localizeInputValues();\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  disconnectedCallback(): void {\n    deactivateFocusTrap(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    const { disabled, effectiveLocale, messages, numberingSystem, readOnly } = this;\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem,\n      locale: effectiveLocale,\n      useGrouping: false,\n    };\n\n    return (\n      <Host onBlur={this.blurHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          {this.localeData && (\n            <div class={CSS.inputContainer}>\n              <div\n                class={CSS.inputWrapper}\n                data-position=\"start\"\n                onClick={this.onInputWrapperClick}\n                onPointerDown={this.onInputWrapperPointerDown}\n                ref={this.setStartWrapper}\n              >\n                <calcite-input-text\n                  aria-autocomplete=\"none\"\n                  aria-controls={this.dialogId}\n                  aria-describedby={this.placeholderTextId}\n                  aria-errormessage={IDS.validationMessage}\n                  aria-expanded={toAriaBoolean(this.open)}\n                  aria-haspopup=\"dialog\"\n                  aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n                  class={{\n                    [CSS.input]: true,\n                    [CSS.inputNoBottomBorder]: this.layout === \"vertical\" && this.range,\n                  }}\n                  disabled={disabled}\n                  icon=\"calendar\"\n                  onCalciteInputTextInput={this.calciteInternalInputInputHandler}\n                  onCalciteInternalInputTextBlur={this.calciteInternalInputBlurHandler}\n                  onCalciteInternalInputTextFocus={this.startInputFocus}\n                  placeholder={this.localeData?.placeholder}\n                  readOnly={readOnly}\n                  ref={this.setStartInput}\n                  role=\"combobox\"\n                  scale={this.scale}\n                  status={this.status}\n                />\n                {!this.readOnly &&\n                  this.renderToggleIcon(this.open && this.focusedInput === \"start\")}\n                <span aria-hidden=\"true\" class={CSS.assistiveText} id={this.placeholderTextId}>\n                  Date Format: {this.localeData?.placeholder}\n                </span>\n              </div>\n              <div\n                aria-hidden={toAriaBoolean(!this.open)}\n                aria-label={messages.chooseDate}\n                aria-live=\"polite\"\n                aria-modal=\"true\"\n                class={{\n                  [CSS.menu]: true,\n                  [CSS.menuActive]: this.open,\n                }}\n                id={this.dialogId}\n                ref={this.setFloatingEl}\n                role=\"dialog\"\n              >\n                <div\n                  class={{\n                    [CSS.calendarWrapper]: true,\n                    [CSS.calendarWrapperEnd]: this.focusedInput === \"end\",\n                    [FloatingCSS.animation]: true,\n                    [FloatingCSS.animationActive]: this.open,\n                  }}\n                  ref={this.setTransitionEl}\n                >\n                  <calcite-date-picker\n                    activeDate={this.datePickerActiveDate}\n                    activeRange={this.focusedInput}\n                    headingLevel={this.headingLevel}\n                    max={this.max}\n                    maxAsDate={this.maxAsDate}\n                    messageOverrides={this.messageOverrides}\n                    min={this.min}\n                    minAsDate={this.minAsDate}\n                    numberingSystem={numberingSystem}\n                    onCalciteDatePickerChange={this.handleDateChange}\n                    onCalciteDatePickerRangeChange={this.handleDateRangeChange}\n                    proximitySelectionDisabled={this.proximitySelectionDisabled}\n                    range={this.range}\n                    ref={this.setDatePickerRef}\n                    scale={this.scale}\n                    tabIndex={this.open ? undefined : -1}\n                    valueAsDate={this.valueAsDate}\n                  />\n                </div>\n              </div>\n\n              {this.range && this.layout === \"horizontal\" && (\n                <div class={CSS.horizontalArrowContainer}>\n                  <calcite-icon\n                    flipRtl={true}\n                    icon=\"arrow-right\"\n                    scale={getIconScale(this.scale)}\n                  />\n                </div>\n              )}\n              {this.range && this.layout === \"vertical\" && this.scale !== \"s\" && (\n                <div class={CSS.verticalArrowContainer}>\n                  <calcite-icon icon=\"arrow-down\" scale={getIconScale(this.scale)} />\n                </div>\n              )}\n              {this.range && (\n                <div\n                  class={CSS.inputWrapper}\n                  data-position=\"end\"\n                  onClick={this.onInputWrapperClick}\n                  onPointerDown={this.onInputWrapperPointerDown}\n                  ref={this.setEndWrapper}\n                >\n                  <calcite-input-text\n                    aria-autocomplete=\"none\"\n                    aria-controls={this.dialogId}\n                    aria-errormessage={IDS.validationMessage}\n                    aria-expanded={toAriaBoolean(this.open)}\n                    aria-haspopup=\"dialog\"\n                    aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n                    class={{\n                      [CSS.input]: true,\n                      [CSS.inputBorderTopColorOne]: this.layout === \"vertical\" && this.range,\n                    }}\n                    disabled={disabled}\n                    icon=\"calendar\"\n                    onCalciteInputTextInput={this.calciteInternalInputInputHandler}\n                    onCalciteInternalInputTextBlur={this.calciteInternalInputBlurHandler}\n                    onCalciteInternalInputTextFocus={this.endInputFocus}\n                    placeholder={this.localeData?.placeholder}\n                    readOnly={readOnly}\n                    ref={this.setEndInput}\n                    role=\"combobox\"\n                    scale={this.scale}\n                    status={this.status}\n                  />\n                  {!this.readOnly &&\n                    this.renderToggleIcon(this.open && this.focusedInput === \"end\")}\n                </div>\n              )}\n            </div>\n          )}\n          <HiddenFormInputSlot component={this} />\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  renderToggleIcon(open: boolean): VNode {\n    return (\n      // we set tab index to -1 to prevent delegatesFocus from stealing focus before we can set it\n      <span class={CSS.toggleIcon} tabIndex={-1}>\n        <calcite-icon\n          class={CSS.chevronIcon}\n          icon={open ? \"chevron-up\" : \"chevron-down\"}\n          scale={getIconScale(this.scale)}\n        />\n      </span>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputDatePickerElement;\n\n  private currentOpenInput: \"start\" | \"end\";\n\n  private datePickerEl: HTMLCalciteDatePickerElement;\n\n  private dialogId = `date-picker-dialog--${guid()}`;\n\n  filteredFlipPlacements: FlipPlacement[];\n\n  private focusOnOpen = false;\n\n  focusTrap: FocusTrap;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: InputDatePicker[\"value\"];\n\n  private dateTimeFormat: Intl.DateTimeFormat;\n\n  @State() datePickerActiveDate: Date;\n\n  @State() defaultMessages: InputDatePickerMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n    this.loadLocaleData();\n  }\n\n  @Watch(\"effectiveLocale\")\n  @Watch(\"numberingSystem\")\n  handleDateTimeFormatChange(): void {\n    const formattingOptions: Intl.DateTimeFormatOptions = {\n      // we explicitly set numberingSystem to prevent the browser-inferred value\n      // see https://github.com/Esri/calcite-design-system/issues/3079#issuecomment-1168964195 for more info\n      numberingSystem: getSupportedNumberingSystem(this.numberingSystem),\n    };\n\n    this.dateTimeFormat = new Intl.DateTimeFormat(\n      getDateFormatSupportedLocale(this.effectiveLocale),\n      formattingOptions,\n    );\n  }\n\n  @State() focusedInput: \"start\" | \"end\" = \"start\";\n\n  @State() private localeData: DateLocaleData;\n\n  private startInput: HTMLCalciteInputTextElement;\n\n  private endInput: HTMLCalciteInputTextElement;\n\n  private floatingEl: HTMLDivElement;\n\n  private referenceEl: HTMLDivElement;\n\n  private startWrapper: HTMLDivElement;\n\n  private endWrapper: HTMLDivElement;\n\n  private userChangedValue = false;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  @Watch(\"layout\")\n  @Watch(\"focusedInput\")\n  setReferenceEl(): void {\n    const { focusedInput, layout, endWrapper, startWrapper } = this;\n\n    this.referenceEl =\n      focusedInput === \"end\" || layout === \"vertical\"\n        ? endWrapper || startWrapper\n        : startWrapper || endWrapper;\n\n    requestAnimationFrame(() => connectFloatingUI(this, this.referenceEl, this.floatingEl));\n  }\n\n  private valueAsDateChangedExternally = false;\n\n  private placeholderTextId = `calcite-input-date-picker-placeholder-${guid()}`;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private onInputWrapperPointerDown = (): void => {\n    this.currentOpenInput = this.focusedInput;\n  };\n\n  private onInputWrapperClick = (event: MouseEvent) => {\n    const { range, endInput, startInput, currentOpenInput } = this;\n    const currentTarget = event.currentTarget as HTMLDivElement;\n    const position = currentTarget.getAttribute(\"data-position\") as \"start\" | \"end\";\n    const path = event.composedPath();\n    const wasToggleClicked = path.find((el: HTMLElement) => el.classList?.contains(CSS.toggleIcon));\n\n    if (wasToggleClicked) {\n      const targetInput = position === \"start\" ? startInput : endInput;\n      targetInput.setFocus();\n    }\n\n    if (!range || !this.open || currentOpenInput === position) {\n      this.open = !this.open;\n    }\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterValidFlipPlacements(flipPlacements, el)\n      : null;\n  };\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  onBeforeOpen(): void {\n    this.calciteInputDatePickerBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    activateFocusTrap(this, {\n      onActivate: () => {\n        if (this.focusOnOpen) {\n          this.datePickerEl.setFocus();\n          this.focusOnOpen = false;\n        }\n      },\n    });\n    this.calciteInputDatePickerOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteInputDatePickerBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteInputDatePickerClose.emit();\n    deactivateFocusTrap(this);\n    this.restoreInputFocus();\n    this.focusOnOpen = false;\n    this.datePickerEl.reset();\n  }\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(\"date\", this, input);\n  }\n\n  setStartInput = (el: HTMLCalciteInputTextElement): void => {\n    this.startInput = el;\n  };\n\n  setEndInput = (el: HTMLCalciteInputTextElement): void => {\n    this.endInput = el;\n  };\n\n  private blurHandler = (): void => {\n    this.open = false;\n  };\n\n  private commitValue(): void {\n    const { focusedInput, value } = this;\n    const focusedInputName = `${focusedInput}Input`;\n    const focusedInputValue = this[focusedInputName].value;\n    const date = dateFromLocalizedString(focusedInputValue, this.localeData);\n    const dateAsISO = dateToISO(date);\n    const valueIsArray = Array.isArray(value);\n    if (this.range) {\n      const focusedInputValueIndex = focusedInput === \"start\" ? 0 : 1;\n      if (valueIsArray) {\n        if (dateAsISO === value[focusedInputValueIndex]) {\n          return;\n        }\n        if (date) {\n          this.setRangeValue([\n            focusedInput === \"start\" ? date : dateFromISO(value[0]),\n            focusedInput === \"end\" ? date : dateFromISO(value[1]),\n          ]);\n          this.localizeInputValues();\n        } else {\n          this.setRangeValue([\n            focusedInput === \"end\" && dateFromISO(value[0]),\n            focusedInput === \"start\" && dateFromISO(value[1]),\n          ]);\n        }\n      } else {\n        if (date) {\n          this.setRangeValue([\n            focusedInput === \"start\" ? date : dateFromISO(value[0]),\n            focusedInput === \"end\" ? date : dateFromISO(value[1]),\n          ]);\n          this.localizeInputValues();\n        }\n      }\n    } else {\n      if (dateAsISO === value) {\n        return;\n      }\n      this.setValue(date);\n      this.localizeInputValues();\n    }\n  }\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    const { defaultPrevented, key } = event;\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      event.preventDefault();\n      this.commitValue();\n\n      if (this.shouldFocusRangeEnd()) {\n        this.endInput?.setFocus();\n      } else if (this.shouldFocusRangeStart()) {\n        this.startInput?.setFocus();\n      }\n\n      if (submitForm(this)) {\n        this.restoreInputFocus();\n      }\n    } else if (key === \"ArrowDown\") {\n      this.open = true;\n      this.focusOnOpen = true;\n      event.preventDefault();\n    } else if (key === \"Escape\") {\n      this.open = false;\n      event.preventDefault();\n      this.restoreInputFocus();\n    }\n  };\n\n  startInputFocus = (): void => {\n    this.focusedInput = \"start\";\n  };\n\n  endInputFocus = (): void => {\n    this.focusedInput = \"end\";\n  };\n\n  setFloatingEl = (el: HTMLDivElement): void => {\n    this.floatingEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  setStartWrapper = (el: HTMLDivElement): void => {\n    this.startWrapper = el;\n    this.setReferenceEl();\n  };\n\n  setEndWrapper = (el: HTMLDivElement): void => {\n    this.endWrapper = el;\n    this.setReferenceEl();\n  };\n\n  setDatePickerRef = (el: HTMLCalciteDatePickerElement): void => {\n    this.datePickerEl = el;\n    connectFocusTrap(this, {\n      focusTrapEl: el,\n      focusTrapOptions: {\n        initialFocus: false,\n        setReturnFocus: false,\n      },\n    });\n  };\n\n  private async loadLocaleData(): Promise<void> {\n    if (!isBrowser()) {\n      return;\n    }\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n    this.localeData = await getLocaleData(this.effectiveLocale);\n    this.localizeInputValues();\n  }\n\n  /**\n   * Event handler for when the selected date changes\n   *\n   * @param event CalciteDatePicker custom change event\n   */\n  handleDateChange = (event: CustomEvent<void>): void => {\n    if (this.range) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    this.setValue((event.target as HTMLCalciteDatePickerElement).valueAsDate as Date);\n    this.localizeInputValues();\n    this.restoreInputFocus();\n  };\n\n  private shouldFocusRangeStart(): boolean {\n    const startValue = this.value[0];\n    const endValue = this.value[1];\n    return !!(endValue && !startValue && this.focusedInput === \"end\" && this.startInput);\n  }\n\n  private shouldFocusRangeEnd(): boolean {\n    const startValue = this.value[0];\n    const endValue = this.value[1];\n    return !!(startValue && !endValue && this.focusedInput === \"start\" && this.endInput);\n  }\n\n  private handleDateRangeChange = (event: CustomEvent<void>): void => {\n    if (!this.range) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    const value = (event.target as HTMLCalciteDatePickerElement).valueAsDate as Date[];\n\n    this.setRangeValue(value);\n    this.localizeInputValues();\n    this.restoreInputFocus();\n  };\n\n  private restoreInputFocus(): void {\n    if (!this.range) {\n      this.startInput.setFocus();\n      return;\n    }\n\n    const focusedInput = this.focusedInput === \"start\" ? this.startInput : this.endInput;\n    focusedInput.setFocus();\n  }\n\n  private localizeInputValues(): void {\n    const date = dateFromRange(\n      (this.range\n        ? (Array.isArray(this.valueAsDate) && this.valueAsDate[0]) || undefined\n        : this.valueAsDate) as Date,\n      this.minAsDate,\n      this.maxAsDate,\n    );\n    const endDate = this.range\n      ? dateFromRange(\n          (Array.isArray(this.valueAsDate) && this.valueAsDate[1]) || undefined,\n          this.minAsDate,\n          this.maxAsDate,\n        )\n      : null;\n\n    this.setInputValue((date && this.dateTimeFormat.format(date)) ?? \"\", \"start\");\n    this.setInputValue((this.range && endDate && this.dateTimeFormat.format(endDate)) ?? \"\", \"end\");\n  }\n\n  private setInputValue = (newValue: string, input: \"start\" | \"end\" = \"start\"): void => {\n    const inputEl = this[`${input}Input`];\n    if (!inputEl) {\n      return;\n    }\n    inputEl.value = newValue;\n  };\n\n  private setRangeValue = (valueAsDate: Date[]): void => {\n    if (!this.range) {\n      return;\n    }\n\n    const { value: oldValue } = this;\n    const oldValueIsArray = Array.isArray(oldValue);\n    const valueIsArray = Array.isArray(valueAsDate);\n\n    const newStartDate = valueIsArray ? valueAsDate[0] : null;\n    let newStartDateISO = valueIsArray ? dateToISO(newStartDate) : \"\";\n    if (newStartDateISO) {\n      newStartDateISO = this.getNormalizedDate(newStartDateISO);\n    }\n\n    const newEndDate = valueIsArray ? valueAsDate[1] : null;\n    let newEndDateISO = valueIsArray ? dateToISO(newEndDate) : \"\";\n    if (newEndDateISO) {\n      newEndDateISO = this.getNormalizedDate(newEndDateISO);\n    }\n\n    const newValue = newStartDateISO || newEndDateISO ? [newStartDateISO, newEndDateISO] : \"\";\n\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.userChangedValue = true;\n    this.value = newValue;\n    this.valueAsDate = newValue ? getValueAsDateRange(newValue) : undefined;\n\n    const changeEvent = this.calciteInputDatePickerChange.emit();\n\n    if (changeEvent && changeEvent.defaultPrevented) {\n      this.value = oldValue;\n      if (oldValueIsArray) {\n        this.setInputValue(oldValue[0], \"start\");\n        this.setInputValue(oldValue[1], \"end\");\n      } else {\n        this.value = oldValue;\n        this.setInputValue(oldValue);\n      }\n    }\n  };\n\n  private setValue = (value: Date | string): void => {\n    if (this.range) {\n      return;\n    }\n\n    const oldValue = this.value;\n    let newValue = dateToISO(value as Date);\n    newValue = this.getNormalizedDate(newValue);\n\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.userChangedValue = true;\n    this.valueAsDate = newValue ? dateFromISO(newValue) : undefined;\n    this.value = newValue || \"\";\n\n    const changeEvent = this.calciteInputDatePickerChange.emit();\n\n    if (changeEvent.defaultPrevented) {\n      this.value = oldValue;\n      this.setInputValue(oldValue as string);\n    }\n  };\n\n  private warnAboutInvalidValue(value: string): void {\n    console.warn(\n      `The specified value \"${value}\" does not conform to the required format, \"YYYY-MM-DD\".`,\n    );\n  }\n\n  private commonDateSeparators = [\".\", \"-\", \"/\"];\n\n  private formatNumerals = (value: string): string =>\n    value\n      ? value\n          .split(\"\")\n          .map((char: string) =>\n            this.commonDateSeparators?.includes(char)\n              ? this.localeData?.separator\n              : numberKeys?.includes(char)\n                ? numberStringFormatter?.numberFormatter?.format(Number(char))\n                : char,\n          )\n          .join(\"\")\n      : \"\";\n\n  private parseNumerals = (value: string): string =>\n    value\n      ? value\n          .split(\"\")\n          .map((char: string) =>\n            numberKeys.includes(char) ? numberStringFormatter.delocalize(char) : char,\n          )\n          .join(\"\")\n      : \"\";\n\n  private getNormalizedDate(value: string): string {\n    if (!value) {\n      return \"\";\n    }\n\n    if (!isTwoDigitYear(value)) {\n      return value;\n    }\n\n    const { day, month, year } = datePartsFromISO(value);\n    const normalizedYear = normalizeToCurrentCentury(Number(year));\n    return `${normalizedYear}-${month}-${day}`;\n  }\n}\n","import { datePartsFromISO } from \"../../utils/date\";\n\n/**\n * Specifies if an ISO string date (YYYY-MM-DD) has two digit year.\n *\n * @param {string} value\n * @returns {boolean}\n */\nexport function isTwoDigitYear(value: string): boolean {\n  if (!value) {\n    return false;\n  }\n  const { year } = datePartsFromISO(value);\n  return Number(year) < 100;\n}\n\n/**\n * Returns a normalized year to current century from a given two digit year number.\n *\n * @param {number} twoDigitYear\n * @returns {string}\n */\nexport function normalizeToCurrentCentury(twoDigitYear: number): number {\n  const currentYear = new Date().getFullYear();\n  const normalizedYear = Math.floor(currentYear / 100) * 100 + twoDigitYear;\n  return normalizedYear;\n}\n",":host {\n  @extend %component-spacing;\n  @include floating-ui-elem-anim(\".menu-container\");\n  @apply relative\n    inline-block\n    w-full\n    overflow-visible\n    align-top\n    shadow-none;\n}\n\n@function get-trailing-text-input-padding($chevron-spacing) {\n  @return calc(var(--calcite-toggle-spacing) + $chevron-spacing);\n}\n\n:host([scale=\"s\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.2\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.4\"))};\n}\n\n:host([scale=\"m\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.3\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.6\"))};\n}\n\n:host([scale=\"l\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.4\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.8\"))};\n}\n\n@include disabled();\n\n.calendar-wrapper {\n  @apply shadow-none;\n  transform: translate3d(0, 0, 0);\n}\n\n.input-wrapper {\n  @apply relative;\n\n  .chevron-icon {\n    color: var(--calcite-color-text-3);\n  }\n\n  &:focus-within,\n  &:active,\n  &:hover {\n    .chevron-icon {\n      color: var(--calcite-color-text-1);\n    }\n  }\n}\n\n.toggle-icon {\n  @apply absolute flex cursor-pointer items-center;\n  inset-inline-end: 0;\n  inset-block: 0;\n  padding-inline: var(--calcite-toggle-spacing);\n}\n\n:host([range]) {\n  .input-container {\n    @apply flex;\n  }\n\n  .input-wrapper {\n    @apply flex-auto;\n  }\n\n  .horizontal-arrow-container {\n    @apply bg-background\n      border-color-input\n      flex\n      items-center\n      border\n      border-l-0\n      border-r-0\n      border-solid\n      py-0\n      px-1;\n  }\n}\n\n:host([range][layout=\"vertical\"]) {\n  .input-wrapper {\n    @apply w-full;\n  }\n\n  .input-container {\n    @apply flex-col\n      items-start;\n  }\n\n  .calendar-wrapper--end {\n    transform: translate3d(0, 0, 0);\n  }\n\n  .vertical-arrow-container {\n    inset-block-start: theme(\"spacing.6\");\n    @apply bg-foreground-1\n      absolute\n      z-default\n      mx-px\n      px-2.5;\n    inset-inline-start: 0;\n  }\n}\n\n.menu-container {\n  --calcite-floating-ui-z-index: theme(\"zIndex.dropdown\");\n  @include floating-ui-container();\n  @include floating-ui-wrapper();\n  @apply invisible;\n}\n\n@include floating-ui-elem-anim(\".menu-container\");\n\n:host([open]) .menu-container {\n  @include floating-ui-wrapper-active();\n}\n\n.menu-container--active {\n  @include floating-ui-wrapper-active();\n}\n\n.input .calcite-input__wrapper {\n  @apply mt-0;\n}\n\n:host([range][layout=\"vertical\"][scale=\"m\"]) .vertical-arrow-container {\n  inset-block-start: theme(\"spacing.6\");\n  padding-inline-start: theme(\"spacing.3\");\n\n  calcite-icon {\n    @apply h-3\n      w-3\n      min-w-0;\n  }\n}\n\n:host([range][layout=\"vertical\"][scale=\"l\"]) .vertical-arrow-container {\n  inset-block-start: theme(\"spacing.9\");\n  @apply px-3.5;\n}\n\n:host([range][layout=\"vertical\"][open]) {\n  .vertical-arrow-container {\n    @apply hidden;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n\n.assistive-text {\n  @apply sr-only;\n}\n\n@include base-component();\n","import { readTask } from \"@stencil/core\";\nimport { whenTransitionDone } from \"./dom\";\n\n/**\n * Exported for testing purposes only\n */\nexport const internalReadTask = readTask;\n\n/**\n * Defines interface for components with open/close public emitter.\n * All implementations of this interface must handle the following events: `beforeOpen`, `open`, `beforeClose`, `close`.\n */\nexport interface OpenCloseComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * When true, the component opens.\n   */\n  open?: boolean;\n\n  /**\n   * When true, the component is open.\n   */\n  opened?: boolean;\n\n  /**\n   *  Specifies the name of transitionProp.\n   */\n  transitionProp?: string;\n\n  /**\n   * Specifies property on which active transition is watched for.\n   */\n  openTransitionProp: string;\n\n  /**\n   * Specifies element that the transition is allowed to emit on.\n   */\n  transitionEl: HTMLElement;\n\n  /**\n   * Defines method for `beforeOpen` event handler.\n   */\n  onBeforeOpen: () => void;\n\n  /**\n   * Defines method for `open` event handler:\n   */\n  onOpen: () => void;\n\n  /**\n   * Defines method for `beforeClose` event handler:\n   */\n  onBeforeClose: () => void;\n\n  /**\n   * Defines method for `close` event handler:\n   */\n  onClose: () => void;\n}\n\nfunction isOpen(component: OpenCloseComponent): boolean {\n  return \"opened\" in component ? component.opened : component.open;\n}\n\n/**\n * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch(\"open\").\n * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).\n *\n * @example\n * import { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\n *\n * async componentWillLoad() {\n * // When component initially renders, if `open` was set we need to trigger on load as watcher doesn't fire.\n * if (this.open) {\n *    onToggleOpenCloseComponent(this);\n * }\n * @Watch(\"open\")\n * async toggleModal(value: boolean): Promise<void> {\n *    onToggleOpenCloseComponent(this);\n * }\n *\n * @param component - OpenCloseComponent uses `open` prop to emit (before)open/close.\n */\nexport function onToggleOpenCloseComponent(component: OpenCloseComponent): void {\n  internalReadTask((): void => {\n    if (!component.transitionEl) {\n      return;\n    }\n\n    whenTransitionDone(\n      component.transitionEl,\n      component.openTransitionProp,\n      () => {\n        if (isOpen(component)) {\n          component.onBeforeOpen();\n        } else {\n          component.onBeforeClose();\n        }\n      },\n      () => {\n        if (isOpen(component)) {\n          component.onOpen();\n        } else {\n          component.onClose();\n        }\n      },\n    );\n  });\n}\n","import { DateLocaleData } from \"../components/date-picker/utils\";\nimport { numberStringFormatter } from \"./locale\";\n\nexport interface HoverRange {\n  focused: \"end\" | \"start\";\n  start: Date;\n  end: Date;\n}\n\n/**\n * Check if date is within a min and max\n *\n * @param date\n * @param min\n * @param max\n */\nexport function inRange(date: Date, min?: Date | string, max?: Date | string): boolean {\n  if (!date) {\n    return;\n  }\n  const time = date.getTime();\n  const afterMin = !(min instanceof Date) || time >= min.getTime();\n  const beforeMax = !(max instanceof Date) || time <= max.getTime();\n  return afterMin && beforeMax;\n}\n\n/**\n * Ensures date is within range,\n * returns min or max if out of bounds\n *\n * @param date\n * @param min\n * @param max\n */\nexport function dateFromRange(date?: any, min?: Date | string, max?: Date | string): Date | null {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n  const time = date.getTime();\n  const beforeMin = min instanceof Date && time < min.getTime();\n  const afterMax = max instanceof Date && time > max.getTime();\n  if (beforeMin) {\n    return min;\n  }\n  if (afterMax) {\n    return max;\n  }\n  return date;\n}\n\n/**\n * Parse an iso8601 string (YYYY-mm-dd) into a valid date.\n * TODO: handle time when time of day UI is added\n *\n * @param iso8601\n * @param isEndDate\n */\nexport function dateFromISO(iso8601: string | Date, isEndDate = false): Date | null {\n  if (iso8601 instanceof Date) {\n    return iso8601;\n  }\n  if (!iso8601 || typeof iso8601 !== \"string\") {\n    return null;\n  }\n  const d = iso8601.split(/[: T-]/).map(parseFloat);\n  const date = new Date(d[0], (d[1] || 1) - 1, d[2] || 1);\n  date.setFullYear(d[0]);\n  if (isNaN(date.getTime())) {\n    throw new Error(`Invalid ISO 8601 date: \"${iso8601}\"`);\n  }\n  if (isEndDate) {\n    return setEndOfDay(date);\n  }\n  return date;\n}\n\n/**\n * Parse a localized date string into a valid Date.\n * return false if date is invalid, or out of range\n *\n * @param value\n * @param localeData\n */\nexport function dateFromLocalizedString(value: string, localeData: DateLocaleData): Date {\n  if (!localeData) {\n    return null;\n  }\n  const { separator } = localeData;\n  const parts = parseDateString(value, localeData);\n\n  const { day, month } = parts;\n  const year = parseCalendarYear(parts.year, localeData);\n\n  const date = new Date(year, month, day);\n  date.setFullYear(year);\n\n  const validDay = day > 0;\n  const validMonth = month > -1;\n  const validDate = !isNaN(date.getTime());\n  const validLength = value.split(separator).filter((c) => c).length > 2;\n  const validYear = year.toString().length > 0;\n\n  if (validDay && validMonth && validDate && validLength && validYear) {\n    return date;\n  }\n  return null;\n}\n\nexport function parseCalendarYear(year: number, localeData: DateLocaleData): number {\n  return processCalendarYear(year, localeData, \"read\");\n}\n\nexport function formatCalendarYear(year: number, localeData: DateLocaleData): number {\n  return processCalendarYear(year, localeData, \"write\");\n}\n\nfunction processCalendarYear(year: number, localeData: DateLocaleData, mode: \"read\" | \"write\"): number {\n  if (localeData[\"default-calendar\"] !== \"buddhist\") {\n    return year;\n  }\n\n  const BUDDHIST_CALENDAR_YEAR_OFFSET = 543;\n  const yearOffset = BUDDHIST_CALENDAR_YEAR_OFFSET * (mode === \"read\" ? -1 : 1);\n\n  return year + yearOffset;\n}\n\n/**\n * Retrieve day, month, and year strings from a localized string\n *\n * @param string\n * @param localeData\n */\nexport function datePartsFromLocalizedString(\n  string: string,\n  localeData: DateLocaleData,\n): { day: string; month: string; year: string } {\n  const { separator, unitOrder } = localeData;\n  const order = getOrder(unitOrder);\n  const values = string.split(separator).map((part) => numberStringFormatter.delocalize(part));\n  const day = values[order.indexOf(\"d\")];\n  const month = values[order.indexOf(\"m\")];\n  const year = values[order.indexOf(\"y\")];\n  return { day, month, year };\n}\n\n/**\n * Return the date portion in local time of a Date object in ISO 8601 format (YYYY-MM-DD)\n *\n * @param date\n */\nexport function dateToISO(date?: Date): string {\n  if (date instanceof Date) {\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const year = String(date.getFullYear()).padStart(4, \"0\");\n    return `${year}-${month}-${day}`;\n  }\n  return \"\";\n}\n\n/**\n * Retrieve day, month, and year strings from a ISO string (YYYY-mm-dd)\n *\n * @param string\n * @param isoDate\n */\nexport function datePartsFromISO(isoDate: string): { day: string; month: string; year: string } {\n  const dateParts = isoDate.split(\"-\");\n  return { day: dateParts[2], month: dateParts[1], year: dateParts[0] };\n}\n\n/**\n * Check if two dates are the same day, month, year\n *\n * @param d1\n * @param d2\n */\nexport function sameDate(d1: Date, d2: Date): boolean {\n  return (\n    d1 instanceof Date &&\n    d2 instanceof Date &&\n    d1.getDate() === d2.getDate() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getFullYear() === d2.getFullYear()\n  );\n}\n\n/**\n * Get a date one month in the past\n *\n * @param date\n */\nexport function prevMonth(date: Date): Date {\n  const month = date.getMonth();\n  const nextDate = new Date(date);\n  nextDate.setMonth(month - 1);\n  // date doesn't exist in new month, use last day\n  if (month === nextDate.getMonth()) {\n    return new Date(date.getFullYear(), month, 0);\n  }\n  return nextDate;\n}\n\n/**\n * Get a date one month in the future\n *\n * @param date\n */\nexport function nextMonth(date: Date): Date {\n  const month = date.getMonth();\n  const nextDate = new Date(date);\n  nextDate.setMonth(month + 1);\n  // date doesn't exist in new month, use last day\n  if ((month + 2) % 7 === nextDate.getMonth() % 7) {\n    return new Date(date.getFullYear(), month + 2, 0);\n  }\n  return nextDate;\n}\n\n/**\n * Parse numeric units for day, month, and year from a localized string\n * month starts at 0 (can pass to date constructor)\n * can return values as number or string\n *\n * @param string\n * @param localeData\n */\nexport function parseDateString(\n  string: string,\n  localeData: DateLocaleData,\n): { day: number; month: number; year: number } {\n  const { day, month, year } = datePartsFromLocalizedString(string, localeData);\n  return {\n    day: parseInt(day),\n    month: parseInt(month) - 1, // this subtracts by 1 because the month in the Date constructor is zero-based https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth\n    year: parseInt(year),\n  };\n}\n\ntype unitOrderSignifier = \"m\" | \"d\" | \"y\";\n\n/**\n * Based on the unitOrder string, find order of month, day, and year for locale\n *\n * @param unitOrder\n */\nexport function getOrder(unitOrder: string): unitOrderSignifier[] {\n  const signifiers: unitOrderSignifier[] = [\"d\", \"m\", \"y\"];\n  const order = unitOrder.toLowerCase();\n  return signifiers.sort((a, b) => order.indexOf(a) - order.indexOf(b));\n}\n\n/**\n * Get number of days between two dates\n *\n * @param date1\n * @param date2\n */\nexport function getDaysDiff(date1: Date, date2: Date): number {\n  const ts1 = date1.getTime();\n  const ts2 = date2.getTime();\n  return (ts1 - ts2) / (1000 * 3600 * 24);\n}\n\n/**\n * Set time of the day to the end.\n *\n * @param {Date} date Date.\n * @returns {Date} Date with time set to end of day .\n */\nexport function setEndOfDay(date: Date): Date {\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\n","import { getAssetPath } from \"@stencil/core\";\nimport { dateFromISO } from \"../../utils/date\";\nimport { getSupportedLocale } from \"../../utils/locale\";\n\n/**\n * Translation resource data structure\n *\n * @private\n */\nexport interface DateLocaleData {\n  \"default-calendar\": \"gregorian\" | \"buddhist\";\n  separator: string;\n  unitOrder: string;\n  weekStart: number;\n  placeholder: string;\n  days: {\n    abbreviated?: string[];\n    narrow?: string[];\n    short?: string[];\n    wide?: string[];\n  };\n  numerals: string;\n  months: {\n    abbreviated: string[];\n    narrow: string[];\n    wide: string[];\n  };\n  year?: {\n    suffix: string;\n  };\n}\n\n/**\n * CLDR cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const translationCache: Record<string, DateLocaleData> = {};\n\n/**\n * CLDR request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<DateLocaleData>> = {};\n\n/**\n * Fetch calendar data for a given locale from list of supported languages\n *\n * @param lang\n * @public\n */\nexport async function getLocaleData(lang: string): Promise<DateLocaleData> {\n  const locale = getSupportedLocale(lang);\n  if (translationCache[locale]) {\n    return translationCache[locale];\n  }\n  if (!requestCache[locale]) {\n    requestCache[locale] = fetch(getAssetPath(`./assets/date-picker/nls/${locale}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`Translations for \"${locale}\" not found or invalid, falling back to english`);\n        return getLocaleData(\"en\");\n      });\n  }\n\n  const data = await requestCache[locale];\n  translationCache[locale] = data;\n\n  return data;\n}\n\n/**\n *  Maps value to valueAsDate\n *\n * @param value\n */\n\nexport function getValueAsDateRange(value: string[]): Date[] {\n  return value.map((v, index) => dateFromISO(v, index === 1));\n}\n"],"names":["CSS","IDS","InputDatePicker","calciteInternalInputInputHandler","event","target","value","parsedValue","this","parseNumerals","formattedValue","formatNumerals","year","datePartsFromLocalizedString","localeData","length","date","dateFromLocalizedString","inRange","min","max","datePickerActiveDate","calciteInternalInputBlurHandler","commitValue","dialogId","guid","focusOnOpen","userChangedValue","openTransitionProp","valueAsDateChangedExternally","placeholderTextId","onInputWrapperPointerDown","currentOpenInput","focusedInput","onInputWrapperClick","range","endInput","startInput","position","currentTarget","getAttribute","composedPath","find","el","classList","contains","setFocus","open","setFilteredPlacements","flipPlacements","filteredFlipPlacements","filterValidFlipPlacements","setTransitionEl","transitionEl","setStartInput","setEndInput","blurHandler","keyDownHandler","defaultPrevented","key","preventDefault","shouldFocusRangeEnd","shouldFocusRangeStart","submitForm","restoreInputFocus","startInputFocus","endInputFocus","setFloatingEl","floatingEl","connectFloatingUI","referenceEl","setStartWrapper","startWrapper","setReferenceEl","setEndWrapper","endWrapper","setDatePickerRef","datePickerEl","connectFocusTrap","focusTrapEl","focusTrapOptions","initialFocus","setReturnFocus","handleDateChange","stopPropagation","setValue","valueAsDate","localizeInputValues","handleDateRangeChange","setRangeValue","setInputValue","newValue","inputEl","_this","arguments","undefined","oldValue","oldValueIsArray","Array","isArray","valueIsArray","newStartDate","newStartDateISO","dateToISO","getNormalizedDate","newEndDate","newEndDateISO","getValueAsDateRange","changeEvent","calciteInputDatePickerChange","emit","dateFromISO","commonDateSeparators","split","map","char","includes","separator","numberKeys","numberStringFormatter","numberFormatter","format","Number","join","delocalize","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","defaultMenuPlacement","handleFocusTrapDisabled","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","handleDisabledAndReadOnlyChange","valueWatcher","newValueAsDate","valueAsDateWatcher","flipPlacementsHandler","reposition","onMessagesChange","onMinChanged","minAsDate","onMaxChanged","maxAsDate","openHandler","onToggleOpenCloseComponent","disabled","readOnly","overlayPositioningHandler","calciteDaySelectHandler","componentFocusable","focusFirstTabbable","delayed","placement","overlayPositioning","type","connectedCallback","connectLocalized","handleDateTimeFormatChange","dateInRange","dateFromRange","error","warnAboutInvalidValue","connectLabel","connectForm","connectMessages","numberFormatOptions","numberingSystem","locale","effectiveLocale","useGrouping","componentWillLoad","setUpLoadableComponent","Promise","all","loadLocaleData","setUpMessages","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectLabel","disconnectForm","disconnectFloatingUI","disconnectLocalized","disconnectMessages","componentDidRender","updateHostInteraction","render","messages","h","Host","onBlur","onKeyDown","InteractiveContainer","class","onClick","onPointerDown","ref","toAriaBoolean","status","layout","icon","onCalciteInputTextInput","onCalciteInternalInputTextBlur","onCalciteInternalInputTextFocus","placeholder","role","scale","renderToggleIcon","id","chooseDate","FloatingCSS","animation","animationActive","activeDate","activeRange","headingLevel","messageOverrides","onCalciteDatePickerChange","onCalciteDatePickerRangeChange","proximitySelectionDisabled","tabIndex","flipRtl","getIconScale","HiddenFormInputSlot","component","validationMessage","Validation","validationIcon","message","effectiveLocaleChange","updateMessages","formattingOptions","getSupportedNumberingSystem","dateTimeFormat","Intl","DateTimeFormat","getDateFormatSupportedLocale","requestAnimationFrame","onLabelClick","onBeforeOpen","calciteInputDatePickerBeforeOpen","onOpen","onActivate","calciteInputDatePickerOpen","onBeforeClose","calciteInputDatePickerBeforeClose","onClose","calciteInputDatePickerClose","reset","syncHiddenFormInput","input","focusedInputValue","dateAsISO","isBrowser","getLocaleData","startValue","endValue","endDate","console","warn","datePartsFromISO","isTwoDigitYear","day","month","twoDigitYear","currentYear","Date","getFullYear","Math","floor","normalizeToCurrentCentury","internalReadTask","readTask","isOpen","opened","whenTransitionDone","time","getTime","afterMin","beforeMax","beforeMin","afterMax","iso8601","isEndDate","d","parseFloat","setFullYear","isNaN","Error","setEndOfDay","parts","string","parseInt","parseDateString","parseCalendarYear","validDay","validMonth","validDate","validLength","filter","c","validYear","toString","processCalendarYear","formatCalendarYear","mode","unitOrder","order","getOrder","values","part","indexOf","String","getMonth","padStart","getDate","isoDate","dateParts","sameDate","d1","d2","prevMonth","nextDate","setMonth","nextMonth","toLowerCase","sort","a","b","getDaysDiff","date1","date2","setHours","translationCache","requestCache","async","lang","getSupportedLocale","fetch","getAssetPath","then","resp","json","catch","data","v","index"],"sourceRoot":""}