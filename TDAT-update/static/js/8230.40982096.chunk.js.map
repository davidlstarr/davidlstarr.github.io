{"version":3,"file":"static/js/8230.40982096.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/list-item/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/list-item/utils.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/list/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/list/list.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/list/list.scss?tag=calcite-list&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/list-item/list-item.scss?tag=calcite-list-item&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/list-item/list-item.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/list-item-group/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/list-item-group/list-item-group.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/list-item-group/list-item-group.scss?tag=calcite-list-item-group&encapsulation=shadow","../node_modules/@esri/calcite-components/node_modules/lodash-es/_freeGlobal.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_root.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_Symbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_getRawTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_objectToString.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseGetTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObjectLike.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isSymbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseTrim.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObject.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/toNumber.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/now.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/debounce.js","../node_modules/@esri/calcite-components/dist/esm/src/utils/loadable.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/stack/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/t9n.ts"],"sourcesContent":["export const CSS = {\n  wrapper: \"wrapper\",\n  wrapperBordered: \"wrapper--bordered\",\n  container: \"container\",\n  containerHover: \"container--hover\",\n  containerBorder: \"container--border\",\n  containerBorderSelected: \"container--border-selected\",\n  containerBorderUnselected: \"container--border-unselected\",\n  contentContainer: \"content-container\",\n  contentContainerUnavailable: \"content-container--unavailable\",\n  contentContainerSelectable: \"content-container--selectable\",\n  contentContainerHasCenterContent: \"content-container--has-center-content\",\n  nestedContainer: \"nested-container\",\n  nestedContainerOpen: \"nested-container--open\",\n  content: \"content\",\n  customContent: \"custom-content\",\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  label: \"label\",\n  description: \"description\",\n  contentEnd: \"content-end\",\n  contentBottom: \"content-bottom\",\n  actionsEnd: \"actions-end\",\n  selectionContainer: \"selection-container\",\n  selectionContainerSingle: \"selection-container--single\",\n  openContainer: \"open-container\",\n  dragContainer: \"drag-container\",\n  close: \"close\",\n};\n\nexport const SLOTS = {\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentEnd: \"content-end\",\n  actionsEnd: \"actions-end\",\n};\n\n// Set to zero to extend until the end of the table section.\nexport const MAX_COLUMNS = 0;\n\nexport const ICONS = {\n  selectedMultiple: \"check-square-f\",\n  selectedSingle: \"bullet-point-large\",\n  unselectedMultiple: \"square\",\n  unselectedSingle: \"bullet-point-large\",\n  closedLTR: \"chevron-right\",\n  closedRTL: \"chevron-left\",\n  open: \"chevron-down\",\n  blank: \"blank\",\n  close: \"x\",\n} as const;\n\nexport const activeCellTestAttribute = \"data-test-active\";\n","import { isBrowser } from \"../../utils/browser\";\n\nconst listSelector = \"calcite-list\";\nconst listItemGroupSelector = \"calcite-list-item-group\";\nconst listItemSelector = \"calcite-list-item\";\n\nexport function getListItemChildLists(slotEl: HTMLSlotElement): HTMLCalciteListElement[] {\n  return Array.from(\n    slotEl.assignedElements({ flatten: true }).filter((el): el is HTMLCalciteListElement => el.matches(listSelector)),\n  );\n}\n\nexport function getListItemChildren(slotEl: HTMLSlotElement): HTMLCalciteListItemElement[] {\n  const assignedElements = slotEl.assignedElements({ flatten: true });\n\n  const listItemGroupChildren = assignedElements\n    .filter((el): el is HTMLCalciteListItemGroupElement => el?.matches(listItemGroupSelector))\n    .map((group) => Array.from(group.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  const listItemChildren = assignedElements.filter((el): el is HTMLCalciteListItemElement =>\n    el?.matches(listItemSelector),\n  );\n\n  const listItemListChildren = assignedElements\n    .filter((el): el is HTMLCalciteListElement => el?.matches(listSelector))\n    .map((list) => Array.from(list.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  return [...listItemListChildren, ...listItemGroupChildren, ...listItemChildren];\n}\n\nexport function updateListItemChildren(listItemChildren: HTMLCalciteListItemElement[]): void {\n  listItemChildren.forEach((listItem) => {\n    listItem.setPosition = listItemChildren.indexOf(listItem) + 1;\n    listItem.setSize = listItemChildren.length;\n  });\n}\n\nexport function getDepth(element: HTMLElement, includeGroup = false): number {\n  if (!isBrowser()) {\n    return 0;\n  }\n\n  const expression = includeGroup\n    ? \"ancestor::calcite-list-item | ancestor::calcite-list-item-group\"\n    : \"ancestor::calcite-list-item\";\n\n  const result = document.evaluate(expression, element, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null);\n\n  return result.snapshotLength;\n}\n","export const CSS = {\n  container: \"container\",\n  table: \"table\",\n  scrim: \"scrim\",\n  stack: \"stack\",\n  tableContainer: \"table-container\",\n  sticky: \"sticky-pos\",\n  assistiveText: \"assistive-text\",\n};\n\nexport const debounceTimeout = 0;\n\nexport type SelectionAppearance = \"border\" | \"icon\";\n\nexport const SLOTS = {\n  filterNoResults: \"filter-no-results\",\n  filterActionsStart: \"filter-actions-start\",\n  filterActionsEnd: \"filter-actions-end\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport Sortable from \"sortablejs\";\nimport { debounce } from \"lodash-es\";\nimport { slotChangeHasAssignedElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { createObserver } from \"../../utils/observers\";\nimport { SelectionMode } from \"../interfaces\";\nimport { ItemData } from \"../list-item/interfaces\";\nimport { MAX_COLUMNS } from \"../list-item/resources\";\nimport { getListItemChildren, updateListItemChildren } from \"../list-item/utils\";\nimport {\n  connectSortableComponent,\n  disconnectSortableComponent,\n  SortableComponent,\n} from \"../../utils/sortableComponent\";\nimport { SLOTS as STACK_SLOTS } from \"../stack/resources\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { HandleNudge } from \"../handle/interfaces\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport { CSS, debounceTimeout, SelectionAppearance, SLOTS } from \"./resources\";\nimport { ListMessages } from \"./assets/list/t9n\";\nimport { ListDragDetail } from \"./interfaces\";\n\nconst listItemSelector = \"calcite-list-item\";\nconst parentSelector = \"calcite-list-item-group, calcite-list-item\" as const;\n\n/**\n * A general purpose list that enables users to construct list items that conform to Calcite styling.\n *\n * @slot - A slot for adding `calcite-list-item` elements.\n * @slot filter-actions-start - A slot for adding actionable `calcite-action` elements before the filter component.\n * @slot filter-actions-end - A slot for adding actionable `calcite-action` elements after the filter component.\n * @slot filter-no-results - When `filterEnabled` is `true`, a slot for adding content to display when no results are found.\n */\n@Component({\n  tag: \"calcite-list\",\n  styleUrl: \"list.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class List\n  implements\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    SortableComponent,\n    T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When provided, the method will be called to determine whether the element can  move from the list.\n   */\n  @Prop() canPull: (detail: ListDragDetail) => boolean;\n\n  /**\n   * When provided, the method will be called to determine whether the element can be added from another list.\n   */\n  @Prop() canPut: (detail: ListDragDetail) => boolean;\n\n  /**\n   * When `true`, `calcite-list-item`s are sortable via a draggable button.\n   */\n  @Prop({ reflect: true }) dragEnabled = false;\n\n  /**\n   * The list's group identifier.\n   *\n   * To drag elements from one list into another, both lists must have the same group value.\n   */\n  @Prop({ reflect: true }) group?: string;\n\n  /**\n   * When `true`, an input appears at the top of the component that can be used by end users to filter `calcite-list-item`s.\n   */\n  @Prop({ reflect: true }) filterEnabled = false;\n\n  /**\n   * The currently filtered `calcite-list-item`s.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) filteredItems: HTMLCalciteListItemElement[] = [];\n\n  /**\n   * The currently filtered `calcite-list-item` data.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) filteredData: ItemData = [];\n\n  /**\n   * Placeholder text for the component's filter input field.\n   */\n  @Prop({ reflect: true }) filterPlaceholder: string;\n\n  /**\n   * Text for the component's filter input field.\n   */\n  @Prop({ reflect: true, mutable: true }) filterText: string;\n\n  @Watch(\"filterText\")\n  async handleFilterTextChange(): Promise<void> {\n    this.performFilter();\n  }\n\n  /**\n   * Specifies an accessible name for the component.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the properties to match against when filtering. If not set, all properties will be matched (label, description, metadata, value).\n   */\n  @Prop() filterProps: string[];\n\n  @Watch(\"filterProps\")\n  async handleFilterPropsChange(): Promise<void> {\n    this.performFilter();\n  }\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ListMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ListMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop() numberingSystem: NumberingSystem;\n\n  /**\n   * One of the items within the list can be opened.\n   *\n   * @internal\n   */\n  @Prop() openable = false;\n\n  /**\n   * The currently selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteListItemElement[] = [];\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection,\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection, and\n   *\n   * `\"none\"` does not allow any selections.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"none\" | \"multiple\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = \"none\";\n\n  /**\n   * Specifies the selection appearance - `\"icon\"` (displays a checkmark or dot) or `\"border\"` (displays a border).\n   */\n  @Prop({ reflect: true }) selectionAppearance: SelectionAppearance = \"icon\";\n\n  @Watch(\"filterEnabled\")\n  @Watch(\"group\")\n  @Watch(\"dragEnabled\")\n  @Watch(\"selectionMode\")\n  @Watch(\"selectionAppearance\")\n  handleListItemChange(): void {\n    this.updateListItems({ performFilter: true });\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's selected items have changed.\n   */\n  @Event({ cancelable: false }) calciteListChange: EventEmitter<void>;\n\n  /**\n   * Fires when the component's dragging has ended.\n   */\n  @Event({ cancelable: false }) calciteListDragEnd: EventEmitter<ListDragDetail>;\n\n  /**\n   * Fires when the component's dragging has started.\n   */\n  @Event({ cancelable: false }) calciteListDragStart: EventEmitter<ListDragDetail>;\n\n  /**\n   * Fires when the component's filter has changed.\n   */\n  @Event({ cancelable: false }) calciteListFilter: EventEmitter<void>;\n\n  /**\n   * Fires when the component's item order changes.\n   */\n  @Event({ cancelable: false }) calciteListOrderChange: EventEmitter<ListDragDetail>;\n\n  /**\n   * Fires when the default slot has changes in order to notify parent lists.\n   */\n  @Event({ cancelable: false }) calciteInternalListDefaultSlotChange: EventEmitter<void>;\n\n  @Listen(\"calciteInternalListItemToggle\")\n  handleCalciteListItemToggle(event: CustomEvent): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    this.borderItems();\n  }\n\n  @Listen(\"calciteInternalFocusPreviousItem\")\n  handleCalciteInternalFocusPreviousItem(event: CustomEvent): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    const { focusableItems } = this;\n    const currentIndex = focusableItems.findIndex((listItem) => listItem.active);\n\n    const prevIndex = currentIndex - 1;\n\n    if (focusableItems[prevIndex]) {\n      this.focusRow(focusableItems[prevIndex]);\n    }\n  }\n\n  @Listen(\"calciteInternalListItemActive\")\n  handleCalciteInternalListItemActive(event: CustomEvent): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    const target = event.target as HTMLCalciteListItemElement;\n    const { listItems } = this;\n\n    listItems.forEach((listItem) => {\n      listItem.active = listItem === target;\n    });\n  }\n\n  @Listen(\"calciteListItemSelect\")\n  handleCalciteListItemSelect(): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    this.updateSelectedItems(true);\n  }\n\n  @Listen(\"calciteInternalAssistiveTextChange\")\n  handleCalciteInternalAssistiveTextChange(event: CustomEvent): void {\n    this.assistiveText = event.detail.message;\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteHandleNudge\")\n  handleCalciteHandleNudge(event: CustomEvent<HandleNudge>): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    this.handleNudgeEvent(event);\n  }\n\n  @Listen(\"calciteInternalListItemSelect\")\n  handleCalciteInternalListItemSelect(event: CustomEvent): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    const target = event.target as HTMLCalciteListItemElement;\n    const { listItems, selectionMode } = this;\n\n    if (target.selected && (selectionMode === \"single\" || selectionMode === \"single-persist\")) {\n      listItems.forEach((listItem) => (listItem.selected = listItem === target));\n    }\n\n    this.updateSelectedItems();\n  }\n\n  @Listen(\"calciteInternalListItemSelectMultiple\")\n  handleCalciteInternalListItemSelectMultiple(\n    event: CustomEvent<{\n      selectMultiple: boolean;\n    }>,\n  ): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    const { target, detail } = event;\n    const { focusableItems, lastSelectedInfo } = this;\n    const selectedItem = target as HTMLCalciteListItemElement;\n\n    if (detail.selectMultiple && !!lastSelectedInfo) {\n      const currentIndex = focusableItems.indexOf(selectedItem);\n      const lastSelectedIndex = focusableItems.indexOf(lastSelectedInfo.selectedItem);\n      const startIndex = Math.min(lastSelectedIndex, currentIndex);\n      const endIndex = Math.max(lastSelectedIndex, currentIndex);\n\n      focusableItems\n        .slice(startIndex, endIndex + 1)\n        .forEach((item) => (item.selected = lastSelectedInfo.selected));\n    } else {\n      this.lastSelectedInfo = { selectedItem, selected: selectedItem.selected };\n    }\n  }\n\n  @Listen(\"calciteInternalListItemChange\")\n  handleCalciteInternalListItemChange(event: CustomEvent): void {\n    if (this.parentListEl) {\n      return;\n    }\n\n    event.stopPropagation();\n    this.updateListItems();\n  }\n\n  @Listen(\"calciteInternalListItemGroupDefaultSlotChange\")\n  handleCalciteInternalListItemGroupDefaultSlotChange(event: CustomEvent): void {\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.connectObserver();\n    this.updateListItems({ performFilter: true });\n    this.setUpSorting();\n    this.setParentList();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    this.disconnectObserver();\n    disconnectSortableComponent(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ListMessages;\n\n  @Element() el: HTMLCalciteListElement;\n\n  @State() assistiveText: string;\n\n  @State() dataForFilter: ItemData = [];\n\n  dragSelector = listItemSelector;\n\n  filterEl: HTMLCalciteFilterElement;\n\n  focusableItems: HTMLCalciteListItemElement[] = [];\n\n  handleSelector = \"calcite-handle\";\n\n  @State() hasFilterActionsEnd = false;\n\n  @State() hasFilterActionsStart = false;\n\n  @State() hasFilterNoResults = false;\n\n  listItems: HTMLCalciteListItemElement[] = [];\n\n  mutationObserver = createObserver(\"mutation\", () =>\n    this.updateListItems({ performFilter: true }),\n  );\n\n  visibleItems: HTMLCalciteListItemElement[] = [];\n\n  parentListEl: HTMLCalciteListElement;\n\n  sortable: Sortable;\n\n  private lastSelectedInfo: { selectedItem: HTMLCalciteListItemElement; selected: boolean };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   *\n   * @returns {Promise<void>}\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    if (this.filterEnabled) {\n      return this.filterEl?.setFocus();\n    }\n\n    return this.focusableItems.find((listItem) => listItem.active)?.setFocus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      loading,\n      label,\n      disabled,\n      dataForFilter,\n      filterEnabled,\n      filterPlaceholder,\n      filterText,\n      filteredItems,\n      hasFilterActionsStart,\n      hasFilterActionsEnd,\n      hasFilterNoResults,\n      filterProps,\n    } = this;\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div class={CSS.container}>\n          {this.dragEnabled ? (\n            <span aria-live=\"assertive\" class={CSS.assistiveText}>\n              {this.assistiveText}\n            </span>\n          ) : null}\n          {this.renderItemAriaLive()}\n          {loading ? <calcite-scrim class={CSS.scrim} loading={loading} /> : null}\n          <table\n            aria-busy={toAriaBoolean(loading)}\n            aria-label={label || \"\"}\n            class={CSS.table}\n            onKeyDown={this.handleListKeydown}\n            role=\"treegrid\"\n          >\n            {filterEnabled || hasFilterActionsStart || hasFilterActionsEnd ? (\n              <thead class={CSS.sticky}>\n                <tr>\n                  <th colSpan={MAX_COLUMNS}>\n                    <calcite-stack class={CSS.stack}>\n                      <slot\n                        name={SLOTS.filterActionsStart}\n                        onSlotchange={this.handleFilterActionsStartSlotChange}\n                        slot={STACK_SLOTS.actionsStart}\n                      />\n                      <calcite-filter\n                        aria-label={filterPlaceholder}\n                        disabled={disabled}\n                        filterProps={filterProps}\n                        items={dataForFilter}\n                        onCalciteFilterChange={this.handleFilterChange}\n                        placeholder={filterPlaceholder}\n                        ref={this.setFilterEl}\n                        value={filterText}\n                      />\n                      <slot\n                        name={SLOTS.filterActionsEnd}\n                        onSlotchange={this.handleFilterActionsEndSlotChange}\n                        slot={STACK_SLOTS.actionsEnd}\n                      />\n                    </calcite-stack>\n                  </th>\n                </tr>\n              </thead>\n            ) : null}\n            <tbody class={CSS.tableContainer}>\n              <slot onSlotchange={this.handleDefaultSlotChange} />\n            </tbody>\n          </table>\n          <div\n            aria-live=\"polite\"\n            data-test-id=\"no-results-container\"\n            hidden={!(hasFilterNoResults && filterEnabled && filterText && !filteredItems.length)}\n          >\n            <slot\n              name={SLOTS.filterNoResults}\n              onSlotchange={this.handleFilterNoResultsSlotChange}\n            />\n          </div>\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private renderItemAriaLive(): VNode {\n    const {\n      messages,\n      filteredItems,\n      parentListEl,\n      effectiveLocale,\n      numberingSystem,\n      filterEnabled,\n      filterText,\n      filteredData,\n    } = this;\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: effectiveLocale,\n      numberingSystem,\n    };\n\n    return !parentListEl ? (\n      <div aria-live=\"polite\" class={CSS.assistiveText}>\n        {filterEnabled && filterText && filteredData?.length ? (\n          <div key=\"aria-filter-enabled\">{messages.filterEnabled}</div>\n        ) : null}\n        <div key=\"aria-item-count\">\n          {messages.total.replace(\n            \"{count}\",\n            numberStringFormatter.localize(filteredItems.length.toString()),\n          )}\n        </div>\n        {filteredItems.length ? (\n          <ol key=\"aria-item-list\">\n            {filteredItems.map((item) => (\n              <li>{item.label}</li>\n            ))}\n          </ol>\n        ) : null}\n      </div>\n    ) : null;\n  }\n\n  private connectObserver(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  private disconnectObserver(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  private setUpSorting(): void {\n    const { dragEnabled } = this;\n\n    if (!dragEnabled) {\n      return;\n    }\n\n    connectSortableComponent(this);\n  }\n\n  onGlobalDragStart(): void {\n    this.disconnectObserver();\n  }\n\n  onGlobalDragEnd(): void {\n    this.connectObserver();\n  }\n\n  onDragEnd(detail: ListDragDetail): void {\n    this.calciteListDragEnd.emit(detail);\n  }\n\n  onDragStart(detail: ListDragDetail): void {\n    this.calciteListDragStart.emit(detail);\n  }\n\n  onDragSort(detail: ListDragDetail): void {\n    this.setParentList();\n    this.updateListItems();\n\n    this.calciteListOrderChange.emit(detail);\n  }\n\n  private setParentList(): void {\n    this.parentListEl = this.el.parentElement?.closest(\"calcite-list\");\n  }\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    updateListItemChildren(getListItemChildren(event.target as HTMLSlotElement));\n    if (this.parentListEl) {\n      this.calciteInternalListDefaultSlotChange.emit();\n    }\n  };\n\n  private handleFilterActionsStartSlotChange = (event: Event): void => {\n    this.hasFilterActionsStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleFilterActionsEndSlotChange = (event: Event): void => {\n    this.hasFilterActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleFilterNoResultsSlotChange = (event: Event): void => {\n    this.hasFilterNoResults = slotChangeHasAssignedElement(event);\n  };\n\n  private setActiveListItem = (): void => {\n    const { focusableItems } = this;\n\n    if (!focusableItems.some((item) => item.active)) {\n      if (focusableItems[0]) {\n        focusableItems[0].active = true;\n      }\n    }\n  };\n\n  private updateSelectedItems = (emit = false): void => {\n    this.selectedItems = this.visibleItems.filter((item) => item.selected);\n    if (emit) {\n      this.calciteListChange.emit();\n    }\n  };\n\n  private filterElements({\n    el,\n    filteredItems,\n    visibleParents,\n  }: {\n    el: HTMLCalciteListItemElement | HTMLCalciteListItemGroupElement;\n    filteredItems: HTMLCalciteListItemElement[];\n    visibleParents: WeakSet<HTMLCalciteListItemElement | HTMLCalciteListItemGroupElement>;\n  }): void {\n    const filterHidden =\n      !visibleParents.has(el) && !filteredItems.includes(el as HTMLCalciteListItemElement);\n\n    el.filterHidden = filterHidden;\n\n    const closestParent = el.parentElement.closest<\n      HTMLCalciteListItemElement | HTMLCalciteListItemGroupElement\n    >(parentSelector);\n\n    if (!closestParent) {\n      return;\n    }\n\n    if (!filterHidden) {\n      visibleParents.add(closestParent);\n    }\n\n    this.filterElements({\n      el: closestParent,\n      filteredItems,\n      visibleParents,\n    });\n  }\n\n  private allParentListItemsOpen(item: HTMLCalciteListItemElement): boolean {\n    const parentItem = item.parentElement?.closest(listItemSelector);\n\n    if (!parentItem) {\n      return true;\n    } else if (!parentItem.open) {\n      return false;\n    }\n\n    return this.allParentListItemsOpen(parentItem);\n  }\n\n  private borderItems = (): void => {\n    const visibleItems = this.visibleItems.filter(\n      (item) => !item.filterHidden && this.allParentListItemsOpen(item),\n    );\n\n    visibleItems.forEach(\n      (item) => (item.bordered = item !== visibleItems[visibleItems.length - 1]),\n    );\n  };\n\n  private updateFilteredItems = (emit = false): void => {\n    const { visibleItems, filteredData, filterText } = this;\n\n    const values = filteredData.map((item) => item.value);\n\n    const lastDescendantItems = visibleItems?.filter((listItem) =>\n      visibleItems.every((li) => li === listItem || !listItem.contains(li)),\n    );\n\n    const filteredItems =\n      visibleItems.filter((item) => !filterText || values.includes(item.value)) || [];\n\n    const visibleParents = new WeakSet<HTMLElement>();\n\n    lastDescendantItems.forEach((listItem) =>\n      this.filterElements({ el: listItem, filteredItems, visibleParents }),\n    );\n\n    this.filteredItems = filteredItems;\n\n    if (emit) {\n      this.calciteListFilter.emit();\n    }\n  };\n\n  private updateFilteredData(emit = false): void {\n    const { filterEl } = this;\n\n    if (!filterEl) {\n      return;\n    }\n\n    if (filterEl.filteredItems) {\n      this.filteredData = filterEl.filteredItems as ItemData;\n    }\n\n    this.updateListItems({ emitFilterChange: emit });\n  }\n\n  private async filterAndUpdateData(): Promise<void> {\n    await this.filterEl?.filter(this.filterText);\n    this.updateFilteredData();\n  }\n\n  private performFilter(): void {\n    const { filterEl, filterText, filterProps } = this;\n\n    if (!filterEl) {\n      return;\n    }\n\n    filterEl.value = filterText;\n    filterEl.filterProps = filterProps;\n    this.filterAndUpdateData();\n  }\n\n  private setFilterEl = (el: HTMLCalciteFilterElement): void => {\n    this.filterEl = el;\n    this.performFilter();\n  };\n\n  private handleFilterChange = (event: CustomEvent): void => {\n    event.stopPropagation();\n    const { value } = event.currentTarget as HTMLCalciteFilterElement;\n    this.filterText = value;\n    this.updateFilteredData(true);\n  };\n\n  private getItemData = (): ItemData => {\n    return this.listItems.map((item) => ({\n      label: item.label,\n      description: item.description,\n      metadata: item.metadata,\n      value: item.value,\n    }));\n  };\n\n  private updateListItems = debounce(\n    (options?: { emitFilterChange?: boolean; performFilter?: boolean }): void => {\n      const emitFilterChange = options?.emitFilterChange ?? false;\n      const performFilter = options?.performFilter ?? false;\n\n      const { selectionAppearance, selectionMode, dragEnabled, el, filterEl, filterEnabled } = this;\n\n      const items = Array.from(this.el.querySelectorAll(listItemSelector));\n\n      items.forEach((item) => {\n        item.selectionAppearance = selectionAppearance;\n        item.selectionMode = selectionMode;\n        if (item.closest(\"calcite-list\") === el) {\n          item.dragHandle = dragEnabled;\n        }\n      });\n\n      if (this.parentListEl) {\n        this.setUpSorting();\n        return;\n      }\n\n      this.listItems = items;\n      if (filterEnabled && performFilter) {\n        this.dataForFilter = this.getItemData();\n\n        if (filterEl) {\n          filterEl.items = this.dataForFilter;\n          this.filterAndUpdateData();\n        }\n      }\n      this.visibleItems = this.listItems.filter((item) => !item.closed && !item.hidden);\n      this.updateFilteredItems(emitFilterChange);\n      this.borderItems();\n      this.focusableItems = this.filteredItems.filter((item) => !item.disabled);\n      this.setActiveListItem();\n      this.updateSelectedItems();\n      this.setUpSorting();\n    },\n    debounceTimeout,\n  );\n\n  private focusRow = (focusEl: HTMLCalciteListItemElement): void => {\n    const { focusableItems } = this;\n\n    if (!focusEl) {\n      return;\n    }\n\n    focusableItems.forEach((listItem) => (listItem.active = listItem === focusEl));\n\n    focusEl.setFocus();\n  };\n\n  private isNavigable = (listItem: HTMLCalciteListItemElement): boolean => {\n    const parentListItemEl = listItem.parentElement?.closest(listItemSelector);\n\n    if (!parentListItemEl) {\n      return true;\n    }\n\n    return parentListItemEl.open && this.isNavigable(parentListItemEl);\n  };\n\n  private handleListKeydown = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented || !!this.parentListEl) {\n      return;\n    }\n\n    const { key } = event;\n    const navigableItems = this.focusableItems.filter((listItem) => this.isNavigable(listItem));\n    const currentIndex = navigableItems.findIndex((listItem) => listItem.active);\n\n    if (key === \"ArrowDown\") {\n      event.preventDefault();\n      const nextIndex = event.target === this.filterEl ? 0 : currentIndex + 1;\n\n      if (navigableItems[nextIndex]) {\n        this.focusRow(navigableItems[nextIndex]);\n      }\n    } else if (key === \"ArrowUp\") {\n      event.preventDefault();\n\n      if (currentIndex === 0 && this.filterEnabled) {\n        this.filterEl?.setFocus();\n        return;\n      }\n\n      const prevIndex = currentIndex - 1;\n\n      if (navigableItems[prevIndex]) {\n        this.focusRow(navigableItems[prevIndex]);\n      }\n    } else if (key === \"Home\") {\n      event.preventDefault();\n      const homeItem = navigableItems[0];\n\n      if (homeItem) {\n        this.focusRow(homeItem);\n      }\n    } else if (key === \"End\") {\n      event.preventDefault();\n      const endItem = navigableItems[navigableItems.length - 1];\n\n      if (endItem) {\n        this.focusRow(endItem);\n      }\n    }\n  };\n\n  handleNudgeEvent(event: CustomEvent<HandleNudge>): void {\n    const { handleSelector, dragSelector } = this;\n    const { direction } = event.detail;\n\n    const composedPath = event.composedPath();\n\n    const handle = composedPath.find(\n      (el: HTMLElement): el is HTMLCalciteHandleElement =>\n        el?.tagName && el.matches(handleSelector),\n    );\n\n    const dragEl = composedPath.find(\n      (el: HTMLElement): el is HTMLCalciteListItemElement =>\n        el?.tagName && el.matches(dragSelector),\n    );\n\n    const parentEl = dragEl?.parentElement as HTMLCalciteListElement;\n\n    if (!parentEl) {\n      return;\n    }\n\n    const { filteredItems } = this;\n\n    const sameParentItems = filteredItems.filter((item) => item.parentElement === parentEl);\n\n    const lastIndex = sameParentItems.length - 1;\n    const oldIndex = sameParentItems.indexOf(dragEl);\n    let newIndex: number;\n\n    if (direction === \"up\") {\n      newIndex = oldIndex === 0 ? lastIndex : oldIndex - 1;\n    } else {\n      newIndex = oldIndex === lastIndex ? 0 : oldIndex + 1;\n    }\n\n    this.disconnectObserver();\n    handle.blurUnselectDisabled = true;\n\n    const referenceEl =\n      (direction === \"up\" && newIndex !== lastIndex) || (direction === \"down\" && newIndex === 0)\n        ? sameParentItems[newIndex]\n        : sameParentItems[newIndex].nextSibling;\n\n    parentEl.insertBefore(dragEl, referenceEl);\n\n    this.updateListItems();\n    this.connectObserver();\n\n    this.calciteListOrderChange.emit({\n      dragEl,\n      fromEl: parentEl,\n      toEl: parentEl,\n      newIndex,\n      oldIndex,\n    });\n\n    handle.setFocus().then(() => (handle.blurUnselectDisabled = false));\n  }\n}\n",":host {\n  @apply block;\n}\n\n@include disabled();\n\n.container {\n  position: relative;\n}\n\n.table-container {\n  @apply box-border\n  flex\n  w-full\n  flex-col\n  bg-transparent;\n  * {\n    @apply box-border;\n  }\n}\n\n.table {\n  @apply w-full border-collapse;\n}\n\n.stack {\n  --calcite-stack-padding-inline: 0;\n  --calcite-stack-padding-block: 0;\n}\n\n.sticky-pos {\n  @apply sticky\n  top-0\n  z-sticky\n  bg-foreground-1;\n  & th {\n    @apply p-0;\n  }\n}\n\n.assistive-text {\n  @apply sr-only;\n}\n\n@include base-component();\n",":host {\n  @apply flex flex-col bg-foreground-1;\n  --calcite-list-item-icon-color: theme(\"colors.brand\");\n}\n\n:host([filter-hidden]),\n:host([closed]) {\n  @apply hidden;\n}\n\n.wrapper--bordered {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n@include disabled();\n\n.container {\n  @apply bg-foreground-1\n  box-border\n  flex\n  flex-1\n  overflow-hidden;\n  * {\n    @apply box-border;\n  }\n}\n\n.container--hover:hover {\n  @apply bg-foreground-2 cursor-pointer;\n}\n\n.container:active {\n  @apply bg-foreground-1;\n}\n\n.container--border {\n  border-inline-start-width: theme(\"borderWidth.4\");\n  border-inline-start-style: solid;\n}\n\n.container--border-selected {\n  border-inline-start-color: theme(\"colors.brand\");\n}\n\n.container--border-unselected {\n  border-inline-start-color: transparent;\n}\n\n.container:hover {\n  &.container--border-unselected {\n    @apply border-color-1;\n  }\n}\n\n.nested-container {\n  @apply hidden flex-col\n    border-solid\n    border-0\n    border-color-3;\n\n  margin-inline-start: var(--calcite-list-item-spacing-indent, theme(\"spacing.6\"));\n}\n\n.nested-container--open {\n  @apply flex;\n}\n\n.content-container {\n  @apply text-color-2\n    select-none\n    flex\n    flex-auto\n    font-normal\n    items-stretch\n    p-0;\n}\n\n.content-container--unavailable {\n  @apply opacity-disabled;\n}\n\ntr,\ntd {\n  @apply focus-base;\n}\n\ntr {\n  @apply relative;\n}\n\ntr:focus,\ntd:focus {\n  @apply focus-inset;\n}\n\n.content,\n.custom-content {\n  @apply text-n2-wrap\n    flex\n    flex-auto\n    flex-col\n    justify-center\n    px-3\n    py-2;\n}\n\n.label,\n.description,\n.content-bottom {\n  @apply text-n2 word-break font-sans font-normal;\n  &:only-child {\n    @apply m-0 py-1;\n  }\n}\n\n.label {\n  @apply text-color-1;\n}\n\n:host([selected]) .label {\n  @apply font-medium;\n}\n\n.description {\n  @apply text-color-3 mt-0.5;\n}\n\n:host([selected]) .description {\n  @apply text-color-2;\n}\n\n.content-start {\n  @apply justify-start;\n}\n\n.content-end {\n  @apply justify-end;\n}\n\n.content-start,\n.content-end {\n  @apply flex-auto;\n\n  ::slotted(calcite-icon) {\n    @apply self-center mx-3;\n  }\n}\n\n.content-bottom {\n  @apply flex flex-col;\n}\n\n.content-container--has-center-content .content-start,\n.content-container--has-center-content .content-end {\n  @apply flex-initial;\n}\n\n.selection-container {\n  @apply flex py-0;\n  color: theme(\"borderColor.color.input\");\n  padding-inline: var(--calcite-spacing-md) var(--calcite-spacing-xxs);\n}\n\n.selection-container--single {\n  color: transparent;\n}\n\n:host(:not([disabled]):not([selected])) .container:hover .selection-container--single {\n  color: theme(\"borderColor.color.1\");\n}\n\n:host([selected]:hover) .selection-container,\n:host([selected]:hover) .selection-container--single,\n:host([selected]) .selection-container {\n  color: var(--calcite-list-item-icon-color);\n}\n\n.open-container {\n  color: theme(\"textColor.color.3\");\n}\n\n:host(:not([disabled])) .container:hover .open-container {\n  color: theme(\"textColor.color.1\");\n}\n\n.actions-start,\n.actions-end,\n.content-start,\n.content-end,\n.selection-container,\n.drag-container,\n.open-container {\n  @apply flex items-center;\n\n  calcite-action,\n  calcite-handle {\n    @apply self-stretch;\n  }\n}\n\n.open-container,\n.selection-container {\n  @apply cursor-pointer;\n}\n\n.actions-start,\n.actions-end {\n  @apply p-0 relative;\n  ::slotted(calcite-action),\n  ::slotted(calcite-action-menu),\n  ::slotted(calcite-handle),\n  ::slotted(calcite-dropdown) {\n    @apply self-stretch;\n\n    color: inherit;\n  }\n}\n\ntr:focus {\n  .actions-start,\n  .actions-end {\n    inset-block: theme(\"spacing[0.5]\");\n    .close,\n    ::slotted(calcite-action),\n    ::slotted(calcite-action-menu),\n    ::slotted(calcite-handle),\n    ::slotted(calcite-dropdown) {\n      block-size: calc(100% - theme(\"spacing[1]\"));\n    }\n  }\n\n  &::after,\n  &::before {\n    @apply absolute;\n    content: \"\";\n    inline-size: theme(\"spacing[0.5]\");\n    z-index: theme(\"zIndex.header\");\n    background-color: theme(\"colors.brand\");\n    inset-block: 0;\n  }\n  &::before {\n    inset-inline-start: 0;\n  }\n  &::after {\n    inset-inline-end: 0;\n  }\n}\n\n.container--border:focus::before {\n  display: none;\n}\n\n::slotted(calcite-list:empty) {\n  @apply border-t-0;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getFirstTabbable,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { SelectionMode } from \"../interfaces\";\nimport { SelectionAppearance } from \"../list/resources\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { SortableComponentItem } from \"../../utils/sortableComponent\";\nimport { ListItemMessages } from \"./assets/list-item/t9n\";\nimport {\n  getDepth,\n  getListItemChildren,\n  getListItemChildLists,\n  updateListItemChildren,\n} from \"./utils\";\nimport { CSS, activeCellTestAttribute, ICONS, SLOTS } from \"./resources\";\n\nconst focusMap = new Map<HTMLCalciteListElement, number>();\nconst listSelector = \"calcite-list\";\n\n/**\n * @slot - A slot for adding `calcite-list`, `calcite-list-item` and `calcite-list-item-group` elements.\n * @slot actions-start - A slot for adding actionable `calcite-action` elements before the content of the component.\n * @slot content-start - A slot for adding non-actionable elements before the label and description of the component.\n * @slot content - A slot for adding non-actionable, centered content in place of the `label` and `description` of the component.\n * @slot content-end - A slot for adding non-actionable elements after the label and description of the component.\n * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the component.\n * @slot content-bottom - A slot for adding content below the component's `label` and `description`.\n */\n@Component({\n  tag: \"calcite-list-item\",\n  styleUrl: \"list-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ListItem\n  implements\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent,\n    SortableComponentItem\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets the item as focusable. Only one item should be focusable within a list.\n   *\n   * @internal\n   */\n  @Prop() active = false;\n\n  @Watch(\"active\")\n  activeHandler(active: boolean): void {\n    if (!active) {\n      this.focusCell(null, false);\n    }\n  }\n\n  /**\n   * Sets the item to display a border.\n   *\n   * @internal\n   */\n  @Prop() bordered = false;\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  @Watch(\"closed\")\n  handleClosedChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * A description for the component. Displays below the label text.\n   */\n  @Prop() description: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * When `true`, the item is not draggable.\n   */\n  @Prop({ reflect: true }) dragDisabled = false;\n\n  /**\n   * When `true`, the component displays a draggable button.\n   *\n   * @internal\n   */\n  @Prop() dragHandle = false;\n\n  /**\n   * When `true`, the component's drag handle is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) dragSelected = false;\n\n  /**\n   * Hides the component when filtered.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterHidden = false;\n\n  /**\n   * The label text of the component. Displays above the description text.\n   */\n  @Prop() label: string;\n\n  /**\n   * Provides additional metadata to the component. Primary use is for a filter on the parent `calcite-list`.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  /**\n   * When `true`, the item is open to show child components.\n   */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  handleOpenChange(): void {\n    this.emitCalciteInternalListItemToggle();\n  }\n\n  /**\n   * Used to specify the aria-setsize attribute to define the number of items in the current set of list for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setSize: number = null;\n\n  /**\n   * Used to specify the aria-posinset attribute to define the number or position in the current set of list items for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setPosition: number = null;\n\n  /**\n   * When `true` and the parent `calcite-list`'s `selectionMode` is `\"single\"`, `\"single-persist\"', or `\"multiple\"`, the component is selected.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(): void {\n    this.calciteInternalListItemSelect.emit();\n  }\n\n  /**\n   * When `true`, the component's content appears inactive.\n   */\n  @Prop({ reflect: true }) unavailable = false;\n\n  /**\n   * The component's value.\n   */\n  @Prop() value: any;\n\n  /**\n   * Specifies the selection mode - `\"multiple\"` (allow any number of selected items), `\"single\"` (allow one selected item), `\"single-persist\"` (allow one selected item and prevent de-selection), or `\"none\"` (no selected items).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionMode: Extract<\n    \"none\" | \"multiple\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = null;\n\n  /**\n   * Specifies the selection appearance - `\"icon\"` (displays a checkmark or dot) or `\"border\"` (displays a border).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionAppearance: SelectionAppearance = null;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ListItemMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ListItemMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemSelect: EventEmitter<void>;\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemClose: EventEmitter<void>;\n\n  /**\n   * Fires when the drag handle is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemDragHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the open button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemToggle: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemSelect: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalListItemSelectMultiple: EventEmitter<{\n    selectMultiple: boolean;\n  }>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemActive: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalFocusPreviousItem: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemChange: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemToggle: EventEmitter<void>;\n\n  @Listen(\"calciteInternalListItemGroupDefaultSlotChange\")\n  @Listen(\"calciteInternalListDefaultSlotChange\")\n  handleCalciteInternalListDefaultSlotChanges(event: CustomEvent<void>): void {\n    event.stopPropagation();\n    this.handleOpenableChange(this.defaultSlotEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteListItemElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ListItemMessages;\n\n  @State() level: number = null;\n\n  @State() parentListEl: HTMLCalciteListElement;\n\n  @State() openable = false;\n\n  @State() hasActionsStart = false;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasCustomContent = false;\n\n  @State() hasContentStart = false;\n\n  @State() hasContentEnd = false;\n\n  @State() hasContentBottom = false;\n\n  containerEl: HTMLTableRowElement;\n\n  contentEl: HTMLTableCellElement;\n\n  actionsStartEl: HTMLTableCellElement;\n\n  actionsEndEl: HTMLTableCellElement;\n\n  handleGridEl: HTMLTableCellElement;\n\n  defaultSlotEl: HTMLSlotElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    const { el } = this;\n    this.parentListEl = el.closest(listSelector);\n    this.level = getDepth(el) + 1;\n    this.setSelectionDefaults();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    const { containerEl, parentListEl } = this;\n    const focusIndex = focusMap.get(parentListEl);\n\n    if (typeof focusIndex === \"number\") {\n      const cells = this.getGridCells();\n      if (cells[focusIndex]) {\n        this.focusCell(cells[focusIndex]);\n      } else {\n        containerEl?.focus();\n      }\n      return;\n    }\n\n    containerEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderSelected(): VNode {\n    const { selected, selectionMode, selectionAppearance } = this;\n\n    if (selectionMode === \"none\" || selectionAppearance === \"border\") {\n      return null;\n    }\n\n    return (\n      <td\n        class={{\n          [CSS.selectionContainer]: true,\n          [CSS.selectionContainerSingle]:\n            selectionMode === \"single\" || selectionMode === \"single-persist\",\n        }}\n        key=\"selection-container\"\n        onClick={this.handleItemClick}\n      >\n        <calcite-icon\n          icon={\n            selected\n              ? selectionMode === \"multiple\"\n                ? ICONS.selectedMultiple\n                : ICONS.selectedSingle\n              : selectionMode === \"multiple\"\n                ? ICONS.unselectedMultiple\n                : ICONS.unselectedSingle\n          }\n          scale=\"s\"\n        />\n      </td>\n    );\n  }\n\n  renderDragHandle(): VNode {\n    const { label, dragHandle, dragSelected, dragDisabled, setPosition, setSize } = this;\n\n    return dragHandle ? (\n      <td\n        aria-label={label}\n        class={CSS.dragContainer}\n        key=\"drag-handle-container\"\n        onFocusin={this.focusCellHandle}\n        ref={(el) => (this.handleGridEl = el)}\n        role=\"gridcell\"\n      >\n        <calcite-handle\n          disabled={dragDisabled}\n          label={label}\n          onCalciteHandleChange={this.dragHandleSelectedChangeHandler}\n          selected={dragSelected}\n          setPosition={setPosition}\n          setSize={setSize}\n        />\n      </td>\n    ) : null;\n  }\n\n  renderOpen(): VNode {\n    const { el, open, openable, messages } = this;\n    const dir = getElementDir(el);\n    const icon = open ? ICONS.open : dir === \"rtl\" ? ICONS.closedRTL : ICONS.closedLTR;\n    const tooltip = open ? messages.collapse : messages.expand;\n\n    return openable ? (\n      <td\n        class={CSS.openContainer}\n        key=\"open-container\"\n        onClick={this.handleToggleClick}\n        title={tooltip}\n      >\n        <calcite-icon icon={icon} key={icon} scale=\"s\" />\n      </td>\n    ) : null;\n  }\n\n  renderActionsStart(): VNode {\n    const { label, hasActionsStart } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsStart}\n        hidden={!hasActionsStart}\n        key=\"actions-start-container\"\n        onFocusin={this.focusCellActionsStart}\n        ref={(el) => (this.actionsStartEl = el)}\n        role=\"gridcell\"\n      >\n        <slot name={SLOTS.actionsStart} onSlotchange={this.handleActionsStartSlotChange} />\n      </td>\n    );\n  }\n\n  renderActionsEnd(): VNode {\n    const { label, hasActionsEnd, closable, messages } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsEnd}\n        hidden={!(hasActionsEnd || closable)}\n        key=\"actions-end-container\"\n        onFocusin={this.focusCellActionsEnd}\n        ref={(el) => (this.actionsEndEl = el)}\n        role=\"gridcell\"\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        {closable ? (\n          <calcite-action\n            appearance=\"transparent\"\n            class={CSS.close}\n            icon={ICONS.close}\n            key=\"close-action\"\n            label={messages.close}\n            onClick={this.handleCloseClick}\n            text={messages.close}\n          />\n        ) : null}\n      </td>\n    );\n  }\n\n  renderContentStart(): VNode {\n    const { hasContentStart } = this;\n    return (\n      <div class={CSS.contentStart} hidden={!hasContentStart}>\n        <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n      </div>\n    );\n  }\n\n  renderCustomContent(): VNode {\n    const { hasCustomContent } = this;\n    return (\n      <div class={CSS.customContent} hidden={!hasCustomContent}>\n        <slot name={SLOTS.content} onSlotchange={this.handleContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentEnd(): VNode {\n    const { hasContentEnd } = this;\n    return (\n      <div class={CSS.contentEnd} hidden={!hasContentEnd}>\n        <slot name={SLOTS.contentEnd} onSlotchange={this.handleContentEndSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    const { hasContentBottom } = this;\n    return (\n      <div class={CSS.contentBottom} hidden={!hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.handleContentBottomSlotChange} />\n      </div>\n    );\n  }\n\n  renderDefaultContainer(): VNode {\n    return (\n      <div\n        class={{\n          [CSS.nestedContainer]: true,\n          [CSS.nestedContainerOpen]: this.openable && this.open,\n        }}\n      >\n        <slot\n          onSlotchange={this.handleDefaultSlotChange}\n          ref={(el: HTMLSlotElement) => (this.defaultSlotEl = el)}\n        />\n      </div>\n    );\n  }\n\n  renderContentProperties(): VNode {\n    const { label, description, hasCustomContent } = this;\n\n    return !hasCustomContent && (!!label || !!description) ? (\n      <div class={CSS.content} key=\"content\">\n        {label ? (\n          <div class={CSS.label} key=\"label\">\n            {label}\n          </div>\n        ) : null}\n        {description ? (\n          <div class={CSS.description} key=\"description\">\n            {description}\n          </div>\n        ) : null}\n      </div>\n    ) : null;\n  }\n\n  renderContentContainer(): VNode {\n    const { description, label, selectionMode, hasCustomContent, unavailable } = this;\n    const hasCenterContent = hasCustomContent || !!label || !!description;\n    const content = [\n      this.renderContentStart(),\n      this.renderCustomContent(),\n      this.renderContentProperties(),\n      this.renderContentEnd(),\n    ];\n\n    return (\n      <td\n        aria-label={label}\n        class={{\n          [CSS.contentContainer]: true,\n          [CSS.contentContainerUnavailable]: unavailable,\n          [CSS.contentContainerSelectable]: selectionMode !== \"none\",\n          [CSS.contentContainerHasCenterContent]: hasCenterContent,\n        }}\n        key=\"content-container\"\n        onClick={this.handleItemClick}\n        onFocusin={this.focusCellContent}\n        ref={(el) => (this.contentEl = el)}\n        role=\"gridcell\"\n      >\n        {content}\n      </td>\n    );\n  }\n\n  render(): VNode {\n    const {\n      openable,\n      open,\n      level,\n      setPosition,\n      setSize,\n      active,\n      label,\n      selected,\n      selectionAppearance,\n      selectionMode,\n      closed,\n      filterHidden,\n      bordered,\n      disabled,\n    } = this;\n\n    const showBorder = selectionMode !== \"none\" && selectionAppearance === \"border\";\n    const borderSelected = showBorder && selected;\n    const borderUnselected = showBorder && !selected;\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div class={{ [CSS.wrapper]: true, [CSS.wrapperBordered]: bordered }}>\n            <tr\n              aria-expanded={openable ? toAriaBoolean(open) : null}\n              aria-label={label}\n              aria-level={level}\n              aria-posinset={setPosition}\n              aria-selected={toAriaBoolean(selected)}\n              aria-setsize={setSize}\n              class={{\n                [CSS.container]: true,\n                [CSS.containerHover]: true,\n                [CSS.containerBorder]: showBorder,\n                [CSS.containerBorderSelected]: borderSelected,\n                [CSS.containerBorderUnselected]: borderUnselected,\n              }}\n              hidden={closed || filterHidden}\n              onFocus={this.focusCellNull}\n              onFocusin={this.emitInternalListItemActive}\n              onKeyDown={this.handleItemKeyDown}\n              ref={(el) => (this.containerEl = el)}\n              role=\"row\"\n              tabIndex={active ? 0 : -1}\n            >\n              {this.renderDragHandle()}\n              {this.renderSelected()}\n              {this.renderOpen()}\n              {this.renderActionsStart()}\n              {this.renderContentContainer()}\n              {this.renderActionsEnd()}\n            </tr>\n            {this.renderContentBottom()}\n          </div>\n          {this.renderDefaultContainer()}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private dragHandleSelectedChangeHandler = (event: CustomEvent<void>): void => {\n    this.dragSelected = (event.target as HTMLCalciteHandleElement).selected;\n    this.calciteListItemDragHandleChange.emit();\n    event.stopPropagation();\n  };\n\n  private emitInternalListItemActive = (): void => {\n    this.calciteInternalListItemActive.emit();\n  };\n\n  private focusCellHandle = (): void => {\n    this.handleCellFocusIn(this.handleGridEl);\n  };\n\n  private focusCellActionsStart = (): void => {\n    this.handleCellFocusIn(this.actionsStartEl);\n  };\n\n  private focusCellContent = (): void => {\n    this.handleCellFocusIn(this.contentEl);\n  };\n\n  private focusCellActionsEnd = (): void => {\n    this.handleCellFocusIn(this.actionsEndEl);\n  };\n\n  private emitCalciteInternalListItemToggle(): void {\n    this.calciteInternalListItemToggle.emit();\n  }\n\n  private emitCalciteInternalListItemChange(): void {\n    this.calciteInternalListItemChange.emit();\n  }\n\n  private handleCloseClick = (): void => {\n    this.closed = true;\n    this.calciteListItemClose.emit();\n  };\n\n  private handleContentSlotChange = (event: Event): void => {\n    this.hasCustomContent = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsStartSlotChange = (event: Event): void => {\n    this.hasActionsStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    this.hasContentStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentEndSlotChange = (event: Event): void => {\n    this.hasContentEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentBottomSlotChange = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n\n  private setSelectionDefaults(): void {\n    const { parentListEl, selectionMode, selectionAppearance } = this;\n\n    if (!parentListEl) {\n      return;\n    }\n\n    if (!selectionMode) {\n      this.selectionMode = parentListEl.selectionMode;\n    }\n\n    if (!selectionAppearance) {\n      this.selectionAppearance = parentListEl.selectionAppearance;\n    }\n  }\n\n  private handleOpenableChange(slotEl: HTMLSlotElement): void {\n    if (!slotEl) {\n      return;\n    }\n\n    const listItemChildren = getListItemChildren(slotEl);\n    const listItemChildLists = getListItemChildLists(slotEl);\n    updateListItemChildren(listItemChildren);\n\n    this.openable = !!listItemChildren.length || !!listItemChildLists.length;\n  }\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.handleOpenableChange(event.target as HTMLSlotElement);\n  };\n\n  private handleToggleClick = (): void => {\n    this.toggle();\n  };\n\n  private toggle = (value = !this.open): void => {\n    this.open = value;\n    this.calciteListItemToggle.emit();\n  };\n\n  private handleItemClick = (event: PointerEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    this.toggleSelected(event.shiftKey);\n  };\n\n  private toggleSelected = (shiftKey: boolean): void => {\n    const { selectionMode, selected } = this;\n\n    if (this.disabled) {\n      return;\n    }\n\n    if (selectionMode === \"multiple\" || selectionMode === \"single\") {\n      this.selected = !selected;\n    } else if (selectionMode === \"single-persist\") {\n      this.selected = true;\n    }\n\n    this.calciteInternalListItemSelectMultiple.emit({\n      selectMultiple: shiftKey && selectionMode === \"multiple\",\n    });\n    this.calciteListItemSelect.emit();\n  };\n\n  private getGridCells(): HTMLTableCellElement[] {\n    return [this.handleGridEl, this.actionsStartEl, this.contentEl, this.actionsEndEl].filter(\n      (el) => el && !el.hidden,\n    );\n  }\n\n  private handleItemKeyDown = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const { key } = event;\n    const composedPath = event.composedPath();\n    const { containerEl, actionsStartEl, actionsEndEl, open, openable } = this;\n\n    const cells = this.getGridCells();\n    const currentIndex = cells.findIndex((cell) => composedPath.includes(cell));\n\n    if (\n      key === \"Enter\" &&\n      !composedPath.includes(actionsStartEl) &&\n      !composedPath.includes(actionsEndEl)\n    ) {\n      event.preventDefault();\n      this.toggleSelected(event.shiftKey);\n    } else if (key === \"ArrowRight\") {\n      event.preventDefault();\n      const nextIndex = currentIndex + 1;\n      if (currentIndex === -1) {\n        if (!open && openable) {\n          this.toggle(true);\n          this.focusCell(null);\n        } else if (cells[0]) {\n          this.focusCell(cells[0]);\n        }\n      } else if (cells[currentIndex] && cells[nextIndex]) {\n        this.focusCell(cells[nextIndex]);\n      }\n    } else if (key === \"ArrowLeft\") {\n      event.preventDefault();\n      const prevIndex = currentIndex - 1;\n      if (currentIndex === -1) {\n        this.focusCell(null);\n        if (open && openable) {\n          this.toggle(false);\n        } else {\n          this.calciteInternalFocusPreviousItem.emit();\n        }\n      } else if (currentIndex === 0) {\n        this.focusCell(null);\n        containerEl.focus();\n      } else if (cells[currentIndex] && cells[prevIndex]) {\n        this.focusCell(cells[prevIndex]);\n      }\n    }\n  };\n\n  private focusCellNull = (): void => {\n    this.focusCell(null);\n  };\n\n  private handleCellFocusIn = (focusEl: HTMLTableCellElement): void => {\n    this.setFocusCell(focusEl, getFirstTabbable(focusEl), true);\n  };\n\n  // Only one cell within a list-item should be focusable at a time. Ensures the active cell is focusable.\n  private setFocusCell = (\n    focusEl: HTMLTableCellElement | null,\n    focusedEl: HTMLElement,\n    saveFocusIndex: boolean,\n  ): void => {\n    const { parentListEl } = this;\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, null);\n    }\n\n    const gridCells = this.getGridCells();\n\n    gridCells.forEach((tableCell) => {\n      tableCell.tabIndex = -1;\n      tableCell.removeAttribute(activeCellTestAttribute);\n    });\n\n    if (!focusEl) {\n      return;\n    }\n\n    focusEl.tabIndex = focusEl === focusedEl ? 0 : -1;\n    focusEl.setAttribute(activeCellTestAttribute, \"\");\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, gridCells.indexOf(focusEl));\n    }\n  };\n\n  private focusCell = (focusEl: HTMLTableCellElement | null, saveFocusIndex = true): void => {\n    const focusedEl = getFirstTabbable(focusEl);\n    this.setFocusCell(focusEl, focusedEl, saveFocusIndex);\n    focusedEl?.focus();\n  };\n}\n","export const CSS = {\n  container: \"container\",\n  heading: \"heading\",\n};\n","import { Component, Element, Event, EventEmitter, h, Host, Prop, VNode } from \"@stencil/core\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { MAX_COLUMNS } from \"../list-item/resources\";\nimport { CSS } from \"./resources\";\n/**\n * @slot - A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.\n */\n@Component({\n  tag: \"calcite-list-item-group\",\n  styleUrl: \"list-item-group.scss\",\n  shadow: true,\n})\nexport class ListItemGroup implements InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Hides the component when filtered.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterHidden = false;\n\n  /**\n   * The header text for all nested `calcite-list-item` rows.\n   *\n   */\n  @Prop({ reflect: true }) heading: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when changes occur in the default slot, notifying parent lists of the changes.\n   */\n  @Event({ cancelable: false })\n  calciteInternalListItemGroupDefaultSlotChange: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteListItemGroupElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { disabled, heading } = this;\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <tr class={CSS.container}>\n            <td class={CSS.heading} colSpan={MAX_COLUMNS}>\n              {heading}\n            </td>\n          </tr>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (): void => {\n    this.calciteInternalListItemGroupDefaultSlotChange.emit();\n  };\n}\n",":host {\n  @apply flex flex-col bg-foreground-1;\n}\n\n:host([filter-hidden]) {\n  @apply hidden;\n}\n\n@include disabled();\n\n.container {\n  @apply text-n1 text-color-2 m-0 flex flex-1 p-3 font-medium;\n}\n\n.heading {\n  @apply p-0;\n}\n\n@include base-component();\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","export const CSS = {\n  container: \"container\",\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  content: \"content\",\n  contentEnd: \"content-end\",\n  actionsEnd: \"actions-end\",\n};\n\nexport const SLOTS = {\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  contentEnd: \"content-end\",\n  actionsEnd: \"actions-end\",\n};\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["CSS$2","SLOTS$1","ICONS","activeCellTestAttribute","listSelector$1","listItemSelector$1","getListItemChildren","slotEl","assignedElements","flatten","listItemGroupChildren","filter","el","matches","map","group","Array","from","querySelectorAll","reduce","previousValue","currentValue","listItemChildren","list","updateListItemChildren","forEach","listItem","setPosition","indexOf","setSize","length","CSS$1","SLOTS","listItemSelector","List","dragSelector","focusableItems","handleSelector","listItems","mutationObserver","createObserver","this","updateListItems","performFilter","visibleItems","handleDefaultSlotChange","event","target","parentListEl","calciteInternalListDefaultSlotChange","emit","handleFilterActionsStartSlotChange","hasFilterActionsStart","slotChangeHasAssignedElement","handleFilterActionsEndSlotChange","hasFilterActionsEnd","handleFilterNoResultsSlotChange","hasFilterNoResults","setActiveListItem","some","item","active","updateSelectedItems","arguments","undefined","_this","selectedItems","selected","calciteListChange","borderItems","filterHidden","allParentListItemsOpen","bordered","updateFilteredItems","filteredData","filterText","values","value","lastDescendantItems","every","li","contains","filteredItems","includes","visibleParents","WeakSet","filterElements","calciteListFilter","setFilterEl","filterEl","handleFilterChange","stopPropagation","currentTarget","updateFilteredData","getItemData","label","description","metadata","debounce","options","emitFilterChange","selectionAppearance","selectionMode","dragEnabled","filterEnabled","items","closest","dragHandle","dataForFilter","filterAndUpdateData","closed","hidden","disabled","setUpSorting","focusRow","focusEl","setFocus","isNavigable","parentListItemEl","parentElement","open","handleListKeydown","defaultPrevented","key","navigableItems","currentIndex","findIndex","preventDefault","nextIndex","prevIndex","homeItem","endItem","handleFilterTextChange","handleFilterPropsChange","onMessagesChange","handleListItemChange","handleCalciteListItemToggle","handleCalciteInternalFocusPreviousItem","handleCalciteInternalListItemActive","handleCalciteListItemSelect","handleCalciteInternalAssistiveTextChange","assistiveText","detail","message","handleCalciteHandleNudge","handleNudgeEvent","handleCalciteInternalListItemSelect","handleCalciteInternalListItemSelectMultiple","lastSelectedInfo","selectedItem","selectMultiple","lastSelectedIndex","startIndex","Math","min","endIndex","max","slice","handleCalciteInternalListItemChange","handleCalciteInternalListItemGroupDefaultSlotChange","connectedCallback","connectLocalized","connectMessages","connectObserver","setParentList","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidRender","updateHostInteraction","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectObserver","disconnectSortableComponent","disconnectLocalized","disconnectMessages","effectiveLocaleChange","updateMessages","effectiveLocale","componentFocusable","find","render","loading","filterPlaceholder","filterProps","h","InteractiveContainer","class","renderItemAriaLive","toAriaBoolean","onKeyDown","role","colSpan","name","onSlotchange","slot","SLOTS$2","actionsStart","onCalciteFilterChange","placeholder","ref","actionsEnd","messages","numberingSystem","numberStringFormatter","numberFormatOptions","locale","total","replace","localize","toString","observe","childList","subtree","disconnect","connectSortableComponent","onGlobalDragStart","onGlobalDragEnd","onDragEnd","calciteListDragEnd","onDragStart","calciteListDragStart","onDragSort","calciteListOrderChange","_ref","has","closestParent","add","parentItem","direction","composedPath","handle","tagName","dragEl","parentEl","sameParentItems","lastIndex","oldIndex","newIndex","blurUnselectDisabled","referenceEl","nextSibling","insertBefore","fromEl","toEl","then","focusMap","Map","ListItem","dragHandleSelectedChangeHandler","dragSelected","calciteListItemDragHandleChange","emitInternalListItemActive","calciteInternalListItemActive","focusCellHandle","handleCellFocusIn","handleGridEl","focusCellActionsStart","actionsStartEl","focusCellContent","contentEl","focusCellActionsEnd","actionsEndEl","handleCloseClick","calciteListItemClose","handleContentSlotChange","hasCustomContent","handleActionsStartSlotChange","hasActionsStart","handleActionsEndSlotChange","hasActionsEnd","handleContentStartSlotChange","hasContentStart","handleContentEndSlotChange","hasContentEnd","handleContentBottomSlotChange","hasContentBottom","handleOpenableChange","handleToggleClick","toggle","_this2","calciteListItemToggle","handleItemClick","toggleSelected","shiftKey","calciteInternalListItemSelectMultiple","calciteListItemSelect","handleItemKeyDown","containerEl","openable","cells","getGridCells","cell","focusCell","calciteInternalFocusPreviousItem","focus","focusCellNull","setFocusCell","getFirstTabbable","focusedEl","saveFocusIndex","set","gridCells","tableCell","tabIndex","removeAttribute","setAttribute","activeHandler","handleClosedChange","emitCalciteInternalListItemChange","handleDisabledChange","handleOpenChange","emitCalciteInternalListItemToggle","handleSelectedChange","calciteInternalListItemSelect","handleCalciteInternalListDefaultSlotChanges","defaultSlotEl","level","element","includeGroup","isBrowser","expression","document","evaluate","XPathResult","UNORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","getDepth","setSelectionDefaults","focusIndex","get","renderSelected","onClick","icon","scale","renderDragHandle","dragDisabled","onFocusin","onCalciteHandleChange","renderOpen","dir","getElementDir","tooltip","collapse","expand","title","renderActionsStart","renderActionsEnd","closable","appearance","close","text","renderContentStart","renderCustomContent","renderContentEnd","renderContentBottom","renderDefaultContainer","renderContentProperties","renderContentContainer","unavailable","hasCenterContent","content","showBorder","borderSelected","borderUnselected","Host","onFocus","calciteInternalListItemToggle","calciteInternalListItemChange","listItemChildLists","getListItemChildLists","CSS","ListItemGroup","calciteInternalListItemGroupDefaultSlotChange","heading","freeGlobal$1","global","Object","freeSelf","self","root$1","Function","Symbol$1","Symbol","objectProto$1","prototype","hasOwnProperty","nativeObjectToString$1","symToStringTag$1","toStringTag","nativeObjectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","isOwn","call","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","symbolTag","isSymbol","reWhitespace","reTrimStart","baseTrim","string","index","test","charAt","trimmedEndIndex","isObject","type","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","now$1","Date","now","FUNC_ERROR_TEXT","nativeMax","nativeMin","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","clearTimeout","cancel","flush","resolveMap","WeakMap","promiseMap","component","Promise","resolve","componentLoaded","async","forceUpdate","requestAnimationFrame","container","contentStart","contentEnd","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","fetchMessages","lang","componentName","toLowerCase","fetch","getAssetPath","resp","ok","json","catch","getMessageBundle","getSupportedLocale","defaultOnMessagesChange"],"sourceRoot":""}