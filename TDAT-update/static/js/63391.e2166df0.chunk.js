"use strict";(self.webpackChunkegis_tdat=self.webpackChunkegis_tdat||[]).push([[35617,63391],{35617:(e,t,n)=>{n.r(t),n.d(t,{hydratedAdapter:()=>d});var r=n(76797),a=n(66388),i=n(19247),c=n(65215),o=n(23701);const d={convertToGEGeometry:function(e,t){if(null==t)return null;let n="cache"in t?t.cache._geVersion:void 0;return null==n&&(n=e.convertJSONToGeometry(t),"cache"in t&&(t.cache._geVersion=n)),n},exportPoint:function(e,t,n){const r=e.hasZ(t),a=e.hasM(t),c=new i.A({x:e.getPointX(t),y:e.getPointY(t),spatialReference:n});return r&&(c.z=e.getPointZ(t)),a&&(c.m=e.getPointM(t)),c.cache._geVersion=t,c},exportPolygon:function(e,t,n){const r=new c.A({rings:e.exportPaths(t),hasZ:e.hasZ(t),hasM:e.hasM(t),spatialReference:n});return r.cache._geVersion=t,r},exportPolyline:function(e,t,n){const r=new o.A({paths:e.exportPaths(t),hasZ:e.hasZ(t),hasM:e.hasM(t),spatialReference:n});return r.cache._geVersion=t,r},exportMultipoint:function(e,t,n){const r=new a.A({hasZ:e.hasZ(t),hasM:e.hasM(t),points:e.exportPoints(t),spatialReference:n});return r.cache._geVersion=t,r},exportExtent:function(e,t,n){const a=e.hasZ(t),i=e.hasM(t),c=new r.A({xmin:e.getXMin(t),ymin:e.getYMin(t),xmax:e.getXMax(t),ymax:e.getYMax(t),spatialReference:n});if(a){const n=e.getZExtent(t);c.zmin=n.vmin,c.zmax=n.vmax}if(i){const n=e.getMExtent(t);c.mmin=n.vmin,c.mmax=n.vmax}return c.cache._geVersion=t,c}}},63391:(e,t,n)=>{n.r(t),n.d(t,{buffer:()=>_,changeDefaultSpatialReferenceTolerance:()=>q,clearDefaultSpatialReferenceTolerance:()=>B,clip:()=>u,contains:()=>f,convexHull:()=>v,crosses:()=>l,cut:()=>s,densify:()=>J,difference:()=>M,disjoint:()=>G,distance:()=>h,equals:()=>p,extendedSpatialReferenceInfo:()=>d,flipHorizontal:()=>k,flipVertical:()=>C,generalize:()=>H,geodesicArea:()=>X,geodesicBuffer:()=>D,geodesicDensify:()=>N,geodesicLength:()=>Y,intersect:()=>S,intersectLinesToPoints:()=>j,intersects:()=>y,isSimple:()=>w,nearestCoordinate:()=>T,nearestVertex:()=>z,nearestVertices:()=>E,offset:()=>Z,overlaps:()=>x,planarArea:()=>O,planarLength:()=>I,relate:()=>m,rotate:()=>b,simplify:()=>R,symmetricDifference:()=>P,touches:()=>A,union:()=>V,within:()=>g});n(35238);var r=n(40565),a=n(52612),i=n(35617),c=n(13312);function o(e){const t=Array.isArray(e)?e[0].spatialReference:e.spatialReference;return t?(0,r.PZ)(c.A,t):c.A.WGS84}function d(e){return a.G.extendedSpatialReferenceInfo(e)}function u(e,t){return a.G.clip(i.hydratedAdapter,o(e),e,t)}function s(e,t){return a.G.cut(i.hydratedAdapter,o(e),e,t)}function f(e,t){return a.G.contains(i.hydratedAdapter,o(e),e,t)}function l(e,t){return a.G.crosses(i.hydratedAdapter,o(e),e,t)}function h(e,t,n){return a.G.distance(i.hydratedAdapter,o(e),e,t,n)}function p(e,t){return a.G.equals(i.hydratedAdapter,o(e),e,t)}function y(e,t){return a.G.intersects(i.hydratedAdapter,o(e),e,t)}function A(e,t){return a.G.touches(i.hydratedAdapter,o(e),e,t)}function g(e,t){return a.G.within(i.hydratedAdapter,o(e),e,t)}function G(e,t){return a.G.disjoint(i.hydratedAdapter,o(e),e,t)}function x(e,t){return a.G.overlaps(i.hydratedAdapter,o(e),e,t)}function m(e,t,n){return a.G.relate(i.hydratedAdapter,o(e),e,t,n)}function w(e){return a.G.isSimple(i.hydratedAdapter,o(e),e)}function R(e){return a.G.simplify(i.hydratedAdapter,o(e),e)}function v(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return a.G.convexHull(i.hydratedAdapter,o(e),e,t)}function M(e,t){return a.G.difference(i.hydratedAdapter,o(e),e,t)}function P(e,t){return a.G.symmetricDifference(i.hydratedAdapter,o(e),e,t)}function S(e,t){return a.G.intersect(i.hydratedAdapter,o(e),e,t)}function V(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return a.G.union(i.hydratedAdapter,o(e),e,t)}function Z(e,t,n,r,c,d){return a.G.offset(i.hydratedAdapter,o(e),e,t,n,r,c,d)}function _(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return a.G.buffer(i.hydratedAdapter,o(e),e,t,n,r)}function D(e,t,n,r,c,d){return a.G.geodesicBuffer(i.hydratedAdapter,o(e),e,t,n,r,c,d)}function T(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return a.G.nearestCoordinate(i.hydratedAdapter,o(e),e,t,n)}function z(e,t){return a.G.nearestVertex(i.hydratedAdapter,o(e),e,t)}function E(e,t,n,r){return a.G.nearestVertices(i.hydratedAdapter,o(e),e,t,n,r)}function L(e){return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?e.extent?.center??null:null}function b(e,t,n){if(null==e)throw new W;const r=e.spatialReference;if(null==(n=n??L(e)))throw new W;const i=e.constructor.fromJSON(a.G.rotate(e,t,n));return i.spatialReference=r,i}function k(e,t){if(null==e)throw new W;const n=e.spatialReference;if(null==(t=t??L(e)))throw new W;const r=e.constructor.fromJSON(a.G.flipHorizontal(e,t));return r.spatialReference=n,r}function C(e,t){if(null==e)throw new W;const n=e.spatialReference;if(null==(t=t??L(e)))throw new W;const r=e.constructor.fromJSON(a.G.flipVertical(e,t));return r.spatialReference=n,r}function H(e,t,n,r){return a.G.generalize(i.hydratedAdapter,o(e),e,t,n,r)}function J(e,t,n){return a.G.densify(i.hydratedAdapter,o(e),e,t,n)}function N(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;return a.G.geodesicDensify(i.hydratedAdapter,o(e),e,t,n,r)}function O(e,t){return a.G.planarArea(i.hydratedAdapter,o(e),e,t)}function I(e,t){return a.G.planarLength(i.hydratedAdapter,o(e),e,t)}function X(e,t,n){return a.G.geodesicArea(i.hydratedAdapter,o(e),e,t,n)}function Y(e,t,n){return a.G.geodesicLength(i.hydratedAdapter,o(e),e,t,n)}function j(e,t){return a.G.intersectLinesToPoints(i.hydratedAdapter,o(e),e,t)}function q(e,t){a.G.changeDefaultSpatialReferenceTolerance(e,t)}function B(e){a.G.clearDefaultSpatialReferenceTolerance(e)}class W extends Error{constructor(){super("Illegal Argument Exception")}}}}]);
//# sourceMappingURL=63391.e2166df0.chunk.js.map