{"version":3,"file":"static/js/36447.0e0f8164.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/graph/util.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/graph/graph.scss?tag=calcite-graph&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/graph/graph.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/slider/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/slider/slider.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/slider/slider.scss?tag=calcite-slider&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/form.tsx","../node_modules/@esri/calcite-components/dist/esm/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/esm/src/utils/label.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/loadable.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/math.ts"],"sourcesContent":["import { DataSeries, Extent, Graph, Point, TranslateOptions, Translator } from \"../graph/interfaces\";\n\n/**\n * Calculate slope of the tangents\n * uses Steffen interpolation as it's monotonic\n * http://jrwalsh1.github.io/posts/interpolations/\n *\n * @param p0\n * @param p1\n * @param p2\n */\nfunction slope(p0: Point, p1: Point, p2: Point): number {\n  const dx = p1[0] - p0[0];\n  const dx1 = p2[0] - p1[0];\n  const dy = p1[1] - p0[1];\n  const dy1 = p2[1] - p1[1];\n  const m = dy / (dx || (dx1 < 0 && 0));\n  const m1 = dy1 / (dx1 || (dx < 0 && 0));\n  const p = (m * dx1 + m1 * dx) / (dx + dx1);\n  return (Math.sign(m) + Math.sign(m1)) * Math.min(Math.abs(m), Math.abs(m1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * Calculate slope for just one tangent (single-sided)\n *\n * @param p0\n * @param p1\n * @param m\n */\nfunction slopeSingle(p0: Point, p1: Point, m: number): number {\n  const dx = p1[0] - p0[0];\n  const dy = p1[1] - p0[1];\n  return dx ? ((3 * dy) / dx - m) / 2 : m;\n}\n\n/**\n * Given two points and their tangent slopes,\n * calculate the bezier handle coordinates and return draw command.\n *\n * Translates Hermite Spline to Bézier curve:\n * https://stackoverflow.com/questions/42574940/\n *\n * @param p0\n * @param p1\n * @param m0\n * @param m1\n * @param t\n */\nfunction bezier(p0: Point, p1: Point, m0: number, m1: number, t: Translator): string {\n  const [x0, y0] = p0;\n  const [x1, y1] = p1;\n  const dx = (x1 - x0) / 3;\n  const h1 = t([x0 + dx, y0 + dx * m0]).join(\",\");\n  const h2 = t([x1 - dx, y1 - dx * m1]).join(\",\");\n  const p = t([x1, y1]).join(\",\");\n  return `C ${h1} ${h2} ${p}`;\n}\n\n/**\n * Generate a function which will translate a point\n * from the data coordinate space to svg viewbox oriented pixels\n *\n * @param root0\n * @param root0.width\n * @param root0.height\n * @param root0.min\n * @param root0.max\n */\nexport function translate({ width, height, min, max }: TranslateOptions): Translator {\n  const rangeX = max[0] - min[0];\n  const rangeY = max[1] - min[1];\n  return (point) => {\n    const x = ((point[0] - min[0]) / rangeX) * width;\n    const y = height - (point[1] / rangeY) * height;\n    return [x, y];\n  };\n}\n\n/**\n * Get the min and max values from the dataset\n *\n * @param data\n */\nexport function range(data: DataSeries): Extent {\n  const [startX, startY] = data[0];\n  const min: Point = [startX, startY];\n  const max: Point = [startX, startY];\n  return data.reduce(\n    ({ min, max }, [x, y]) => ({\n      min: [Math.min(min[0], x), Math.min(min[1], y)],\n      max: [Math.max(max[0], x), Math.max(max[1], y)],\n    }),\n    { min, max },\n  );\n}\n\n/**\n * Generate drawing commands for an area graph\n * returns a string can can be passed directly to a path element's `d` attribute\n *\n * @param root0\n * @param root0.data\n * @param root0.min\n * @param root0.max\n * @param root0.t\n */\nexport function area({ data, min, max, t }: Graph): string {\n  if (data.length === 0) {\n    return \"\";\n  }\n\n  // important points for beginning and ending the path\n  const [startX, startY] = t(data[0]);\n  const [minX, minY] = t(min);\n  const [maxX] = t(max);\n\n  // keep track of previous slope/points\n  let m: number;\n  let p0: Point;\n  let p1: Point;\n\n  // iterate over data points, calculating command for each\n  const commands = data.reduce((acc, point, i) => {\n    p0 = data[i - 2];\n    p1 = data[i - 1];\n    if (i > 1) {\n      const m1 = slope(p0, p1, point);\n      const m0 = m === undefined ? slopeSingle(p0, p1, m1) : m;\n      const command = bezier(p0, p1, m0, m1, t);\n      m = m1;\n      return `${acc} ${command}`;\n    }\n    return acc;\n  }, `M ${minX},${minY} L ${minX},${startY} L ${startX},${startY}`);\n\n  // close the path\n  const last = data[data.length - 1];\n  const end = bezier(p1, last, m, slopeSingle(p1, last, m), t);\n  return `${commands} ${end} L ${maxX},${minY} Z`;\n}\n",":host {\n  @apply block;\n  block-size: 100%;\n}\n\n.svg {\n  fill: currentColor;\n  stroke: transparent;\n  @apply m-0 block h-full w-full p-0;\n\n  .graph-path--highlight {\n    fill: var(--calcite-color-brand);\n    @apply opacity-50;\n  }\n}\n\n@include base-component();\n","import { Component, Element, forceUpdate, h, Prop, VNode } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { createObserver } from \"../../utils/observers\";\nimport { ColorStop, DataSeries, Point } from \"./interfaces\";\nimport { area, range, translate } from \"./util\";\n\n@Component({\n  tag: \"calcite-graph\",\n  styleUrl: \"graph.scss\",\n  shadow: true,\n})\nexport class Graph {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Array of tuples describing a single data point ([x, y])\n   * These data points should be sorted by x-axis value.\n   */\n  @Prop() data: DataSeries = [];\n\n  /**\n   * Array of values describing a single color stop ([offset, color, opacity])\n   * These color stops should be sorted by offset value.\n   */\n  @Prop() colorStops: ColorStop[];\n\n  /** Start of highlight color if highlighting range. */\n  @Prop() highlightMin: number;\n\n  /** End of highlight color if highlighting range. */\n  @Prop() highlightMax: number;\n\n  /** Lowest point of the range. */\n  @Prop({ reflect: true }) min!: number;\n\n  /** Highest point of the range. */\n  @Prop({ reflect: true }) max!: number;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.resizeObserver?.observe(this.el);\n  }\n\n  disconnectedCallback(): void {\n    this.resizeObserver?.disconnect();\n  }\n\n  render(): VNode {\n    const { data, colorStops, el, highlightMax, highlightMin, min, max } = this;\n    const id = this.graphId;\n    const { clientHeight: height, clientWidth: width } = el;\n\n    // if we have no data, return empty svg\n    if (!data || data.length === 0) {\n      return (\n        <svg\n          aria-hidden=\"true\"\n          class=\"svg\"\n          height={height}\n          preserveAspectRatio=\"none\"\n          viewBox={`0 0 ${width} ${height}`}\n          width={width}\n        />\n      );\n    }\n\n    const { min: rangeMin, max: rangeMax } = range(data);\n\n    let currentMin: Point = rangeMin;\n    let currentMax: Point = rangeMax;\n\n    if (min < rangeMin[0] || min > rangeMin[0]) {\n      currentMin = [min, 0];\n    }\n\n    if (max > rangeMax[0] || max < rangeMax[0]) {\n      currentMax = [max, rangeMax[1]];\n    }\n\n    const t = translate({ min: currentMin, max: currentMax, width, height });\n    const [hMinX] = t([highlightMin, currentMax[1]]);\n    const [hMaxX] = t([highlightMax, currentMax[1]]);\n    const areaPath = area({ data, min: rangeMin, max: rangeMax, t });\n    const fill = colorStops ? `url(#linear-gradient-${id})` : undefined;\n    return (\n      <svg\n        aria-hidden=\"true\"\n        class=\"svg\"\n        height={height}\n        preserveAspectRatio=\"none\"\n        viewBox={`0 0 ${width} ${height}`}\n        width={width}\n      >\n        {colorStops ? (\n          <defs>\n            <linearGradient id={`linear-gradient-${id}`} x1=\"0\" x2=\"1\" y1=\"0\" y2=\"0\">\n              {colorStops.map(({ offset, color, opacity }) => (\n                <stop offset={`${offset * 100}%`} stop-color={color} stop-opacity={opacity} />\n              ))}\n            </linearGradient>\n          </defs>\n        ) : null}\n\n        {highlightMin !== undefined ? (\n          [\n            <mask height=\"100%\" id={`${id}1`} width=\"100%\" x=\"0%\" y=\"0%\">\n              <path\n                d={`\n            M 0,0\n            L ${hMinX - 1},0\n            L ${hMinX - 1},${height}\n            L 0,${height}\n            Z\n          `}\n                fill=\"white\"\n              />\n            </mask>,\n\n            <mask height=\"100%\" id={`${id}2`} width=\"100%\" x=\"0%\" y=\"0%\">\n              <path\n                d={`\n            M ${hMinX + 1},0\n            L ${hMaxX - 1},0\n            L ${hMaxX - 1},${height}\n            L ${hMinX + 1}, ${height}\n            Z\n          `}\n                fill=\"white\"\n              />\n            </mask>,\n\n            <mask height=\"100%\" id={`${id}3`} width=\"100%\" x=\"0%\" y=\"0%\">\n              <path\n                d={`\n                M ${hMaxX + 1},0\n                L ${width},0\n                L ${width},${height}\n                L ${hMaxX + 1}, ${height}\n                Z\n              `}\n                fill=\"white\"\n              />\n            </mask>,\n\n            <path class=\"graph-path\" d={areaPath} fill={fill} mask={`url(#${id}1)`} />,\n            <path class=\"graph-path--highlight\" d={areaPath} fill={fill} mask={`url(#${id}2)`} />,\n            <path class=\"graph-path\" d={areaPath} fill={fill} mask={`url(#${id}3)`} />,\n          ]\n        ) : (\n          <path class=\"graph-path\" d={areaPath} fill={fill} />\n        )}\n      </svg>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteGraphElement;\n\n  private graphId = `calcite-graph-${guid()}`;\n\n  private resizeObserver = createObserver(\"resize\", () => forceUpdate(this));\n}\n","export const CSS = {\n  container: \"container\",\n  containerRange: \"container--range\",\n  graph: \"graph\",\n  handle: \"handle\",\n  handleExtension: \"handle-extension\",\n  handleLabel: \"handle__label\",\n  handleLabelMinValue: \"handle__label--minValue\",\n  handleLabelValue: \"handle__label--value\",\n  hyphen: \"hyphen\",\n  hyphenWrap: \"hyphen--wrap\",\n  static: \"static\",\n  thumb: \"thumb\",\n  thumbActive: \"thumb--active\",\n  thumbContainer: \"thumb-container\",\n  thumbMinValue: \"thumb--minValue\",\n  thumbPrecise: \"thumb--precise\",\n  thumbValue: \"thumb--value\",\n  tick: \"tick\",\n  tickActive: \"tick--active\",\n  tickLabel: \"tick__label\",\n  tickMax: \"tick__label--max\",\n  tickMin: \"tick__label--min\",\n  ticks: \"ticks\",\n  track: \"track\",\n  trackRange: \"track__range\",\n  transformed: \"transformed\",\n};\n\nexport const maxTickElementThreshold = 250;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { intersects, isPrimaryPointerButton } from \"../../utils/dom\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n} from \"../../utils/form\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport { clamp, decimalPlaces } from \"../../utils/math\";\nimport { ColorStop, DataSeries } from \"../graph/interfaces\";\nimport { Scale } from \"../interfaces\";\nimport { BigDecimal } from \"../../utils/number\";\nimport { CSS, maxTickElementThreshold } from \"./resources\";\nimport { ActiveSliderProperty, SetValueProperty, SideOffset, ThumbType } from \"./interfaces\";\n\nfunction isRange(value: number | number[]): value is number[] {\n  return Array.isArray(value);\n}\n\n@Component({\n  tag: \"calcite-slider\",\n  styleUrl: \"slider.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class Slider\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    LocalizedComponent,\n    LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Used to configure where the fill is placed along the slider track in relation to the value handle.\n   *\n   * Range mode will always display the fill between the min and max handles.\n   */\n  @Prop({ reflect: true }) fillPlacement: \"start\" | \"none\" | \"end\" = \"start\";\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /** When `true`, indicates a histogram is present. */\n  @Prop({ reflect: true, mutable: true }) hasHistogram = false;\n\n  /**\n   * A list of the histogram's x,y coordinates within the component's `min` and `max`. Displays above the component's track.\n   *\n   * @see [DataSeries](https://github.com/Esri/calcite-design-system/blob/dev/src/components/graph/interfaces.ts#L5)\n   */\n  @Prop() histogram: DataSeries;\n\n  @Watch(\"histogram\")\n  histogramWatcher(newHistogram: DataSeries): void {\n    this.hasHistogram = !!newHistogram;\n  }\n\n  /**\n   * A set of single color stops for a histogram, sorted by offset ascending.\n   */\n  @Prop() histogramStops: ColorStop[];\n\n  /** When `true`, displays label handles with their numeric value. */\n  @Prop({ reflect: true }) labelHandles = false;\n\n  /**\n   * When specified, allows users to customize handle labels.\n   */\n  @Prop() labelFormatter: (\n    value: number,\n    type: \"value\" | \"min\" | \"max\" | \"tick\",\n    defaultFormatter: (value: number) => string,\n  ) => string | undefined;\n\n  /** When `true` and `ticks` is specified, displays label tick marks with their numeric value. */\n  @Prop({ reflect: true }) labelTicks = false;\n\n  /** The component's maximum selectable value. */\n  @Prop({ reflect: true }) max = 100;\n\n  /** For multiple selections, the accessible name for the second handle, such as `\"Temperature, upper bound\"`. */\n  @Prop() maxLabel: string;\n\n  /** For multiple selections, the component's upper value. */\n  @Prop({ mutable: true }) maxValue: number;\n\n  /** The component's minimum selectable value. */\n  @Prop({ reflect: true }) min = 0;\n\n  /** Accessible name for first (or only) handle, such as `\"Temperature, lower bound\"`. */\n  @Prop() minLabel: string;\n\n  /** For multiple selections, the component's lower value. */\n  @Prop({ mutable: true }) minValue: number;\n\n  /**\n   * When `true`, the slider will display values from high to low.\n   *\n   * Note that this value will be ignored if the slider has an associated histogram.\n   */\n  @Prop({ reflect: true }) mirrored = false;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop() numberingSystem: NumberingSystem;\n\n  /** Specifies the interval to move with the page up, or page down keys. */\n  @Prop({ reflect: true }) pageStep: number;\n\n  /** When `true`, sets a finer point for handles. */\n  @Prop({ reflect: true }) precise = false;\n\n  /**\n   * When `true`, the component must have a value in order for the form to submit.\n   */\n  @Prop({ reflect: true }) required = false;\n\n  /** When `true`, enables snap selection in coordination with `step` via a mouse. */\n  @Prop({ reflect: true }) snap = false;\n\n  /** Specifies the interval to move with the up, or down keys. */\n  @Prop({ reflect: true }) step = 1;\n\n  /** Displays tick marks on the number line at a specified interval. */\n  @Prop({ reflect: true }) ticks: number;\n\n  @Watch(\"ticks\")\n  ticksWatcher(): void {\n    this.tickValues = this.generateTickValues();\n  }\n\n  /** The component's value. */\n  @Prop({ reflect: true, mutable: true }) value: null | number | number[] = 0;\n\n  @Watch(\"value\")\n  valueHandler(): void {\n    this.setMinMaxFromValue();\n  }\n\n  @Watch(\"minValue\")\n  @Watch(\"maxValue\")\n  minMaxValueHandler(): void {\n    this.setValueFromMinMax();\n  }\n\n  /**\n   *  Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    this.setMinMaxFromValue();\n    this.setValueFromMinMax();\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    this.removeDragListeners();\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n    if (!isRange(this.value)) {\n      this.value = this.snap ? this.getClosestStep(this.value) : this.clamp(this.value);\n    }\n    this.ticksWatcher();\n    this.histogramWatcher(this.histogram);\n    afterConnectDefaultValueSet(this, this.value);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    if (this.labelHandles) {\n      this.adjustHostObscuredHandleLabel(\"value\");\n      if (isRange(this.value)) {\n        this.adjustHostObscuredHandleLabel(\"minValue\");\n        if (!(this.precise && !this.hasHistogram)) {\n          this.hyphenateCollidingRangeHandleLabels();\n        }\n      }\n    }\n    this.hideObscuredBoundingTickLabels();\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    const id = this.el.id || this.guid;\n    const value = isRange(this.value) ? this.maxValue : this.value;\n    const min = this.minValue || this.min;\n    const useMinValue = this.shouldUseMinValue();\n    const minInterval = this.getUnitInterval(useMinValue ? this.minValue : min) * 100;\n    const maxInterval = this.getUnitInterval(value) * 100;\n    const mirror = this.shouldMirror();\n    const valueIsRange = isRange(this.value);\n\n    const thumbTypes = this.buildThumbType(\"max\");\n    const thumb = this.renderThumb({\n      type: thumbTypes,\n      thumbPlacement: thumbTypes.includes(\"histogram\") ? \"below\" : \"above\",\n      maxInterval,\n      minInterval,\n      mirror,\n    });\n\n    const minThumbTypes = this.buildThumbType(\"min\");\n    const minThumb =\n      valueIsRange &&\n      this.renderThumb({\n        type: minThumbTypes,\n        thumbPlacement:\n          minThumbTypes.includes(\"histogram\") || minThumbTypes.includes(\"precise\")\n            ? \"below\"\n            : \"above\",\n        maxInterval,\n        minInterval,\n        mirror,\n      });\n\n    const fillPlacement = valueIsRange ? \"start\" : this.fillPlacement;\n    const trackRangePlacementStyles =\n      fillPlacement === \"none\"\n        ? {\n            left: `unset`,\n            right: `unset`,\n          }\n        : fillPlacement === \"end\"\n          ? {\n              left: `${mirror ? minInterval : maxInterval}%`,\n              right: `${mirror ? maxInterval : minInterval}%`,\n            }\n          : /* default */\n            {\n              left: `${mirror ? 100 - maxInterval : minInterval}%`,\n              right: `${mirror ? minInterval : 100 - maxInterval}%`,\n            };\n\n    return (\n      <Host id={id} onKeyDown={this.handleKeyDown} onTouchStart={this.handleTouchStart}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-label={getLabelText(this)}\n            class={{\n              [CSS.container]: true,\n              [CSS.containerRange]: valueIsRange,\n              [`scale--${this.scale}`]: true,\n            }}\n          >\n            {this.renderGraph()}\n            <div class={CSS.track} ref={this.storeTrackRef}>\n              <div\n                class={CSS.trackRange}\n                onPointerDown={this.onTrackPointerDown}\n                style={trackRangePlacementStyles}\n              />\n              <div class={CSS.ticks}>\n                {this.tickValues.map((tick) => {\n                  const tickOffset = `${this.getUnitInterval(tick) * 100}%`;\n\n                  let activeTicks: boolean = false;\n\n                  if (fillPlacement === \"start\" || fillPlacement === \"end\") {\n                    if (useMinValue) {\n                      activeTicks = tick >= this.minValue && tick <= this.maxValue;\n                    } else {\n                      const rangeStart = fillPlacement === \"start\" ? min : value;\n                      const rangeEnd = fillPlacement === \"start\" ? value : this.max;\n                      activeTicks = tick >= rangeStart && tick <= rangeEnd;\n                    }\n                  }\n\n                  return (\n                    <span\n                      class={{\n                        [CSS.tick]: true,\n                        [CSS.tickActive]: activeTicks,\n                      }}\n                      style={{\n                        left: mirror ? \"\" : tickOffset,\n                        right: mirror ? tickOffset : \"\",\n                      }}\n                    >\n                      {this.renderTickLabel(tick)}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n            <div class={CSS.thumbContainer}>\n              {minThumb}\n              {thumb}\n              <HiddenFormInputSlot component={this} />\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  private renderThumb({\n    type,\n    mirror,\n    thumbPlacement,\n    minInterval,\n    maxInterval,\n  }: {\n    maxInterval: number;\n    minInterval: number;\n    mirror: boolean;\n    thumbPlacement: \"above\" | \"below\";\n    type: string;\n  }) {\n    const isLabeled = type.includes(\"labeled\");\n    const isPrecise = type.includes(\"precise\");\n    const isMinThumb = type.includes(\"min\");\n\n    const valueIsRange = isRange(this.value);\n    const value = isMinThumb\n      ? this.minValue\n      : valueIsRange\n        ? this.maxValue\n        : (this.value as number);\n    const valueProp = isMinThumb ? \"minValue\" : valueIsRange ? \"maxValue\" : \"value\";\n    const ariaLabel = isMinThumb ? this.minLabel : valueIsRange ? this.maxLabel : this.minLabel;\n    const ariaValuenow = isMinThumb ? this.minValue : value;\n    const displayedValue =\n      valueProp === \"minValue\"\n        ? this.internalLabelFormatter(this.minValue, \"min\")\n        : valueProp === \"maxValue\"\n          ? this.internalLabelFormatter(this.maxValue, \"max\")\n          : this.internalLabelFormatter(value, \"value\");\n    const thumbStyle: SideOffset = isMinThumb\n      ? { left: `${mirror ? 100 - minInterval : minInterval}%` }\n      : { right: `${mirror ? maxInterval : 100 - maxInterval}%` };\n    const thumbLabelClasses = `${CSS.handleLabel} ${\n      isMinThumb ? CSS.handleLabelMinValue : CSS.handleLabelValue\n    }`;\n\n    const labels = isLabeled\n      ? [\n          <span aria-hidden=\"true\" class={thumbLabelClasses}>\n            {displayedValue}\n          </span>,\n          <span aria-hidden=\"true\" class={`${thumbLabelClasses} ${CSS.static}`}>\n            {displayedValue}\n          </span>,\n          <span aria-hidden=\"true\" class={`${thumbLabelClasses} ${CSS.transformed}`}>\n            {displayedValue}\n          </span>,\n        ]\n      : [];\n\n    const thumbContent: VNode[] = [\n      ...labels,\n      <div class={CSS.handle} />,\n      isPrecise && <div class={CSS.handleExtension} />,\n    ];\n\n    if (thumbPlacement === \"below\") {\n      thumbContent.reverse();\n    }\n\n    return (\n      <div\n        aria-label={ariaLabel}\n        aria-orientation=\"horizontal\"\n        aria-valuemax={this.max}\n        aria-valuemin={this.min}\n        aria-valuenow={ariaValuenow}\n        class={{\n          [CSS.thumb]: true,\n          [CSS.thumbValue]: !isMinThumb,\n          [CSS.thumbActive]: this.lastDragProp !== \"minMaxValue\" && this.dragProp === valueProp,\n          [CSS.thumbPrecise]: isPrecise,\n          [CSS.thumbMinValue]: isMinThumb,\n        }}\n        data-value-prop={valueProp}\n        key={type}\n        onBlur={this.onThumbBlur}\n        onFocus={this.onThumbFocus}\n        onPointerDown={this.onThumbPointerDown}\n        ref={this.storeThumbRef}\n        role=\"slider\"\n        style={thumbStyle}\n        tabIndex={0}\n      >\n        {thumbContent}\n      </div>\n    );\n  }\n\n  private renderGraph(): VNode {\n    return this.histogram ? (\n      <calcite-graph\n        class={CSS.graph}\n        colorStops={this.histogramStops}\n        data={this.histogram}\n        highlightMax={isRange(this.value) ? this.maxValue : this.value}\n        highlightMin={isRange(this.value) ? this.minValue : this.min}\n        max={this.max}\n        min={this.min}\n      />\n    ) : null;\n  }\n\n  private renderTickLabel(tick: number): VNode {\n    const { hasHistogram, labelHandles, labelTicks, max, min, precise, value } = this;\n    const valueIsRange = isRange(value);\n    const isMinTickLabel = tick === min;\n    const isMaxTickLabel = tick === max;\n    const isAtEdge = isMinTickLabel || isMaxTickLabel;\n\n    const shouldDisplayLabel =\n      labelTicks &&\n      ((!hasHistogram && (isAtEdge || !precise || !valueIsRange)) ||\n        (hasHistogram && (isAtEdge || (!precise && !labelHandles))));\n\n    return shouldDisplayLabel ? (\n      <span\n        class={{\n          [CSS.tickLabel]: true,\n          [CSS.tickMin]: isMinTickLabel,\n          [CSS.tickMax]: isMaxTickLabel,\n        }}\n      >\n        {this.internalLabelFormatter(tick, \"tick\")}\n      </span>\n    ) : null;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  private handleKeyDown = (event: KeyboardEvent): void => {\n    const mirror = this.shouldMirror();\n    const { activeProp, max, min, pageStep, step } = this;\n    const value = this[activeProp];\n    const { key } = event;\n\n    if (isActivationKey(key)) {\n      event.preventDefault();\n      return;\n    }\n\n    let adjustment: number;\n\n    if (key === \"ArrowUp\" || key === \"ArrowRight\") {\n      const directionFactor = mirror && key === \"ArrowRight\" ? -1 : 1;\n      adjustment = value + step * directionFactor;\n    } else if (key === \"ArrowDown\" || key === \"ArrowLeft\") {\n      const directionFactor = mirror && key === \"ArrowLeft\" ? -1 : 1;\n      adjustment = value - step * directionFactor;\n    } else if (key === \"PageUp\") {\n      if (pageStep) {\n        adjustment = value + pageStep;\n      }\n    } else if (key === \"PageDown\") {\n      if (pageStep) {\n        adjustment = value - pageStep;\n      }\n    } else if (key === \"Home\") {\n      adjustment = min;\n    } else if (key === \"End\") {\n      adjustment = max;\n    }\n\n    if (isNaN(adjustment)) {\n      return;\n    }\n\n    event.preventDefault();\n    const fixedDecimalAdjustment = Number(adjustment.toFixed(decimalPlaces(step)));\n    this.setValue({\n      [activeProp as SetValueProperty]: this.clamp(fixedDecimalAdjustment, activeProp),\n    });\n  };\n\n  @Listen(\"pointerdown\")\n  pointerDownHandler(event: PointerEvent): void {\n    if (this.disabled || !isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const x = event.clientX || event.pageX;\n    const position = this.mapToRange(x);\n    let prop: ActiveSliderProperty = \"value\";\n    if (isRange(this.value)) {\n      const inRange = position >= this.minValue && position <= this.maxValue;\n      if (inRange && this.lastDragProp === \"minMaxValue\") {\n        prop = \"minMaxValue\";\n      } else {\n        const closerToMax = Math.abs(this.maxValue - position) < Math.abs(this.minValue - position);\n        prop = closerToMax || position >= this.maxValue ? \"maxValue\" : \"minValue\";\n      }\n    }\n    this.lastDragPropValue = this[prop];\n    this.dragStart(prop);\n    const isThumbActive = this.el.shadowRoot.querySelector(`.${CSS.thumb}:active`);\n    if (!isThumbActive) {\n      this.setValue({ [prop as SetValueProperty]: this.clamp(position, prop) });\n    }\n    this.focusActiveHandle(x);\n  }\n\n  handleTouchStart(event: TouchEvent): void {\n    // needed to prevent extra click at the end of a handle drag\n    event.preventDefault();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Fires on all updates to the component.\n   *\n   * Note: Fires frequently during drag. To perform\n   * expensive operations consider using a debounce or throttle to avoid\n   * locking up the main thread.\n   */\n  @Event({ cancelable: false }) calciteSliderInput: EventEmitter<void>;\n\n  /**\n   * Fires when the thumb is released on the component.\n   *\n   * Note: To constantly listen to the drag event,\n   * use `calciteSliderInput` instead.\n   */\n  @Event({ cancelable: false }) calciteSliderChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    const handle = this.minHandle ? this.minHandle : this.maxHandle;\n    handle?.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSliderElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Slider[\"value\"];\n\n  private activeProp: ActiveSliderProperty = \"value\";\n\n  private guid = `calcite-slider-${guid()}`;\n\n  private dragProp: ActiveSliderProperty;\n\n  private lastDragProp: ActiveSliderProperty;\n\n  private lastDragPropValue: number;\n\n  private minHandle: HTMLDivElement;\n\n  private maxHandle: HTMLDivElement;\n\n  private trackEl: HTMLDivElement;\n\n  @State() effectiveLocale = \"\";\n\n  @State() private minMaxValueRange: number = null;\n\n  @State() private minValueDragRange: number = null;\n\n  @State() private maxValueDragRange: number = null;\n\n  @State() private tickValues: number[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private buildThumbType(type: \"min\" | \"max\"): ThumbType {\n    const thumbTypeParts: string[] = [type];\n\n    if (this.labelHandles) {\n      thumbTypeParts.push(\"labeled\");\n    }\n\n    if (this.precise) {\n      thumbTypeParts.push(\"precise\");\n    }\n\n    if (this.hasHistogram) {\n      thumbTypeParts.push(\"histogram\");\n    }\n\n    return thumbTypeParts.join(\"-\") as ThumbType;\n  }\n\n  setValueFromMinMax(): void {\n    const { minValue, maxValue } = this;\n\n    if (typeof minValue === \"number\" && typeof maxValue === \"number\") {\n      this.value = [minValue, maxValue];\n    }\n  }\n\n  setMinMaxFromValue(): void {\n    const { value } = this;\n\n    if (isRange(value)) {\n      this.minValue = value[0];\n      this.maxValue = value[1];\n    }\n  }\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private shouldMirror(): boolean {\n    return this.mirrored && !this.hasHistogram;\n  }\n\n  private shouldUseMinValue(): boolean {\n    if (!isRange(this.value)) {\n      return false;\n    }\n    return (\n      (this.hasHistogram && this.maxValue === 0) || (!this.hasHistogram && this.minValue === 0)\n    );\n  }\n\n  private getTickDensity(): number {\n    const density = (this.max - this.min) / this.ticks / maxTickElementThreshold;\n\n    return density < 1 ? 1 : density;\n  }\n\n  private generateTickValues(): number[] {\n    const tickInterval = this.ticks ?? 0;\n\n    if (tickInterval <= 0) {\n      return [];\n    }\n\n    const ticks: number[] = [this.min];\n    const density = this.getTickDensity();\n    const tickOffset = tickInterval * density;\n    let current = this.min;\n\n    while (current < this.max) {\n      current += tickOffset;\n      ticks.push(Math.min(current, this.max));\n    }\n\n    if (!ticks.includes(this.max)) {\n      ticks.push(this.max);\n    }\n\n    return ticks;\n  }\n\n  private onThumbBlur = () => {\n    this.activeProp = null;\n  };\n\n  private onThumbFocus = (event: FocusEvent) => {\n    const thumb = event.currentTarget as HTMLElement;\n    this.activeProp = thumb.getAttribute(\"data-value-prop\") as ActiveSliderProperty;\n  };\n\n  private onThumbPointerDown = (event: PointerEvent) => {\n    const thumb = event.currentTarget as HTMLElement;\n    this.pointerDownDragStart(event, thumb.getAttribute(\"data-value-prop\") as ActiveSliderProperty);\n  };\n\n  private onTrackPointerDown = (event: PointerEvent) => {\n    this.pointerDownDragStart(event, \"minMaxValue\");\n  };\n\n  private pointerDownDragStart(event: PointerEvent, prop: ActiveSliderProperty): void {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    this.dragStart(prop);\n  }\n\n  private dragStart(prop: ActiveSliderProperty): void {\n    this.dragProp = prop;\n    this.lastDragProp = this.dragProp;\n    this.activeProp = prop;\n    window.addEventListener(\"pointermove\", this.dragUpdate);\n    window.addEventListener(\"pointerup\", this.pointerUpDragEnd);\n    window.addEventListener(\"pointercancel\", this.dragEnd);\n  }\n\n  private focusActiveHandle(valueX: number): void {\n    if (this.dragProp === \"minValue\") {\n      this.minHandle.focus();\n    } else if (this.dragProp === \"maxValue\" || this.dragProp === \"value\") {\n      this.maxHandle.focus();\n    } else if (this.dragProp === \"minMaxValue\") {\n      this.getClosestHandle(valueX).focus();\n    }\n  }\n\n  private dragUpdate = (event: PointerEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    event.preventDefault();\n    if (this.dragProp) {\n      const value = this.mapToRange(event.clientX || event.pageX);\n      if (isRange(this.value) && this.dragProp === \"minMaxValue\") {\n        if (this.minValueDragRange && this.maxValueDragRange && this.minMaxValueRange) {\n          const newMinValue = value - this.minValueDragRange;\n          const newMaxValue = value + this.maxValueDragRange;\n          if (\n            newMaxValue <= this.max &&\n            newMinValue >= this.min &&\n            newMaxValue - newMinValue === this.minMaxValueRange\n          ) {\n            this.setValue({\n              minValue: this.clamp(newMinValue, \"minValue\"),\n              maxValue: this.clamp(newMaxValue, \"maxValue\"),\n            });\n          }\n        } else {\n          this.minValueDragRange = value - this.minValue;\n          this.maxValueDragRange = this.maxValue - value;\n          this.minMaxValueRange = this.maxValue - this.minValue;\n        }\n      } else {\n        this.setValue({ [this.dragProp as SetValueProperty]: this.clamp(value, this.dragProp) });\n      }\n    }\n  };\n\n  private emitInput(): void {\n    this.calciteSliderInput.emit();\n  }\n\n  private emitChange(): void {\n    this.calciteSliderChange.emit();\n  }\n\n  private pointerUpDragEnd = (event: PointerEvent): void => {\n    if (this.disabled || !isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    this.dragEnd(event);\n  };\n\n  private dragEnd = (event: PointerEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.removeDragListeners();\n    this.focusActiveHandle(event.clientX);\n    if (this.lastDragPropValue != this[this.dragProp]) {\n      this.emitChange();\n    }\n    this.dragProp = null;\n    this.lastDragPropValue = null;\n    this.minValueDragRange = null;\n    this.maxValueDragRange = null;\n    this.minMaxValueRange = null;\n  };\n\n  private removeDragListeners() {\n    window.removeEventListener(\"pointermove\", this.dragUpdate);\n    window.removeEventListener(\"pointerup\", this.pointerUpDragEnd);\n    window.removeEventListener(\"pointercancel\", this.dragEnd);\n  }\n\n  /**\n   * Set prop value(s) if changed at the component level\n   *\n   * @param {object} values - a set of key/value pairs delineating what properties in the component to update\n   */\n  private setValue(\n    values: Partial<{\n      [Property in keyof Pick<Slider, \"maxValue\" | \"minValue\" | \"value\">]: number;\n    }>,\n  ): void {\n    let valueChanged: boolean;\n\n    Object.keys(values).forEach((propName) => {\n      const newValue = values[propName];\n\n      if (!valueChanged) {\n        const oldValue = this[propName];\n        valueChanged = oldValue !== newValue;\n      }\n\n      this[propName] = newValue;\n    });\n\n    if (!valueChanged) {\n      return;\n    }\n\n    const dragging = this.dragProp;\n    if (!dragging) {\n      this.emitChange();\n    }\n    this.emitInput();\n  }\n\n  private storeTrackRef = (node: HTMLDivElement): void => {\n    this.trackEl = node;\n  };\n\n  private storeThumbRef = (el: HTMLDivElement): void => {\n    if (!el) {\n      return;\n    }\n\n    const valueProp = el.getAttribute(\"data-value-prop\") as ActiveSliderProperty;\n    valueProp === \"minValue\" ? (this.minHandle = el) : (this.maxHandle = el);\n  };\n\n  /**\n   * If number is outside range, constrain to min or max\n   *\n   * @param value\n   * @param prop\n   * @internal\n   */\n  private clamp(value: number, prop?: ActiveSliderProperty): number {\n    value = clamp(value, this.min, this.max);\n\n    // ensure that maxValue and minValue don't swap positions\n    if (prop === \"maxValue\") {\n      value = Math.max(value, this.minValue);\n    }\n    if (prop === \"minValue\") {\n      value = Math.min(value, this.maxValue);\n    }\n\n    return value;\n  }\n\n  /**\n   * Translate a pixel position to value along the range\n   *\n   * @param x\n   * @internal\n   */\n  private mapToRange(x: number): number {\n    const range = this.max - this.min;\n    const { left, width } = this.trackEl.getBoundingClientRect();\n    const percent = (x - left) / width;\n    const mirror = this.shouldMirror();\n    const clampedValue = this.clamp(this.min + range * (mirror ? 1 - percent : percent));\n    const value = Number(clampedValue.toFixed(decimalPlaces(this.step)));\n\n    return !(this.snap && this.step) ? value : this.getClosestStep(value);\n  }\n\n  /**\n   * Get closest allowed value along stepped values\n   *\n   * @param value\n   * @internal\n   */\n  private getClosestStep(value: number): number {\n    const { max, min, step } = this;\n\n    // prevents floating point precision issues\n    const bigDecimalString = new BigDecimal(`${Math.floor((value - min) / step)}`)\n      .multiply(`${step}`)\n      .add(`${min}`)\n      .toString();\n\n    let snappedValue = this.clamp(Number(bigDecimalString));\n\n    if (snappedValue > max) {\n      snappedValue -= step;\n    }\n\n    return snappedValue;\n  }\n\n  private getClosestHandle(valueX: number): HTMLDivElement {\n    return this.getDistanceX(this.maxHandle, valueX) > this.getDistanceX(this.minHandle, valueX)\n      ? this.minHandle\n      : this.maxHandle;\n  }\n\n  private getDistanceX(el: HTMLDivElement, valueX: number): number {\n    return Math.abs(el.getBoundingClientRect().left - valueX);\n  }\n\n  private getFontSizeForElement(element: HTMLElement): number {\n    return Number(window.getComputedStyle(element).getPropertyValue(\"font-size\").match(/\\d+/)[0]);\n  }\n\n  /**\n   * Get position of value along range as fractional value\n   *\n   * @param num\n   * @return {number} number in the unit interval [0,1]\n   * @internal\n   */\n  private getUnitInterval(num: number): number {\n    num = this.clamp(num);\n    const range = this.max - this.min;\n    return (num - this.min) / range;\n  }\n\n  private adjustHostObscuredHandleLabel(name: \"value\" | \"minValue\"): void {\n    const label: HTMLSpanElement = this.el.shadowRoot.querySelector(`.handle__label--${name}`);\n    const labelStatic: HTMLSpanElement = this.el.shadowRoot.querySelector(\n      `.handle__label--${name}.static`,\n    );\n    const labelTransformed: HTMLSpanElement = this.el.shadowRoot.querySelector(\n      `.handle__label--${name}.transformed`,\n    );\n    const labelStaticBounds = labelStatic.getBoundingClientRect();\n    const labelStaticOffset = this.getHostOffset(labelStaticBounds.left, labelStaticBounds.right);\n    label.style.transform = `translateX(${labelStaticOffset}px)`;\n    labelTransformed.style.transform = `translateX(${labelStaticOffset}px)`;\n  }\n\n  private hyphenateCollidingRangeHandleLabels(): void {\n    const { shadowRoot } = this.el;\n\n    const mirror = this.shouldMirror();\n    const leftModifier = mirror ? \"value\" : \"minValue\";\n    const rightModifier = mirror ? \"minValue\" : \"value\";\n\n    const leftValueLabel: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${leftModifier}`,\n    );\n    const leftValueLabelStatic: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${leftModifier}.static`,\n    );\n    const leftValueLabelTransformed: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${leftModifier}.transformed`,\n    );\n    const leftValueLabelStaticHostOffset = this.getHostOffset(\n      leftValueLabelStatic.getBoundingClientRect().left,\n      leftValueLabelStatic.getBoundingClientRect().right,\n    );\n\n    const rightValueLabel: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${rightModifier}`,\n    );\n    const rightValueLabelStatic: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${rightModifier}.static`,\n    );\n    const rightValueLabelTransformed: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${rightModifier}.transformed`,\n    );\n    const rightValueLabelStaticHostOffset = this.getHostOffset(\n      rightValueLabelStatic.getBoundingClientRect().left,\n      rightValueLabelStatic.getBoundingClientRect().right,\n    );\n\n    const labelFontSize = this.getFontSizeForElement(leftValueLabel);\n    const labelTransformedOverlap = this.getRangeLabelOverlap(\n      leftValueLabelTransformed,\n      rightValueLabelTransformed,\n    );\n\n    const hyphenLabel = leftValueLabel;\n    const labelOffset = labelFontSize / 2;\n\n    if (labelTransformedOverlap > 0) {\n      hyphenLabel.classList.add(CSS.hyphen, CSS.hyphenWrap);\n      if (rightValueLabelStaticHostOffset === 0 && leftValueLabelStaticHostOffset === 0) {\n        // Neither handle overlaps the host boundary\n        let leftValueLabelTranslate = labelTransformedOverlap / 2 - labelOffset;\n        leftValueLabelTranslate =\n          Math.sign(leftValueLabelTranslate) === -1\n            ? Math.abs(leftValueLabelTranslate)\n            : -leftValueLabelTranslate;\n\n        const leftValueLabelTransformedHostOffset = this.getHostOffset(\n          leftValueLabelTransformed.getBoundingClientRect().left +\n            leftValueLabelTranslate -\n            labelOffset,\n          leftValueLabelTransformed.getBoundingClientRect().right +\n            leftValueLabelTranslate -\n            labelOffset,\n        );\n\n        let rightValueLabelTranslate = labelTransformedOverlap / 2;\n        const rightValueLabelTransformedHostOffset = this.getHostOffset(\n          rightValueLabelTransformed.getBoundingClientRect().left + rightValueLabelTranslate,\n          rightValueLabelTransformed.getBoundingClientRect().right + rightValueLabelTranslate,\n        );\n\n        if (leftValueLabelTransformedHostOffset !== 0) {\n          leftValueLabelTranslate += leftValueLabelTransformedHostOffset;\n          rightValueLabelTranslate += leftValueLabelTransformedHostOffset;\n        }\n\n        if (rightValueLabelTransformedHostOffset !== 0) {\n          leftValueLabelTranslate += rightValueLabelTransformedHostOffset;\n          rightValueLabelTranslate += rightValueLabelTransformedHostOffset;\n        }\n\n        leftValueLabel.style.transform = `translateX(${leftValueLabelTranslate}px)`;\n        leftValueLabelTransformed.style.transform = `translateX(${\n          leftValueLabelTranslate - labelOffset\n        }px)`;\n        rightValueLabel.style.transform = `translateX(${rightValueLabelTranslate}px)`;\n        rightValueLabelTransformed.style.transform = `translateX(${rightValueLabelTranslate}px)`;\n      } else if (leftValueLabelStaticHostOffset > 0 || rightValueLabelStaticHostOffset > 0) {\n        // labels overlap host boundary on the left side\n        leftValueLabel.style.transform = `translateX(${\n          leftValueLabelStaticHostOffset + labelOffset\n        }px)`;\n        rightValueLabel.style.transform = `translateX(${\n          labelTransformedOverlap + rightValueLabelStaticHostOffset\n        }px)`;\n        rightValueLabelTransformed.style.transform = `translateX(${\n          labelTransformedOverlap + rightValueLabelStaticHostOffset\n        }px)`;\n      } else if (leftValueLabelStaticHostOffset < 0 || rightValueLabelStaticHostOffset < 0) {\n        // labels overlap host boundary on the right side\n        let leftValueLabelTranslate =\n          Math.abs(leftValueLabelStaticHostOffset) + labelTransformedOverlap - labelOffset;\n        leftValueLabelTranslate =\n          Math.sign(leftValueLabelTranslate) === -1\n            ? Math.abs(leftValueLabelTranslate)\n            : -leftValueLabelTranslate;\n        leftValueLabel.style.transform = `translateX(${leftValueLabelTranslate}px)`;\n        leftValueLabelTransformed.style.transform = `translateX(${\n          leftValueLabelTranslate - labelOffset\n        }px)`;\n      }\n    } else {\n      hyphenLabel.classList.remove(CSS.hyphen, CSS.hyphenWrap);\n      leftValueLabel.style.transform = `translateX(${leftValueLabelStaticHostOffset}px)`;\n      leftValueLabelTransformed.style.transform = `translateX(${leftValueLabelStaticHostOffset}px)`;\n      rightValueLabel.style.transform = `translateX(${rightValueLabelStaticHostOffset}px)`;\n      rightValueLabelTransformed.style.transform = `translateX(${rightValueLabelStaticHostOffset}px)`;\n    }\n  }\n\n  /**\n   * Hides bounding tick labels that are obscured by either handle.\n   */\n  private hideObscuredBoundingTickLabels(): void {\n    const valueIsRange = isRange(this.value);\n    if (!this.hasHistogram && !valueIsRange && !this.labelHandles && !this.precise) {\n      return;\n    }\n    if (!this.hasHistogram && !valueIsRange && this.labelHandles && !this.precise) {\n      return;\n    }\n    if (!this.hasHistogram && !valueIsRange && !this.labelHandles && this.precise) {\n      return;\n    }\n    if (!this.hasHistogram && !valueIsRange && this.labelHandles && this.precise) {\n      return;\n    }\n    if (!this.hasHistogram && valueIsRange && !this.precise) {\n      return;\n    }\n    if (this.hasHistogram && !this.precise && !this.labelHandles) {\n      return;\n    }\n\n    const minHandle: HTMLDivElement | null = this.el.shadowRoot.querySelector(\n      `.${CSS.thumbMinValue}`,\n    );\n    const maxHandle: HTMLDivElement | null = this.el.shadowRoot.querySelector(`.${CSS.thumbValue}`);\n\n    const minTickLabel: HTMLSpanElement | null = this.el.shadowRoot.querySelector(\n      `.${CSS.tickMin}`,\n    );\n    const maxTickLabel: HTMLSpanElement | null = this.el.shadowRoot.querySelector(\n      `.${CSS.tickMax}`,\n    );\n\n    if (!minHandle && maxHandle && minTickLabel && maxTickLabel) {\n      minTickLabel.style.opacity = this.isMinTickLabelObscured(minTickLabel, maxHandle) ? \"0\" : \"1\";\n      maxTickLabel.style.opacity = this.isMaxTickLabelObscured(maxTickLabel, maxHandle) ? \"0\" : \"1\";\n    }\n\n    if (minHandle && maxHandle && minTickLabel && maxTickLabel) {\n      minTickLabel.style.opacity =\n        this.isMinTickLabelObscured(minTickLabel, minHandle) ||\n        this.isMinTickLabelObscured(minTickLabel, maxHandle)\n          ? \"0\"\n          : \"1\";\n      maxTickLabel.style.opacity =\n        this.isMaxTickLabelObscured(maxTickLabel, minHandle) ||\n        (this.isMaxTickLabelObscured(maxTickLabel, maxHandle) && this.hasHistogram)\n          ? \"0\"\n          : \"1\";\n    }\n  }\n\n  /**\n   * Returns an integer representing the number of pixels to offset on the left or right side based on desired position behavior.\n   *\n   * @param leftBounds\n   * @param rightBounds\n   * @internal\n   */\n  private getHostOffset(leftBounds: number, rightBounds: number): number {\n    const hostBounds = this.el.getBoundingClientRect();\n    const buffer = 7;\n\n    if (leftBounds + buffer < hostBounds.left) {\n      return hostBounds.left - leftBounds - buffer;\n    }\n\n    if (rightBounds - buffer > hostBounds.right) {\n      return -(rightBounds - hostBounds.right) + buffer;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Returns an integer representing the number of pixels that the two given span elements are overlapping, taking into account\n   * a space in between the two spans equal to the font-size set on them to account for the space needed to render a hyphen.\n   *\n   * @param leftLabel\n   * @param rightLabel\n   */\n  private getRangeLabelOverlap(leftLabel: HTMLSpanElement, rightLabel: HTMLSpanElement): number {\n    const leftLabelBounds = leftLabel.getBoundingClientRect();\n    const rightLabelBounds = rightLabel.getBoundingClientRect();\n    const leftLabelFontSize = this.getFontSizeForElement(leftLabel);\n    const rangeLabelOverlap = leftLabelBounds.right + leftLabelFontSize - rightLabelBounds.left;\n\n    return Math.max(rangeLabelOverlap, 0);\n  }\n\n  /**\n   * Returns a boolean value representing if the minLabel span element is obscured (being overlapped) by the given handle div element.\n   *\n   * @param minLabel\n   * @param handle\n   */\n  private isMinTickLabelObscured(minLabel: HTMLSpanElement, handle: HTMLDivElement): boolean {\n    const minLabelBounds = minLabel.getBoundingClientRect();\n    const handleBounds = handle.getBoundingClientRect();\n    return intersects(minLabelBounds, handleBounds);\n  }\n\n  /**\n   * Returns a boolean value representing if the maxLabel span element is obscured (being overlapped) by the given handle div element.\n   *\n   * @param maxLabel\n   * @param handle\n   */\n  private isMaxTickLabelObscured(maxLabel: HTMLSpanElement, handle: HTMLDivElement): boolean {\n    const maxLabelBounds = maxLabel.getBoundingClientRect();\n    const handleBounds = handle.getBoundingClientRect();\n    return intersects(maxLabelBounds, handleBounds);\n  }\n\n  /**\n   * Returns a string representing the localized label value based if the groupSeparator prop is parsed.\n   *\n   * @param value\n   */\n  private formatValue = (value: number): string => {\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    return numberStringFormatter.localize(value.toString());\n  };\n\n  private internalLabelFormatter(value: number, type: \"max\" | \"min\" | \"value\" | \"tick\"): string {\n    const customFormatter = this.labelFormatter;\n\n    if (!customFormatter) {\n      return this.formatValue(value);\n    }\n\n    const formattedValue = customFormatter(value, type, this.formatValue);\n\n    if (formattedValue == null) {\n      return this.formatValue(value);\n    }\n\n    return formattedValue;\n  }\n}\n",".scale--s {\n  --calcite-slider-handle-size: theme(\"spacing[2.5]\");\n  --calcite-slider-handle-extension-height: 0.4rem;\n  --calcite-slider-container-font-size: var(--calcite-font-size--3);\n  .handle__label,\n  .tick__label {\n    @apply leading-3;\n  }\n}\n\n.scale--m {\n  --calcite-slider-handle-size: theme(\"spacing[3.5]\");\n  --calcite-slider-handle-extension-height: 0.5rem;\n  --calcite-slider-container-font-size: var(--calcite-font-size--2);\n  .handle__label,\n  .tick__label {\n    @apply leading-4;\n  }\n}\n\n.scale--l {\n  --calcite-slider-handle-size: 1rem;\n  --calcite-slider-handle-extension-height: 0.65rem;\n  --calcite-slider-container-font-size: var(--calcite-font-size--1);\n  .handle__label,\n  .tick__label {\n    @apply leading-4;\n  }\n}\n\n.handle__label,\n.tick__label {\n  @apply text-color-2 font-medium;\n  font-size: var(--calcite-slider-container-font-size);\n}\n\n:host {\n  @apply block;\n}\n\n.container {\n  @apply relative block break-normal;\n  padding-inline: calc(var(--calcite-slider-handle-size) * 0.5);\n  padding-block: calc(var(--calcite-slider-handle-size) * 0.5);\n  margin-block: calc(var(--calcite-slider-handle-size) * 0.5);\n  margin-inline: 0;\n  --calcite-slider-full-handle-height: calc(\n    var(--calcite-slider-handle-size) + var(--calcite-slider-handle-extension-height)\n  );\n  touch-action: none;\n  // disable browser swipe navigation to prevent interference with the slide thumb following a touch gesture\n  user-select: none;\n}\n\n@include disabled() {\n  .track__range,\n  .tick--active {\n    background-color: var(--calcite-color-text-3);\n  }\n}\n\n.scale--s {\n  .thumb:not(.thumb--precise) {\n    --calcite-slider-thumb-y-offset: -0.375rem;\n  }\n}\n.scale--m {\n  .thumb:not(.thumb--precise) {\n    --calcite-slider-thumb-y-offset: -0.5rem;\n  }\n}\n.scale--l {\n  .thumb:not(.thumb--precise) {\n    --calcite-slider-thumb-y-offset: -0.55rem;\n  }\n}\n\n:host([precise]:not([has-histogram])) {\n  .container .thumb--value {\n    --calcite-slider-thumb-y-offset: calc(var(--calcite-slider-full-handle-height) * -1);\n  }\n}\n\n.thumb-container {\n  @apply relative max-w-full;\n}\n\n.thumb {\n  --calcite-slider-thumb-x-offset: calc(var(--calcite-slider-handle-size) * 0.5);\n  @apply font-inherit\n    absolute\n    m-0\n    flex\n    cursor-pointer\n    flex-col\n    items-center\n    border-none\n    bg-transparent\n    p-0\n    outline-none;\n  transform: translate(var(--calcite-slider-thumb-x-offset), var(--calcite-slider-thumb-y-offset));\n\n  .handle__label {\n    &.static,\n    &.transformed {\n      @apply absolute\n        top-0\n        bottom-0\n        opacity-0;\n    }\n    &.hyphen::after {\n      content: \"\\2014\";\n      display: inline-block;\n      inline-size: 1em;\n    }\n    &.hyphen--wrap {\n      display: flex;\n    }\n  }\n\n  .handle {\n    @apply focus-base\n      bg-foreground-1\n      box-border\n      rounded-full;\n    block-size: var(--calcite-slider-handle-size);\n    inline-size: var(--calcite-slider-handle-size);\n    box-shadow: 0 0 0 2px var(--calcite-color-text-3) inset;\n    transition:\n      border var(--calcite-internal-animation-timing-medium) ease,\n      background-color var(--calcite-internal-animation-timing-medium) ease,\n      box-shadow var(--calcite-animation-timing) ease;\n  }\n\n  .handle-extension {\n    @apply w-0.5;\n    block-size: var(--calcite-slider-handle-extension-height);\n    background-color: var(--calcite-color-text-3);\n  }\n\n  &:hover {\n    .handle {\n      box-shadow: 0 0 0 3px var(--calcite-color-brand) inset;\n    }\n    .handle-extension {\n      @apply bg-brand;\n    }\n  }\n\n  &:focus {\n    .handle {\n      @apply focus-outset;\n    }\n    .handle-extension {\n      @apply bg-brand;\n    }\n  }\n\n  &.thumb--minValue {\n    transform: translate(calc(var(--calcite-slider-thumb-x-offset) * -1), var(--calcite-slider-thumb-y-offset));\n  }\n\n  &.thumb--precise {\n    --calcite-slider-thumb-y-offset: -0.125rem;\n  }\n}\n\n:host([label-handles]) {\n  .thumb {\n    --calcite-slider-thumb-x-offset: 50%;\n  }\n  &:host(:not([has-histogram])) {\n    .scale--s {\n      .thumb:not(.thumb--precise) {\n        --calcite-slider-thumb-y-offset: -1.4375rem;\n      }\n    }\n    .scale--m {\n      .thumb:not(.thumb--precise) {\n        --calcite-slider-thumb-y-offset: -1.875rem;\n      }\n    }\n    .scale--l {\n      .thumb:not(.thumb--precise) {\n        --calcite-slider-thumb-y-offset: -2rem;\n      }\n    }\n  }\n}\n\n:host([has-histogram][label-handles]),\n:host([label-handles]:not([has-histogram])) .thumb--minValue.thumb--precise {\n  .handle__label {\n    margin-block-start: 0.5em;\n  }\n}\n:host(:not([has-histogram]):not([precise])),\n:host([label-handles]:not([has-histogram])) .thumb--value {\n  .handle__label {\n    margin-block-end: 0.5em;\n  }\n}\n\n:host([label-handles][precise]) {\n  &:host(:not([has-histogram])) .scale--s .thumb--value {\n    --calcite-slider-thumb-y-offset: -2.075rem;\n  }\n  &:host(:not([has-histogram])) .scale--m .thumb--value {\n    --calcite-slider-thumb-y-offset: -2.75rem;\n  }\n  &:host(:not([has-histogram])) .scale--l .thumb--value {\n    --calcite-slider-thumb-y-offset: -3.0625rem;\n  }\n}\n\n.thumb:focus,\n.thumb--active {\n  .handle {\n    @apply bg-brand;\n    box-shadow: 0 0 8px 0 rgb(0 0 0 / 16%); // shadow 1 press\n  }\n}\n\n.thumb:hover.thumb--precise::after,\n.thumb:focus.thumb--precise::after,\n.thumb--active.thumb--precise::after {\n  @apply bg-brand;\n}\n\n.track {\n  @apply relative h-0.5 rounded-none;\n  background-color: var(--calcite-color-border-2);\n  transition: all var(--calcite-internal-animation-timing-medium) ease-in;\n}\n\n.track__range {\n  @apply bg-brand\n  absolute\n  top-0\n  h-0.5;\n}\n.container--range {\n  .track__range {\n    &:hover {\n      cursor: ew-resize;\n    }\n    &::after {\n      @apply absolute w-full;\n      content: \"\";\n      inset-block-start: calc(calc(var(--calcite-slider-full-handle-height) * 0.5) * -1);\n      block-size: calc(var(--calcite-slider-handle-size) + var(--calcite-slider-handle-extension-height));\n    }\n  }\n}\n\n@media (forced-colors: active) {\n  .thumb {\n    outline-width: 0;\n    outline-offset: 0;\n  }\n  .handle {\n    @apply outline-none;\n  }\n  .thumb:focus .handle,\n  .thumb .handle-extension,\n  .thumb:hover .handle-extension,\n  .thumb:focus .handle-extension,\n  .thumb:active .handle-extension {\n    background-color: canvasText;\n  }\n  .track {\n    background-color: canvasText;\n  }\n  .track__range {\n    background-color: highlight;\n  }\n}\n\n.tick {\n  @apply absolute\n    h-1\n    w-0.5\n    border\n    border-solid;\n  background-color: var(--calcite-color-border-input);\n  border-color: var(--calcite-color-foreground-1);\n  inset-block-start: -2px;\n  pointer-events: none;\n  margin-inline-start: calc(-1 * theme(\"margin[0.5]\"));\n}\n\n.tick--active {\n  @apply bg-brand;\n}\n\n.tick__label {\n  @apply pointer-events-none\n    mt-3.5\n    flex\n    justify-center;\n}\n\n.tick__label--min {\n  transition: opacity var(--calcite-animation-timing);\n}\n\n.tick__label--max {\n  transition: opacity var(--calcite-internal-animation-timing-fast);\n}\n\n:host([has-histogram][label-handles]),\n:host([has-histogram][precise]) {\n  .tick__label--min,\n  .tick__label--max {\n    @apply text-color-3 font-normal;\n  }\n}\n\n.graph {\n  color: var(--calcite-color-foreground-3);\n  block-size: 48px;\n}\n\n// Ensure we have enough space on variants with text elements to prevent overlap\n:host([label-ticks][ticks]) {\n  .container {\n    // match tick__label top margin + font-size\n    padding-block-end: calc(theme(\"margin[3.5]\") + var(--calcite-slider-container-font-size));\n  }\n}\n:host([has-histogram]) {\n  &:host([precise][label-handles]) {\n    .container {\n      padding-block-end: calc(var(--calcite-slider-full-handle-height) + 1em);\n    }\n  }\n  &:host([label-handles]:not([precise])) {\n    .container {\n      padding-block-end: calc(calc(var(--calcite-slider-handle-size) * 0.5) + 1em);\n    }\n  }\n  &:host([precise]:not([label-handles])) {\n    .container {\n      padding-block-end: var(--calcite-slider-full-handle-height);\n    }\n  }\n}\n:host(:not([has-histogram])) {\n  &:host([precise]:not([label-handles])) {\n    .container {\n      padding-block-start: var(--calcite-slider-full-handle-height);\n    }\n    .container--range {\n      padding-block-end: var(--calcite-slider-full-handle-height);\n    }\n  }\n  &:host([label-handles]:not([precise])) {\n    .container {\n      padding-block-start: calc(var(--calcite-slider-full-handle-height) + 4px);\n    }\n  }\n  &:host([label-handles][precise]) {\n    .container {\n      padding-block-start: calc(\n        var(--calcite-slider-full-handle-height) + var(--calcite-slider-container-font-size) + 4px\n      );\n    }\n    .container--range {\n      padding-block-end: calc(\n        var(--calcite-slider-full-handle-height) + var(--calcite-slider-container-font-size) + 4px\n      );\n    }\n  }\n}\n\n@include hidden-form-input();\n@include base-component();\n","import { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { Writable } from \"type-fest\";\nimport { Status } from \"../components/interfaces\";\nimport type { IconNameOrString } from \"../components/icon/interfaces\";\nimport { closestElementCrossShadowBoundary, queryElementRoots } from \"./dom\";\n\n/**\n * Any form <Component> with a `calcite<Component>Input` event needs to be included in this array.\n */\nexport const componentsWithInputEvent = [\n  \"calcite-input\",\n  \"calcite-input-number\",\n  \"calcite-input-text\",\n  \"calcite-text-area\",\n];\n\n/**\n * Get the event name to listen for that, when emitted, will clear the\n * validation message that displays after form submission. Only validation\n * messages that are set by the browser will be cleared. If a user sets\n * validationMessage to a custom value, they are responsible for clearing it.\n *\n * Exported for testing purposes.\n *\n * @param componentTag the tag of the component, e.g. \"calcite-input\"\n * @returns the event name\n */\nexport function getClearValidationEventName(componentTag: string): string {\n  const componentTagCamelCase = componentTag\n    .split(\"-\")\n    .map((part: string, index: number) =>\n      index === 0 ? part : `${part[0].toUpperCase()}${part.slice(1)}`,\n    )\n    .join(\"\");\n\n  const clearValidationEvent = `${componentTagCamelCase}${\n    componentsWithInputEvent.includes(componentTag) ? \"Input\" : \"Change\"\n  }`;\n\n  return clearValidationEvent;\n}\n\nexport type MutableValidityState = Writable<ValidityState>;\n\n/**\n * Exported for testing purposes.\n */\nexport const hiddenFormInputSlotName = \"hidden-form-input\";\n\n/**\n * Defines interface for form owning components.\n *\n * Allows calling submit/reset methods on the form.\n */\nexport interface FormOwner {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * The ID of the form to associate with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   *\n   * Note that this prop should use the @Prop decorator.\n   */\n  form: string;\n\n  /**\n   * The form this component is associated with.\n   *\n   * @internal\n   */\n  formEl: HTMLFormElement;\n}\n\n/**\n * Defines interface for form-associated components.\n *\n * Along with the interface, use the matching form utils to help set up the component behavior.\n */\nexport interface FormComponent<T = any> extends FormOwner {\n  /**\n   * When true, this component's value will not be submitted in the form.\n   */\n  disabled: boolean;\n\n  /**\n   * When true, form submit requests will enforce field requirement.\n   *\n   * @todo remove optional in follow-up PR\n   */\n  required?: boolean;\n\n  /**\n   * The name used to submit the value to the associated form.\n   *\n   * Note that this prop should use the @Prop decorator.\n   */\n  name: string;\n\n  /**\n   * This form component's value.\n   *\n   * Note that this prop should use the @Prop decorator.\n   */\n  value: T;\n\n  /**\n   * The initial value for this form component.\n   *\n   * When the form is reset, the value will be set to this property.\n   */\n  defaultValue: T;\n\n  /** The validation icon to display. */\n  validationIcon?: string | boolean;\n\n  /** The validation message to display. */\n  validationMessage?: string;\n\n  /** The validity state of the form component. */\n  validity?: MutableValidityState;\n\n  /**\n   * Hook for components to provide custom form reset behavior.\n   */\n  onFormReset?: () => void;\n\n  /**\n   * Hook for components to sync _extra_ props on the hidden input form element used for form-submitting.\n   *\n   * Note: The following props are set by default: disabled, hidden, name, required, value.\n   */\n  syncHiddenFormInput?: (input: HTMLInputElement) => void;\n}\n\n/**\n * Defines interface for checkable form-associated components.\n *\n * Along with the interface, use the matching form utils to help set up the component behavior.\n */\nexport interface CheckableFormComponent<T = any> extends FormComponent<T> {\n  /**\n   * For boolean-valued components, this property defines whether the associated value is submitted to the form or not.\n   */\n  checked: boolean;\n\n  /**\n   * The initial checked value for this form component.\n   *\n   * When the form is reset, the checked property will be set to this value.\n   */\n  defaultChecked: boolean;\n}\n\nfunction isCheckable(component: FormComponent): component is CheckableFormComponent {\n  return \"checked\" in component;\n}\n\nconst onFormResetMap = new WeakMap<HTMLElement, FormComponent[\"onFormReset\"]>();\nconst formComponentSet = new WeakSet<HTMLElement>();\n\n/**\n * This helps determine if our form component is part of a composite form-associated component.\n *\n * @param form\n * @param formComponentEl\n */\nfunction hasRegisteredFormComponentParent(\n  form: HTMLFormElement,\n  formComponentEl: HTMLElement,\n): boolean {\n  // if we have a parent component using the form ID attribute, we assume it is form-associated\n  const hasParentComponentWithFormIdSet = closestElementCrossShadowBoundary(\n    formComponentEl.parentElement,\n    \"[form]\",\n  );\n\n  if (hasParentComponentWithFormIdSet) {\n    return true;\n  }\n\n  // we use events as a way to test for nested form-associated components across shadow bounds\n  const formComponentRegisterEventName = \"calciteInternalFormComponentRegister\";\n\n  let hasRegisteredFormComponentParent = false;\n\n  form.addEventListener(\n    formComponentRegisterEventName,\n    (event) => {\n      hasRegisteredFormComponentParent = event\n        .composedPath()\n        .some((element) => formComponentSet.has(element as HTMLElement));\n      event.stopPropagation();\n    },\n    { once: true },\n  );\n\n  formComponentEl.dispatchEvent(\n    new CustomEvent(formComponentRegisterEventName, {\n      bubbles: true,\n      composed: true,\n    }),\n  );\n\n  return hasRegisteredFormComponentParent;\n}\n\n// exported for test purposes only\nexport interface ValidationProps {\n  status: Status;\n  message: string;\n  icon: IconNameOrString | boolean | \"\";\n}\n\nfunction displayValidationMessage(\n  component: HTMLCalciteInputElement | FormComponent,\n  { status, message, icon }: ValidationProps,\n): void {\n  if (\"status\" in component) {\n    component.status = status;\n  }\n\n  if (\"validationIcon\" in component && typeof component.validationIcon !== \"string\") {\n    component.validationIcon = icon;\n  }\n\n  if (\"validationMessage\" in component && !component.validationMessage) {\n    component.validationMessage = message;\n  }\n}\n\nfunction getValidationComponent(\n  el: HTMLCalciteInputElement,\n  // TODO: create an HTMLCalciteFormAssociatedElement base type\n): HTMLCalciteInputElement | HTMLCalciteRadioButtonGroupElement {\n  // radio-button is formAssociated, but the validation props are on the parent group\n  if (el.nodeName === \"CALCITE-RADIO-BUTTON\") {\n    return closestElementCrossShadowBoundary(el, \"calcite-radio-button-group\");\n  }\n  return el;\n}\n\nconst invalidEvent = new CustomEvent(\"calciteInvalid\", { bubbles: true, composed: true });\n\nfunction invalidHandler(event: Event) {\n  // target is the hidden input, which is slotted in the actual form component\n  const hiddenInput = event?.target as HTMLInputElement;\n  const hiddenInputMessage = hiddenInput?.validationMessage;\n\n  // not necessarily a calcite-input, but we don't have an HTMLCalciteFormAssociatedElement type\n  const formComponent = getValidationComponent(\n    hiddenInput?.parentElement as HTMLCalciteInputElement,\n  ) as HTMLCalciteInputElement;\n\n  if (!formComponent) {\n    return;\n  }\n\n  const componentTag = formComponent?.nodeName?.toLowerCase();\n  const componentTagParts = componentTag?.split(\"-\");\n\n  if (componentTagParts.length < 2 || componentTagParts[0] !== \"calcite\") {\n    return;\n  }\n\n  // prevent the browser from showing the native validation popover\n  event?.preventDefault();\n\n  if (\"validity\" in formComponent) {\n    formComponent.validity = hiddenInput?.validity;\n  }\n\n  // dispatch a \"calciteInvalid\" so users can set custom validation messages\n  formComponent.dispatchEvent(invalidEvent);\n\n  displayValidationMessage(formComponent, {\n    message: hiddenInputMessage,\n    icon: true,\n    status: \"invalid\",\n  });\n\n  const clearValidationEvent = getClearValidationEventName(componentTag);\n  formComponent.addEventListener(\n    clearValidationEvent,\n    () => {\n      if (\"status\" in formComponent) {\n        formComponent.status = \"idle\";\n      }\n\n      if (\"validationIcon\" in formComponent && !formComponent.validationIcon) {\n        formComponent.validationIcon = false;\n      }\n\n      if (\n        \"validationMessage\" in formComponent &&\n        formComponent.validationMessage === hiddenInputMessage\n      ) {\n        formComponent.validationMessage = \"\";\n      }\n\n      if (\"validity\" in formComponent) {\n        formComponent.validity = hiddenInput?.validity;\n      }\n    },\n    { once: true },\n  );\n}\n\n/**\n * Helper to submit a form.\n *\n * @param component\n * @returns true if its associated form was submitted, false otherwise.\n */\nexport function submitForm(component: FormOwner): boolean {\n  const { formEl } = component;\n\n  if (!formEl) {\n    return false;\n  }\n\n  formEl.addEventListener(\"invalid\", invalidHandler, true);\n  formEl.requestSubmit();\n  formEl.removeEventListener(\"invalid\", invalidHandler, true);\n\n  requestAnimationFrame(() => {\n    const invalidEls = formEl.querySelectorAll<HTMLCalciteInputElement>(\"[status=invalid]\");\n\n    // focus the first invalid element that has a validation message\n    for (const el of invalidEls) {\n      if (el?.validationMessage) {\n        el?.setFocus();\n        break;\n      }\n    }\n  });\n\n  return true;\n}\n\n/**\n * Helper to reset a form.\n *\n * @param component\n */\nexport function resetForm(component: FormOwner): void {\n  component.formEl?.reset();\n}\n\n/**\n * Helper to set up form interactions on connectedCallback.\n *\n * @param component\n */\nexport function connectForm<T>(component: FormComponent<T>): void {\n  const { el, value } = component;\n  const associatedForm = findAssociatedForm(component);\n\n  if (!associatedForm || hasRegisteredFormComponentParent(associatedForm, el)) {\n    return;\n  }\n\n  component.formEl = associatedForm;\n  component.defaultValue = value;\n\n  if (isCheckable(component)) {\n    component.defaultChecked = component.checked;\n  }\n\n  const boundOnFormReset = (component.onFormReset || onFormReset).bind(component);\n  associatedForm.addEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.set(component.el, boundOnFormReset);\n  formComponentSet.add(el);\n}\n\n/**\n * Utility method to find a form-component's associated form element.\n *\n * @param component\n */\nexport function findAssociatedForm(component: FormOwner): HTMLFormElement | null {\n  const { el, form } = component;\n\n  return form\n    ? queryElementRoots<HTMLFormElement>(el, { id: form })\n    : closestElementCrossShadowBoundary(el, \"form\");\n}\n\nfunction onFormReset<T>(this: FormComponent<T>): void {\n  if (\"status\" in this) {\n    this.status = \"idle\";\n  }\n\n  if (\"validationIcon\" in this) {\n    this.validationIcon = false;\n  }\n\n  if (\"validationMessage\" in this) {\n    this.validationMessage = \"\";\n  }\n\n  if (isCheckable(this)) {\n    this.checked = this.defaultChecked;\n    return;\n  }\n\n  this.value = this.defaultValue;\n}\n\n/**\n * Helper to tear down form interactions on disconnectedCallback.\n *\n * @param component\n */\nexport function disconnectForm<T>(component: FormComponent<T>): void {\n  const { el, formEl } = component;\n\n  if (!formEl) {\n    return;\n  }\n\n  const boundOnFormReset = onFormResetMap.get(el);\n  formEl.removeEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.delete(el);\n  component.formEl = null;\n  formComponentSet.delete(el);\n}\n\n/**\n * Helper for setting the default value on initialization after connectedCallback.\n *\n * Note that this is only needed if the default value cannot be determined on connectedCallback.\n *\n * @param component\n * @param value\n */\nexport function afterConnectDefaultValueSet<T>(component: FormComponent<T>, value: any): void {\n  component.defaultValue = value;\n}\n\nexport const internalHiddenInputInputEvent = \"calciteInternalHiddenInputInput\";\n\nconst hiddenInputInputHandler = (event: Event) => {\n  event.target.dispatchEvent(new CustomEvent(internalHiddenInputInputEvent, { bubbles: true }));\n};\n\nconst removeHiddenInputChangeEventListener = (input: HTMLInputElement) =>\n  input.removeEventListener(\"input\", hiddenInputInputHandler);\n\n/**\n * Helper for maintaining a form-associated's hidden input in sync with the component.\n *\n * Based on Ionic's approach: https://github.com/ionic-team/ionic-framework/blob/e4bf052794af9aac07f887013b9250d2a045eba3/core/src/utils/helpers.ts#L198\n *\n * @param component\n */\nfunction syncHiddenFormInput(component: FormComponent): void {\n  const { el, formEl, name, value } = component;\n  const { ownerDocument } = el;\n\n  const inputs = el.querySelectorAll<HTMLInputElement>(`input[slot=\"${hiddenFormInputSlotName}\"]`);\n\n  if (!formEl || !name) {\n    inputs.forEach((input) => {\n      removeHiddenInputChangeEventListener(input);\n      input.remove();\n    });\n    return;\n  }\n\n  const values = Array.isArray(value) ? value : [value];\n  const extra: any[] = [];\n  const seen = new Set<any>();\n\n  inputs.forEach((input) => {\n    const valueMatch = values.find(\n      (val) =>\n        /* intentional non-strict equality check */\n        val == input.value,\n    );\n\n    if (valueMatch != null) {\n      seen.add(valueMatch);\n      defaultSyncHiddenFormInput(component, input, valueMatch);\n    } else {\n      extra.push(input);\n    }\n  });\n\n  let docFrag: DocumentFragment;\n\n  values.forEach((value) => {\n    if (seen.has(value)) {\n      return;\n    }\n\n    let input = extra.pop();\n\n    if (!input) {\n      input = ownerDocument.createElement(\"input\");\n      input.slot = hiddenFormInputSlotName;\n    }\n\n    if (!docFrag) {\n      docFrag = ownerDocument.createDocumentFragment();\n    }\n\n    docFrag.append(input);\n\n    // emits when hidden input is autofilled\n    input.addEventListener(\"input\", hiddenInputInputHandler);\n\n    defaultSyncHiddenFormInput(component, input, value);\n  });\n\n  if (docFrag) {\n    el.append(docFrag);\n  }\n  extra.forEach((input) => {\n    removeHiddenInputChangeEventListener(input);\n    input.remove();\n  });\n}\n\nfunction defaultSyncHiddenFormInput(\n  component: FormComponent,\n  input: HTMLInputElement,\n  value: string,\n): void {\n  const { defaultValue, disabled, form, name, required } = component;\n\n  // keep in sync to prevent losing reset value\n  input.defaultValue = defaultValue;\n  input.disabled = disabled;\n  input.name = name;\n  input.required = required;\n  input.tabIndex = -1;\n\n  // we set the attr as the prop is read-only\n  if (form) {\n    input.setAttribute(\"form\", form);\n  } else {\n    input.removeAttribute(\"form\");\n  }\n\n  if (isCheckable(component)) {\n    input.checked = component.checked;\n\n    // keep in sync to prevent losing reset value\n    input.defaultChecked = component.defaultChecked;\n    // heuristic to support default/on mode from https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n    input.value = component.checked ? value || \"on\" : \"\";\n  } else {\n    input.value = value || \"\";\n  }\n\n  component.syncHiddenFormInput?.(input);\n\n  const validationComponent = getValidationComponent(component.el as HTMLCalciteInputElement);\n\n  if (validationComponent && \"validity\" in validationComponent) {\n    // mutate the component's validity object to prevent a rerender\n    // https://stenciljs.com/docs/properties#mutable-arrays-and-objects\n    for (const key in { ...input?.validity }) {\n      validationComponent.validity[key] = input.validity[key];\n    }\n  }\n}\n\ninterface HiddenFormInputSlotProps {\n  component: FormComponent;\n}\n\n/**\n * Helper to render the slot for form-associated component's hidden input.\n *\n * If the component has a default slot, this must be placed at the bottom of the component's root container to ensure it is the last child.\n *\n * render(): VNode {\n *   <Host>\n *     <div class={CSS.container}>\n *     // ...\n *     <HiddenFormInputSlot component={this} />\n *     </div>\n *   </Host>\n * }\n *\n * Note that the hidden-form-input Sass mixin must be added to the component's style to apply specific styles.\n *\n * @param root0\n * @param root0.component\n */\nexport const HiddenFormInputSlot: FunctionalComponent<HiddenFormInputSlotProps> = ({\n  component,\n}): VNode => {\n  syncHiddenFormInput(component);\n\n  return <slot name={hiddenFormInputSlotName} />;\n};\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","import { closestElementCrossShadowBoundary, isBefore, queryElementRoots } from \"./dom\";\nimport { componentOnReady } from \"./component\";\n\nexport interface LabelableComponent {\n  /**\n   * When true, disabled prevents interaction.\n   */\n  disabled: boolean;\n\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * Text label.\n   */\n  label?: string;\n\n  /**\n   * The label this component is associated with.\n   */\n  labelEl: HTMLCalciteLabelElement;\n\n  /**\n   * Hook for components to provide custom label click behavior.\n   */\n  onLabelClick: (event: CustomEvent<any>) => void;\n}\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport const labelClickEvent = \"calciteInternalLabelClick\";\nexport const labelConnectedEvent = \"calciteInternalLabelConnected\";\nexport const labelDisconnectedEvent = \"calciteInternalLabelDisconnected\";\n\nconst labelTagName = \"calcite-label\";\nconst labelToLabelables = new WeakMap<HTMLCalciteLabelElement, LabelableComponent[]>();\nconst onLabelClickMap = new WeakMap<HTMLCalciteLabelElement, typeof onLabelClick>();\nconst onLabelConnectedMap = new WeakMap<LabelableComponent, typeof onLabelConnected>();\nconst onLabelDisconnectedMap = new WeakMap<LabelableComponent, typeof onLabelDisconnected>();\nconst unlabeledComponents = new Set<LabelableComponent>();\n\nconst findLabelForComponent = (componentEl: HTMLElement): HTMLCalciteLabelElement | null => {\n  const { id } = componentEl;\n\n  const forLabel =\n    id && queryElementRoots<HTMLCalciteLabelElement>(componentEl, { selector: `${labelTagName}[for=\"${id}\"]` });\n\n  if (forLabel) {\n    return forLabel;\n  }\n\n  const parentLabel = closestElementCrossShadowBoundary<HTMLCalciteLabelElement>(componentEl, labelTagName);\n\n  if (\n    !parentLabel ||\n    // labelable components within other custom elements are not considered labelable\n    hasAncestorCustomElements(parentLabel, componentEl)\n  ) {\n    return null;\n  }\n\n  return parentLabel;\n};\n\nfunction hasAncestorCustomElements(label: HTMLCalciteLabelElement, componentEl: HTMLElement): boolean {\n  let traversedElements: HTMLElement[];\n  const customElementAncestorCheckEventType = \"custom-element-ancestor-check\";\n\n  const listener = (event: CustomEvent) => {\n    event.stopImmediatePropagation();\n    const composedPath = event.composedPath() as HTMLElement[];\n    traversedElements = composedPath.slice(composedPath.indexOf(componentEl), composedPath.indexOf(label));\n  };\n\n  label.addEventListener(customElementAncestorCheckEventType, listener, { once: true });\n\n  componentEl.dispatchEvent(new CustomEvent(customElementAncestorCheckEventType, { composed: true, bubbles: true }));\n  label.removeEventListener(customElementAncestorCheckEventType, listener);\n\n  const ancestorCustomElements = traversedElements\n    .filter((el) => el !== componentEl && el !== label)\n    .filter((el) => el.tagName?.includes(\"-\"));\n\n  return ancestorCustomElements.length > 0;\n}\n\n/**\n * Helper to set up label interactions on connectedCallback.\n *\n * @param component\n */\nexport function connectLabel(component: LabelableComponent): void {\n  if (!component) {\n    return;\n  }\n\n  const labelEl = findLabelForComponent(component.el);\n\n  if (\n    (onLabelClickMap.has(labelEl) && labelEl === component.labelEl) ||\n    (!labelEl && unlabeledComponents.has(component))\n  ) {\n    return;\n  }\n\n  const boundOnLabelDisconnected = onLabelDisconnected.bind(component);\n\n  if (labelEl) {\n    component.labelEl = labelEl;\n\n    const labelables = labelToLabelables.get(labelEl) || [];\n    labelables.push(component);\n    labelToLabelables.set(labelEl, labelables.sort(sortByDOMOrder));\n\n    if (!onLabelClickMap.has(component.labelEl)) {\n      onLabelClickMap.set(component.labelEl, onLabelClick);\n      component.labelEl.addEventListener(labelClickEvent, onLabelClick);\n    }\n\n    unlabeledComponents.delete(component);\n    document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n    onLabelDisconnectedMap.set(component, boundOnLabelDisconnected);\n    document.addEventListener(labelDisconnectedEvent, boundOnLabelDisconnected);\n  } else if (!unlabeledComponents.has(component)) {\n    boundOnLabelDisconnected();\n    document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  }\n}\n/**\n * Helper to tear down label interactions on disconnectedCallback on labelable components.\n *\n * @param component\n */\nexport function disconnectLabel(component: LabelableComponent): void {\n  if (!component) {\n    return;\n  }\n\n  unlabeledComponents.delete(component);\n  document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n  document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  onLabelConnectedMap.delete(component);\n  onLabelDisconnectedMap.delete(component);\n\n  if (!component.labelEl) {\n    return;\n  }\n\n  const labelables = labelToLabelables.get(component.labelEl);\n\n  if (labelables.length === 1) {\n    component.labelEl.removeEventListener(labelClickEvent, onLabelClickMap.get(component.labelEl));\n    onLabelClickMap.delete(component.labelEl);\n  }\n\n  labelToLabelables.set(\n    component.labelEl,\n    labelables.filter((labelable) => labelable !== component).sort(sortByDOMOrder),\n  );\n\n  component.labelEl = null;\n}\n\nfunction sortByDOMOrder(a: LabelableComponent, b: LabelableComponent): number {\n  return isBefore(a.el, b.el) ? -1 : 1;\n}\n\n/**\n * Helper to get the label text from a component.\n *\n * @param component\n */\nexport function getLabelText(component: LabelableComponent): string {\n  return component.label || component.labelEl?.textContent?.trim() || \"\";\n}\n\nfunction onLabelClick(this: HTMLCalciteLabelElement, event: CustomEvent<{ sourceEvent: MouseEvent }>): void {\n  const labelClickTarget = event.detail.sourceEvent.target as HTMLElement;\n  const labelables = labelToLabelables.get(this);\n  const clickedLabelable = labelables.find((labelable) => labelable.el === labelClickTarget);\n  const labelableChildClicked = labelables.includes(clickedLabelable);\n\n  if (labelableChildClicked) {\n    // no need to forward click as labelable will receive focus\n    return;\n  }\n\n  const firstLabelable = labelables[0];\n\n  if (firstLabelable.disabled) {\n    return;\n  }\n\n  firstLabelable.onLabelClick(event);\n}\n\nfunction onLabelConnected(this: LabelableComponent): void {\n  if (unlabeledComponents.has(this)) {\n    connectLabel(this);\n  }\n}\n\nfunction onLabelDisconnected(this: LabelableComponent): void {\n  unlabeledComponents.add(this);\n  const boundOnLabelConnected = onLabelConnectedMap.get(this) || onLabelConnected.bind(this);\n  onLabelConnectedMap.set(this, boundOnLabelConnected);\n  document.addEventListener(labelConnectedEvent, boundOnLabelConnected);\n}\n\n/**\n * Helper to associate an explicit label (i.e., using `for`) with a labelable component that does not have an associated label.\n *\n * @param label - the label element\n */\nexport async function associateExplicitLabelToUnlabeledComponent(label: HTMLCalciteLabelElement): Promise<void> {\n  await componentOnReady(label);\n\n  const alreadyLabeled = labelToLabelables.has(label);\n\n  if (alreadyLabeled) {\n    return;\n  }\n\n  const forComponentEl = label.ownerDocument?.getElementById(label.for);\n\n  if (!forComponentEl) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    for (const labelable of unlabeledComponents) {\n      if (labelable.el === forComponentEl) {\n        connectLabel(labelable);\n        break;\n      }\n    }\n  });\n}\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","export const clamp = (value: number, min: number, max: number): number => Math.max(min, Math.min(value, max));\n\nconst decimalNumberRegex = new RegExp(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\n/**\n * Returns the quantity of real decimal places for a number, which excludes trailing zeros.\n *\n * Adapted from {@link https://stackoverflow.com/questions/10454518/javascript-how-to-retrieve-the-number-of-decimals-of-a-string-number}.\n *\n * @param decimal - decimal value\n * @param value\n * @returns {number} the amount of decimal places in a number\n */\nexport const decimalPlaces = (value: number | string): number => {\n  const match = (\"\" + value).match(decimalNumberRegex);\n  if (!match || parseInt(match[1]) === 0) {\n    return 0;\n  }\n  return Math.max(\n    0,\n    // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) -\n      // Adjust for scientific notation.\n      (match[2] ? +match[2] : 0),\n  );\n};\n\nexport function getDecimals(value: number): number {\n  if (decimalPlaces(value) > 0 && value > 0) {\n    return parseFloat(`0.${value.toString().split(\".\")[1]}`);\n  }\n  return value;\n}\n\nexport function remap(value: number, fromMin: number, fromMax: number, toMin: number, toMax: number): number {\n  return ((value - fromMin) * (toMax - toMin)) / (fromMax - fromMin) + toMin;\n}\n\n/**\n * Helper to determine if a value is close to the edge of a range within a threshold.\n *\n * @param value\n * @param range\n * @param threshold\n * @returns -1 if close to lower edge, 1 if close to upper edge, 0 otherwise.\n */\nexport function closeToRangeEdge(value: number, range: number, threshold: number): number {\n  return value < threshold ? -1 : value > range - threshold ? 1 : 0;\n}\n"],"names":["slopeSingle","p0","p1","m","dx","dy","bezier","m0","m1","t","x0","y0","x1","y1","join","area","_ref4","data","min","max","length","startX","startY","minX","minY","maxX","commands","reduce","acc","point","i","p2","dx1","p","Math","sign","abs","slope","undefined","command","last","Graph","graphId","guid","resizeObserver","createObserver","forceUpdate","this","connectedCallback","observe","el","disconnectedCallback","disconnect","render","colorStops","highlightMax","highlightMin","id","clientHeight","height","clientWidth","width","h","class","preserveAspectRatio","viewBox","rangeMin","rangeMax","_ref2","_ref3","x","y","range","currentMin","currentMax","_ref","rangeX","rangeY","translate","hMinX","hMaxX","areaPath","fill","x2","y2","map","_ref5","offset","color","opacity","d","mask","CSS","isRange","value","Array","isArray","Slider","handleKeyDown","event","mirror","shouldMirror","activeProp","pageStep","step","key","isActivationKey","preventDefault","adjustment","isNaN","fixedDecimalAdjustment","Number","toFixed","decimalPlaces","setValue","clamp","onThumbBlur","onThumbFocus","thumb","currentTarget","getAttribute","onThumbPointerDown","pointerDownDragStart","onTrackPointerDown","dragUpdate","disabled","dragProp","mapToRange","clientX","pageX","minValueDragRange","maxValueDragRange","minMaxValueRange","newMinValue","newMaxValue","minValue","maxValue","pointerUpDragEnd","isPrimaryPointerButton","dragEnd","removeDragListeners","focusActiveHandle","lastDragPropValue","emitChange","storeTrackRef","node","trackEl","storeThumbRef","minHandle","maxHandle","formatValue","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","localize","toString","histogramWatcher","newHistogram","hasHistogram","ticksWatcher","tickValues","generateTickValues","valueHandler","setMinMaxFromValue","minMaxValueHandler","setValueFromMinMax","connectLocalized","connectLabel","connectForm","disconnectLabel","disconnectForm","disconnectLocalized","componentWillLoad","setUpLoadableComponent","snap","getClosestStep","histogram","afterConnectDefaultValueSet","componentDidLoad","setComponentLoaded","componentDidRender","labelHandles","adjustHostObscuredHandleLabel","precise","hyphenateCollidingRangeHandleLabels","hideObscuredBoundingTickLabels","updateHostInteraction","useMinValue","shouldUseMinValue","minInterval","getUnitInterval","maxInterval","valueIsRange","thumbTypes","buildThumbType","renderThumb","type","thumbPlacement","includes","minThumbTypes","minThumb","fillPlacement","trackRangePlacementStyles","left","right","Host","onKeyDown","onTouchStart","handleTouchStart","InteractiveContainer","getLabelText","scale","renderGraph","ref","onPointerDown","style","tick","tickOffset","activeTicks","rangeStart","rangeEnd","renderTickLabel","HiddenFormInputSlot","component","_ref6","isLabeled","isPrecise","isMinThumb","valueProp","ariaLabel","minLabel","maxLabel","ariaValuenow","displayedValue","internalLabelFormatter","thumbStyle","thumbLabelClasses","thumbContent","reverse","lastDragProp","onBlur","onFocus","role","tabIndex","histogramStops","labelTicks","isMinTickLabel","isMaxTickLabel","isAtEdge","pointerDownHandler","position","prop","dragStart","shadowRoot","querySelector","setFocus","componentFocusable","handle","focus","thumbTypeParts","push","onLabelClick","mirrored","getTickDensity","density","ticks","tickInterval","current","window","addEventListener","valueX","getClosestHandle","emitInput","calciteSliderInput","emit","calciteSliderChange","removeEventListener","values","valueChanged","Object","keys","forEach","propName","newValue","oldValue","getBoundingClientRect","percent","clampedValue","bigDecimalString","BigDecimal","floor","multiply","add","snappedValue","getDistanceX","getFontSizeForElement","element","getComputedStyle","getPropertyValue","match","num","name","label","labelStatic","labelTransformed","labelStaticBounds","labelStaticOffset","getHostOffset","transform","leftModifier","rightModifier","leftValueLabel","leftValueLabelStatic","leftValueLabelTransformed","leftValueLabelStaticHostOffset","rightValueLabel","rightValueLabelStatic","rightValueLabelTransformed","rightValueLabelStaticHostOffset","labelFontSize","labelTransformedOverlap","getRangeLabelOverlap","hyphenLabel","labelOffset","classList","leftValueLabelTranslate","leftValueLabelTransformedHostOffset","rightValueLabelTranslate","rightValueLabelTransformedHostOffset","remove","minTickLabel","maxTickLabel","isMinTickLabelObscured","isMaxTickLabelObscured","leftBounds","rightBounds","hostBounds","leftLabel","rightLabel","leftLabelBounds","rightLabelBounds","leftLabelFontSize","rangeLabelOverlap","minLabelBounds","handleBounds","intersects","maxLabelBounds","customFormatter","labelFormatter","formattedValue","getIconScale","componentScale","async","componentOnReady","isStencilEl","Promise","resolve","requestAnimationFrame","componentsWithInputEvent","hiddenFormInputSlotName","isCheckable","onFormResetMap","WeakMap","formComponentSet","WeakSet","getValidationComponent","nodeName","closestElementCrossShadowBoundary","invalidEvent","CustomEvent","bubbles","composed","invalidHandler","hiddenInput","target","hiddenInputMessage","validationMessage","formComponent","parentElement","componentTag","toLowerCase","componentTagParts","split","validity","dispatchEvent","status","message","icon","validationIcon","displayValidationMessage","clearValidationEvent","part","index","toUpperCase","slice","getClearValidationEventName","once","submitForm","formEl","requestSubmit","invalidEls","querySelectorAll","resetForm","reset","associatedForm","findAssociatedForm","form","formComponentEl","formComponentRegisterEventName","hasRegisteredFormComponentParent","composedPath","some","has","stopPropagation","defaultValue","defaultChecked","checked","boundOnFormReset","onFormReset","bind","set","queryElementRoots","get","delete","internalHiddenInputInputEvent","hiddenInputInputHandler","removeHiddenInputChangeEventListener","input","defaultSyncHiddenFormInput","required","setAttribute","removeAttribute","syncHiddenFormInput","validationComponent","ownerDocument","inputs","extra","seen","Set","docFrag","valueMatch","find","val","pop","createElement","slot","createDocumentFragment","append","interceptedClick","HTMLElement","prototype","click","call","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","contains","document","activeElement","blur","blockInteraction","restoreInteraction","children","inert","labelClickEvent","labelConnectedEvent","labelDisconnectedEvent","labelTagName","labelToLabelables","onLabelClickMap","onLabelConnectedMap","onLabelDisconnectedMap","unlabeledComponents","findLabelForComponent","componentEl","forLabel","selector","parentLabel","traversedElements","customElementAncestorCheckEventType","listener","indexOf","ancestorCustomElements","filter","tagName","hasAncestorCustomElements","labelEl","boundOnLabelDisconnected","onLabelDisconnected","labelables","sort","sortByDOMOrder","labelable","a","b","isBefore","textContent","trim","labelClickTarget","detail","sourceEvent","clickedLabelable","firstLabelable","onLabelConnected","boundOnLabelConnected","associateExplicitLabelToUnlabeledComponent","forComponentEl","getElementById","for","resolveMap","promiseMap","componentLoaded","isBrowser","decimalNumberRegex","RegExp","parseInt","getDecimals","parseFloat","remap","fromMin","fromMax","toMin","toMax","closeToRangeEdge","threshold"],"sourceRoot":""}