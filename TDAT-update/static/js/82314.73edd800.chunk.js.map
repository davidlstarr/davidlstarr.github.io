{"version":3,"file":"static/js/82314.73edd800.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/color-picker/color-picker.scss?tag=calcite-color-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/color-picker/color-picker.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/color-picker-hex-input/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/color-picker-hex-input/color-picker-hex-input.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/color-picker-hex-input/color-picker-hex-input.scss?tag=calcite-color-picker-hex-input&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/color-picker-swatch/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/color-picker-swatch/color-picker-swatch.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/color-picker-swatch/color-picker-swatch.scss?tag=calcite-color-picker-swatch&encapsulation=shadow","../node_modules/@esri/calcite-components/node_modules/lodash-es/_freeGlobal.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_root.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_Symbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_getRawTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_objectToString.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseGetTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObjectLike.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isSymbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseTrim.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObject.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/toNumber.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/now.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/debounce.js","../node_modules/@esri/calcite-components/dist/esm/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/esm/src/utils/loadable.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/math.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/t9n.ts","../node_modules/@esri/calcite-components/node_modules/lodash-es/throttle.js"],"sourcesContent":[":host {\n  @apply text-n2h inline-block font-normal;\n}\n\n@include disabled();\n\n:host([scale=\"s\"]) {\n  --calcite-color-picker-spacing: 8px;\n\n  .container {\n    inline-size: 160px;\n  }\n\n  .saved-colors {\n    @apply gap-1;\n    grid-template-columns: repeat(auto-fill, 20px);\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-color-picker-spacing: 12px;\n\n  .container {\n    inline-size: 272px;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-color-picker-spacing: 16px;\n\n  @apply text-n1h;\n\n  .container {\n    inline-size: 464px;\n  }\n\n  .section {\n    &:first-of-type {\n      padding-block-start: var(--calcite-color-picker-spacing);\n    }\n  }\n\n  .saved-colors {\n    grid-template-columns: repeat(auto-fill, 32px);\n  }\n\n  .control-section {\n    @apply flex-nowrap items-baseline;\n  }\n\n  .control-section {\n    @apply flex-wrap;\n  }\n\n  .color-hex-options {\n    @apply flex\n      flex-shrink\n      flex-col\n      justify-around;\n  }\n\n  .color-mode-container {\n    flex-shrink: 3;\n  }\n}\n\n.container {\n  @apply bg-foreground-1;\n  display: inline-block;\n  border: 1px solid var(--calcite-color-border-1);\n}\n\n.control-and-scope {\n  @apply flex relative cursor-pointer touch-none;\n}\n\n.color-field,\n.control-and-scope {\n  user-select: none;\n}\n\n.scope {\n  @apply text-n1\n    focus-base\n    absolute\n    z-default\n    rounded-full\n    bg-transparent\n    w-px\n    h-px\n    pointer-events-none;\n  &:focus {\n    @apply focus-outset;\n    outline-offset: 6px;\n  }\n}\n\n.hex-and-channels-group {\n  @apply w-full;\n}\n\n.hex-and-channels-group,\n.control-section {\n  @apply flex flex-row flex-wrap;\n}\n\n.section {\n  padding-block: 0 var(--calcite-color-picker-spacing);\n  padding-inline: var(--calcite-color-picker-spacing);\n\n  &:first-of-type {\n    padding-block-start: var(--calcite-color-picker-spacing);\n  }\n}\n\n.sliders {\n  @apply flex flex-col justify-between;\n  margin-inline-start: var(--calcite-color-picker-spacing);\n  gap: var(--calcite-spacing-xxs);\n}\n\n.preview-and-sliders {\n  @apply flex items-center;\n  padding: var(--calcite-color-picker-spacing);\n}\n\n.color-hex-options,\n.section--split {\n  flex-grow: 1;\n}\n\n.header {\n  @apply text-color-1\n    flex\n    items-center\n    justify-between;\n}\n\n.color-mode-container {\n  padding-block-start: var(--calcite-color-picker-spacing);\n}\n\n.channels {\n  @apply flex gap-y-0.5;\n}\n\n.channel {\n  &[data-channel-index=\"3\"] {\n    inline-size: 159px;\n  }\n}\n\n:host([scale=\"s\"]) {\n  .channels {\n    @apply flex-wrap;\n  }\n\n  .channel {\n    flex-basis: 30%;\n    flex-grow: 1;\n\n    &[data-channel-index=\"3\"] {\n      inline-size: unset;\n      margin-inline-start: unset;\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  .channel {\n    &[data-channel-index=\"3\"] {\n      inline-size: 131px;\n    }\n  }\n}\n\n.saved-colors {\n  @apply grid gap-2;\n  padding-block-start: var(--calcite-color-picker-spacing);\n  grid-template-columns: repeat(auto-fill, 24px);\n}\n\n.saved-colors-buttons {\n  display: flex;\n}\n\n.saved-color {\n  @include focus-style-base();\n\n  cursor: pointer;\n\n  &:focus {\n    @include focus-style-outset();\n  }\n\n  &:hover {\n    transition: outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;\n    outline: 2px solid var(--calcite-color-border-2);\n    outline-offset: 2px;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport Color from \"color\";\nimport { throttle } from \"lodash-es\";\nimport {\n  Direction,\n  focusFirstTabbable,\n  getElementDir,\n  isPrimaryPointerButton,\n} from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n} from \"../../utils/locale\";\nimport { clamp, closeToRangeEdge, remap } from \"../../utils/math\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  alphaCompatible,\n  alphaToOpacity,\n  colorEqual,\n  CSSColorMode,\n  Format,\n  getSliderWidth,\n  hexify,\n  normalizeAlpha,\n  normalizeColor,\n  normalizeHex,\n  opacityToAlpha,\n  parseMode,\n  SupportedMode,\n  toAlphaMode,\n  toNonAlphaMode,\n} from \"./utils\";\nimport {\n  CSS,\n  DEFAULT_COLOR,\n  DEFAULT_STORAGE_KEY_PREFIX,\n  DIMENSIONS,\n  HSV_LIMITS,\n  HUE_LIMIT_CONSTRAINED,\n  OPACITY_LIMITS,\n  RGB_LIMITS,\n  SCOPE_SIZE,\n} from \"./resources\";\nimport { Channels, ColorMode, ColorValue, HSLA, HSVA, InternalColor, RGBA } from \"./interfaces\";\nimport { ColorPickerMessages } from \"./assets/color-picker/t9n\";\n\nconst throttleFor60FpsInMs = 16;\n\n@Component({\n  tag: \"calcite-color-picker\",\n  styleUrl: \"color-picker.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ColorPicker\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   *\n   * @deprecated Use `clearable` instead\n   */\n  @Prop({ reflect: true }) allowEmpty = false;\n\n  @Watch(\"allowEmpty\")\n  @Watch(\"clearable\")\n  handleAllowEmptyOrClearableChange(): void {\n    this.isClearable = this.clearable || this.allowEmpty;\n  }\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  @Watch(\"alphaChannel\")\n  handleAlphaChannelChange(alphaChannel: boolean): void {\n    const { format } = this;\n\n    if (alphaChannel && format !== \"auto\" && !alphaCompatible(format)) {\n      console.warn(\n        `ignoring alphaChannel as the current format (${format}) does not support alpha`,\n      );\n      this.alphaChannel = false;\n    }\n  }\n\n  @Watch(\"alphaChannel\")\n  @Watch(\"dimensions\")\n  handleAlphaChannelDimensionsChange(): void {\n    this.effectiveSliderWidth = getSliderWidth(this.dimensions, this.alphaChannel);\n    this.drawColorControls();\n  }\n\n  /** When `true`, hides the RGB/HSV channel inputs. */\n  @Prop() channelsDisabled = false;\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * Internal prop for advanced use-cases.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) color: InternalColor | null = DEFAULT_COLOR;\n\n  @Watch(\"color\")\n  handleColorChange(color: Color | null, oldColor: Color | null): void {\n    this.drawColorControls();\n    this.updateChannelsFromColor(color);\n    this.previousColor = oldColor;\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The format of `value`.\n   *\n   * When `\"auto\"`, the format will be inferred from `value` when set.\n   *\n   * @default \"auto\"\n   */\n  @Prop({ reflect: true }) format: Format = \"auto\";\n\n  @Watch(\"alphaChannel\")\n  @Watch(\"format\")\n  handleFormatOrAlphaChannelChange(): void {\n    this.setMode(this.format);\n    this.internalColorSet(this.color, false, \"internal\");\n  }\n\n  /**\n   * When `true`, hides the RGB/HSV channel inputs.\n   *\n   * @deprecated use `channelsDisabled` instead\n   */\n  @Prop({ reflect: true }) hideChannels = false;\n\n  /** When `true`, hides the hex input. */\n  @Prop() hexDisabled = false;\n\n  /**\n   * When `true`, hides the hex input.\n   *\n   * @deprecated use `hexDisabled` instead\n   */\n  @Prop({ reflect: true }) hideHex = false;\n\n  /**\n   * When `true`, hides the saved colors section.\n   *\n   * @deprecated use `savedDisabled` instead\n   */\n  @Prop({ reflect: true }) hideSaved = false;\n\n  /** When `true`, hides the saved colors section. */\n  @Prop({ reflect: true }) savedDisabled = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  handleScaleChange(scale: Scale = \"m\"): void {\n    this.updateDimensions(scale);\n    this.updateCanvasSize(\"all\");\n    this.drawColorControls();\n  }\n\n  /** Specifies the storage ID for colors. */\n  @Prop({ reflect: true }) storageId: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ColorPickerMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * The component's value, where the value can be a CSS color string, or a RGB, HSL or HSV object.\n   *\n   * The type will be preserved as the color is updated.\n   *\n   * @default \"#007ac2\"\n   * @see [CSS Color](https://developer.mozilla.org/en-US/docs/Web/CSS/color)\n   * @see [ColorValue](https://github.com/Esri/calcite-design-system/blob/dev/src/components/color-picker/interfaces.ts#L10)\n   */\n  @Prop({ mutable: true }) value: ColorValue | null = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: ColorValue | null, oldValue: ColorValue | null): void {\n    const { isClearable, format } = this;\n    const checkMode = !isClearable || value;\n    let modeChanged = false;\n\n    if (checkMode) {\n      const nextMode = parseMode(value);\n\n      if (!nextMode || (format !== \"auto\" && nextMode !== format)) {\n        this.showIncompatibleColorWarning(value, format);\n        this.value = oldValue;\n        return;\n      }\n\n      modeChanged = this.mode !== nextMode;\n      this.setMode(nextMode, this.internalColorUpdateContext === null);\n    }\n\n    const dragging = this.activeCanvasInfo;\n\n    if (this.internalColorUpdateContext === \"initial\") {\n      return;\n    }\n\n    if (this.internalColorUpdateContext === \"user-interaction\") {\n      this.calciteColorPickerInput.emit();\n\n      if (!dragging) {\n        this.calciteColorPickerChange.emit();\n      }\n      return;\n    }\n\n    const color =\n      isClearable && !value\n        ? null\n        : Color(\n            value != null && typeof value === \"object\" && alphaCompatible(this.mode)\n              ? normalizeColor(value as RGBA | HSVA | HSLA)\n              : value,\n          );\n    const colorChanged = !colorEqual(color, this.color);\n\n    if (modeChanged || colorChanged) {\n      this.internalColorSet(\n        color,\n        this.alphaChannel && !(this.mode.endsWith(\"a\") || this.mode.endsWith(\"a-css\")),\n        \"internal\",\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Internal State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerElement;\n\n  private activeCanvasInfo: {\n    context: CanvasRenderingContext2D;\n    bounds: DOMRect;\n  };\n\n  private get baseColorFieldColor(): Color {\n    return this.color || this.previousColor || DEFAULT_COLOR;\n  }\n\n  private checkerPattern: HTMLCanvasElement;\n\n  private colorFieldRenderingContext: CanvasRenderingContext2D;\n\n  private colorFieldScopeNode: HTMLDivElement;\n\n  private effectiveSliderWidth: number;\n\n  private hueSliderRenderingContext: CanvasRenderingContext2D;\n\n  private hueScopeNode: HTMLDivElement;\n\n  private internalColorUpdateContext: \"internal\" | \"initial\" | \"user-interaction\" | null = null;\n\n  private isActiveChannelInputEmpty: boolean = false;\n\n  private isClearable: boolean;\n\n  private mode: SupportedMode = CSSColorMode.HEX;\n\n  private opacityScopeNode: HTMLDivElement;\n\n  private opacitySliderRenderingContext: CanvasRenderingContext2D;\n\n  private previousColor: InternalColor | null;\n\n  private shiftKeyChannelAdjustment = 0;\n\n  private upOrDownArrowKeyTracker: \"down\" | \"up\" | null = null;\n\n  @State() channelMode: ColorMode = \"rgb\";\n\n  @State() channels: Channels = this.toChannels(DEFAULT_COLOR);\n\n  @State() defaultMessages: ColorPickerMessages;\n\n  @State() dimensions = DIMENSIONS.m;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ColorPickerMessages;\n\n  @State() savedColors: string[] = [];\n\n  @State() colorFieldScopeTop: number;\n\n  @State() colorFieldScopeLeft: number;\n\n  @State() hueScopeLeft: number;\n\n  @State() opacityScopeLeft: number;\n\n  @State() scopeOrientation: \"vertical\" | \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the color value has changed.\n   */\n  @Event({ cancelable: false }) calciteColorPickerChange: EventEmitter<void>;\n\n  /**\n   * Fires as the color value changes.\n   *\n   * Similar to the `calciteColorPickerChange` event with the exception of dragging. When dragging the color field or hue slider thumb, this event fires as the thumb is moved.\n   */\n  @Event({ cancelable: false }) calciteColorPickerInput: EventEmitter<void>;\n\n  private handleTabActivate = (event: Event): void => {\n    this.channelMode = (event.currentTarget as HTMLElement).getAttribute(\n      \"data-color-mode\",\n    ) as ColorMode;\n\n    this.updateChannelsFromColor(this.color);\n  };\n\n  private handleColorFieldScopeKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const arrowKeyToXYOffset = {\n      ArrowUp: { x: 0, y: -10 },\n      ArrowRight: { x: 10, y: 0 },\n      ArrowDown: { x: 0, y: 10 },\n      ArrowLeft: { x: -10, y: 0 },\n    };\n\n    if (arrowKeyToXYOffset[key]) {\n      event.preventDefault();\n      this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n      this.captureColorFieldColor(\n        this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0,\n        this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0,\n        false,\n      );\n    }\n  };\n\n  private handleHueScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 1,\n      ArrowRight: 1,\n      ArrowDown: -1,\n      ArrowLeft: -1,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const hue = this.baseColorFieldColor.hue();\n      const color = this.baseColorFieldColor.hue(hue + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private handleHexInputChange = (event: Event): void => {\n    event.stopPropagation();\n    const { isClearable, color } = this;\n    const input = event.target as HTMLCalciteColorPickerHexInputElement;\n    const hex = input.value;\n\n    if (isClearable && !hex) {\n      this.internalColorSet(null);\n      return;\n    }\n\n    const normalizedHex = color && normalizeHex(hexify(color, alphaCompatible(this.mode)));\n\n    if (hex !== normalizedHex) {\n      this.internalColorSet(Color(hex));\n    }\n  };\n\n  private handleSavedColorSelect = (event: Event): void => {\n    const swatch = event.currentTarget as HTMLCalciteColorPickerSwatchElement;\n    this.internalColorSet(Color(swatch.color));\n  };\n\n  private handleChannelInput = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const isAlphaChannel = channelIndex === 3;\n\n    const limit = isAlphaChannel\n      ? OPACITY_LIMITS.max\n      : this.channelMode === \"rgb\"\n        ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n        : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n\n    let inputValue: string;\n\n    if (!input.value) {\n      inputValue = \"\";\n      this.isActiveChannelInputEmpty = true;\n      // reset this to allow typing in new value, when channel input is cleared after ArrowUp or ArrowDown have been pressed\n      this.upOrDownArrowKeyTracker = null;\n    } else {\n      const value = Number(input.value);\n      const adjustedValue = value + this.shiftKeyChannelAdjustment;\n      const clamped = clamp(adjustedValue, 0, limit);\n\n      inputValue = clamped.toString();\n    }\n\n    input.value = inputValue;\n\n    if (inputValue !== \"\" && this.shiftKeyChannelAdjustment !== 0) {\n      // we treat nudging as a change event since the input won't emit when modifying the value directly\n      this.handleChannelChange(event);\n    } else if (inputValue !== \"\") {\n      this.handleChannelChange(event);\n    }\n  };\n\n  private handleChannelBlur = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels] as this[\"channels\"];\n    const restoreValueDueToEmptyInput = !input.value && !this.isClearable;\n\n    if (restoreValueDueToEmptyInput) {\n      input.value = channels[channelIndex]?.toString();\n    }\n  };\n\n  handleChannelFocus = (event: Event): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    input.selectText();\n  };\n\n  // using @Listen as a workaround for VDOM listener not firing\n  @Listen(\"keydown\", { capture: true })\n  @Listen(\"keyup\", { capture: true })\n  protected handleChannelKeyUpOrDown(event: KeyboardEvent): void {\n    this.shiftKeyChannelAdjustment = 0;\n    const { key } = event;\n\n    if (\n      (key !== \"ArrowUp\" && key !== \"ArrowDown\") ||\n      !event.composedPath().some((node: HTMLElement) => node.classList?.contains(CSS.channel))\n    ) {\n      return;\n    }\n\n    const { shiftKey } = event;\n    event.preventDefault();\n\n    if (!this.color) {\n      this.internalColorSet(this.previousColor);\n      event.stopPropagation();\n      return;\n    }\n\n    // this gets applied to the input's up/down arrow increment/decrement\n    const complementaryBump = 9;\n\n    this.shiftKeyChannelAdjustment =\n      key === \"ArrowUp\" && shiftKey\n        ? complementaryBump\n        : key === \"ArrowDown\" && shiftKey\n          ? -complementaryBump\n          : 0;\n\n    if (key === \"ArrowUp\") {\n      this.upOrDownArrowKeyTracker = \"up\";\n    }\n    if (key === \"ArrowDown\") {\n      this.upOrDownArrowKeyTracker = \"down\";\n    }\n  }\n\n  private getChannelInputLimit(channelIndex: number): number {\n    return this.channelMode === \"rgb\"\n      ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n      : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n  }\n\n  private handleChannelChange = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels] as this[\"channels\"];\n\n    const shouldClearChannels = this.isClearable && !input.value;\n\n    if (shouldClearChannels) {\n      this.channels = [null, null, null, null];\n      this.internalColorSet(null);\n      return;\n    }\n\n    const isAlphaChannel = channelIndex === 3;\n\n    if (this.isActiveChannelInputEmpty && this.upOrDownArrowKeyTracker) {\n      input.value =\n        this.upOrDownArrowKeyTracker === \"up\"\n          ? (channels[channelIndex] + 1 <= this.getChannelInputLimit(channelIndex)\n              ? channels[channelIndex] + 1\n              : this.getChannelInputLimit(channelIndex)\n            ).toString()\n          : (channels[channelIndex] - 1 >= 0 ? channels[channelIndex] - 1 : 0).toString();\n      this.isActiveChannelInputEmpty = false;\n      this.upOrDownArrowKeyTracker = null;\n    }\n    const value = input.value ? Number(input.value) : channels[channelIndex];\n\n    channels[channelIndex] = isAlphaChannel ? opacityToAlpha(value) : value;\n    this.updateColorFromChannels(channels);\n  };\n\n  private handleSavedColorKeyDown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.handleSavedColorSelect(event);\n    }\n  };\n\n  private handleColorFieldPointerDown = (event: PointerEvent): void => {\n    this.handleCanvasControlPointerDown(\n      event,\n      this.colorFieldRenderingContext,\n      this.captureColorFieldColor,\n      this.colorFieldScopeNode,\n    );\n  };\n\n  private focusScope(focusEl: HTMLElement): void {\n    requestAnimationFrame(() => {\n      focusEl.focus();\n    });\n  }\n\n  private handleHueSliderPointerDown = (event: PointerEvent): void => {\n    this.handleCanvasControlPointerDown(\n      event,\n      this.hueSliderRenderingContext,\n      this.captureHueSliderColor,\n      this.hueScopeNode,\n    );\n  };\n\n  private handleOpacitySliderPointerDown = (event: PointerEvent): void => {\n    this.handleCanvasControlPointerDown(\n      event,\n      this.opacitySliderRenderingContext,\n      this.captureOpacitySliderValue,\n      this.opacityScopeNode,\n    );\n  };\n\n  private handleCanvasControlPointerDown(\n    event: PointerEvent,\n    renderingContext: CanvasRenderingContext2D,\n    captureValue: (offsetX: number, offsetY?: number) => void,\n    scopeNode: HTMLElement,\n  ): void {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: renderingContext,\n      bounds: renderingContext.canvas.getBoundingClientRect(),\n    };\n\n    captureValue.call(this, event.offsetX, event.offsetY);\n    this.focusScope(scopeNode);\n  }\n\n  private globalPointerUpHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const previouslyDragging = this.activeCanvasInfo;\n    this.activeCanvasInfo = null;\n    this.drawColorControls();\n\n    if (previouslyDragging) {\n      this.calciteColorPickerChange.emit();\n    }\n  };\n\n  private globalPointerMoveHandler = (event: PointerEvent): void => {\n    const { activeCanvasInfo, el } = this;\n\n    if (!el.isConnected || !activeCanvasInfo) {\n      return;\n    }\n\n    const { context, bounds } = activeCanvasInfo;\n\n    let samplingX: number;\n    let samplingY: number;\n\n    const { clientX, clientY } = event;\n\n    if (context.canvas.matches(\":hover\")) {\n      samplingX = clientX - bounds.x;\n      samplingY = clientY - bounds.y;\n    } else {\n      // snap x and y to the closest edge\n\n      if (clientX < bounds.x + bounds.width && clientX > bounds.x) {\n        samplingX = clientX - bounds.x;\n      } else if (clientX < bounds.x) {\n        samplingX = 0;\n      } else {\n        samplingX = bounds.width;\n      }\n\n      if (clientY < bounds.y + bounds.height && clientY > bounds.y) {\n        samplingY = clientY - bounds.y;\n      } else if (clientY < bounds.y) {\n        samplingY = 0;\n      } else {\n        samplingY = bounds.height;\n      }\n    }\n\n    if (context === this.colorFieldRenderingContext) {\n      this.captureColorFieldColor(samplingX, samplingY, false);\n    } else if (context === this.hueSliderRenderingContext) {\n      this.captureHueSliderColor(samplingX);\n    } else if (context === this.opacitySliderRenderingContext) {\n      this.captureOpacitySliderValue(samplingX);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusFirstTabbable(this.el);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n\n    this.handleAllowEmptyOrClearableChange();\n    this.handleAlphaChannelDimensionsChange();\n\n    const { isClearable, color, format, value } = this;\n    const willSetNoColor = isClearable && !value;\n    const parsedMode = parseMode(value);\n    const valueIsCompatible =\n      willSetNoColor || (format === \"auto\" && parsedMode) || format === parsedMode;\n    const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n\n    if (!valueIsCompatible) {\n      this.showIncompatibleColorWarning(value, format);\n    }\n    this.setMode(format, false);\n    this.internalColorSet(initialColor, false, \"initial\");\n\n    this.updateDimensions(this.scale);\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId && localStorage.getItem(storageKey)) {\n      this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n    }\n\n    await setUpMessages(this);\n  }\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    window.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      channelsDisabled,\n      color,\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n      dimensions: {\n        thumb: { radius: thumbRadius },\n      },\n      hexDisabled,\n      hideChannels,\n      hideHex,\n      hideSaved,\n      hueScopeLeft,\n      messages,\n      alphaChannel,\n      opacityScopeLeft,\n      savedColors,\n      savedDisabled,\n      scale,\n      scopeOrientation,\n    } = this;\n\n    const sliderWidth = this.effectiveSliderWidth;\n    const selectedColorInHex = color ? hexify(color, alphaChannel) : null;\n    const hueTop = thumbRadius;\n    const hueLeft = hueScopeLeft ?? (sliderWidth * DEFAULT_COLOR.hue()) / HSV_LIMITS.h;\n    const opacityTop = thumbRadius;\n    const opacityLeft =\n      opacityScopeLeft ??\n      (sliderWidth * alphaToOpacity(DEFAULT_COLOR.alpha())) / OPACITY_LIMITS.max;\n    const noColor = color === null;\n    const vertical = scopeOrientation === \"vertical\";\n    const noHex = hexDisabled || hideHex;\n    const noChannels = channelsDisabled || hideChannels;\n    const noSaved = savedDisabled || hideSaved;\n    const [adjustedColorFieldScopeLeft, adjustedColorFieldScopeTop] = this.getAdjustedScopePosition(\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n    );\n    const [adjustedHueScopeLeft, adjustedHueScopeTop] = this.getAdjustedScopePosition(\n      hueLeft,\n      hueTop,\n    );\n    const [adjustedOpacityScopeLeft, adjustedOpacityScopeTop] = this.getAdjustedScopePosition(\n      opacityLeft,\n      opacityTop,\n    );\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div class={CSS.container}>\n          <div class={CSS.controlAndScope}>\n            <canvas\n              class={CSS.colorField}\n              onPointerDown={this.handleColorFieldPointerDown}\n              ref={this.initColorField}\n            />\n            <div\n              aria-label={vertical ? messages.value : messages.saturation}\n              aria-valuemax={vertical ? HSV_LIMITS.v : HSV_LIMITS.s}\n              aria-valuemin=\"0\"\n              aria-valuenow={(vertical ? color?.saturationv() : color?.value()) || \"0\"}\n              class={{ [CSS.scope]: true, [CSS.colorFieldScope]: true }}\n              onKeyDown={this.handleColorFieldScopeKeyDown}\n              ref={this.storeColorFieldScope}\n              role=\"slider\"\n              style={{\n                top: `${adjustedColorFieldScopeTop || 0}px`,\n                left: `${adjustedColorFieldScopeLeft || 0}px`,\n              }}\n              tabindex=\"0\"\n            />\n          </div>\n          <div class={CSS.previewAndSliders}>\n            <calcite-color-picker-swatch\n              class={CSS.preview}\n              color={selectedColorInHex}\n              scale={this.alphaChannel ? \"l\" : this.scale}\n            />\n            <div class={CSS.sliders}>\n              <div class={CSS.controlAndScope}>\n                <canvas\n                  class={{ [CSS.slider]: true, [CSS.hueSlider]: true }}\n                  onPointerDown={this.handleHueSliderPointerDown}\n                  ref={this.initHueSlider}\n                />\n                <div\n                  aria-label={messages.hue}\n                  aria-valuemax={HSV_LIMITS.h}\n                  aria-valuemin=\"0\"\n                  aria-valuenow={color?.round().hue() || DEFAULT_COLOR.round().hue()}\n                  class={{ [CSS.scope]: true, [CSS.hueScope]: true }}\n                  onKeyDown={this.handleHueScopeKeyDown}\n                  ref={this.storeHueScope}\n                  role=\"slider\"\n                  style={{\n                    top: `${adjustedHueScopeTop}px`,\n                    left: `${adjustedHueScopeLeft}px`,\n                  }}\n                  tabindex=\"0\"\n                />\n              </div>\n              {alphaChannel ? (\n                <div class={CSS.controlAndScope}>\n                  <canvas\n                    class={{ [CSS.slider]: true, [CSS.opacitySlider]: true }}\n                    onPointerDown={this.handleOpacitySliderPointerDown}\n                    ref={this.initOpacitySlider}\n                  />\n                  <div\n                    aria-label={messages.opacity}\n                    aria-valuemax={OPACITY_LIMITS.max}\n                    aria-valuemin={OPACITY_LIMITS.min}\n                    aria-valuenow={(color || DEFAULT_COLOR).round().alpha()}\n                    class={{ [CSS.scope]: true, [CSS.opacityScope]: true }}\n                    onKeyDown={this.handleOpacityScopeKeyDown}\n                    ref={this.storeOpacityScope}\n                    role=\"slider\"\n                    style={{\n                      top: `${adjustedOpacityScopeTop}px`,\n                      left: `${adjustedOpacityScopeLeft}px`,\n                    }}\n                    tabindex=\"0\"\n                  />\n                </div>\n              ) : null}\n            </div>\n          </div>\n          {noHex && noChannels ? null : (\n            <div\n              class={{\n                [CSS.controlSection]: true,\n                [CSS.section]: true,\n              }}\n            >\n              <div class={CSS.hexAndChannelsGroup}>\n                {noHex ? null : (\n                  <div class={CSS.hexOptions}>\n                    <calcite-color-picker-hex-input\n                      allowEmpty={this.isClearable}\n                      alphaChannel={alphaChannel}\n                      class={CSS.control}\n                      messages={messages}\n                      numberingSystem={this.numberingSystem}\n                      onCalciteColorPickerHexInputChange={this.handleHexInputChange}\n                      scale={scale}\n                      value={selectedColorInHex}\n                    />\n                  </div>\n                )}\n                {noChannels ? null : (\n                  <calcite-tabs\n                    class={{\n                      [CSS.colorModeContainer]: true,\n                      [CSS.splitSection]: true,\n                    }}\n                    scale={scale === \"l\" ? \"m\" : \"s\"}\n                  >\n                    <calcite-tab-nav slot=\"title-group\">\n                      {this.renderChannelsTabTitle(\"rgb\")}\n                      {this.renderChannelsTabTitle(\"hsv\")}\n                    </calcite-tab-nav>\n                    {this.renderChannelsTab(\"rgb\")}\n                    {this.renderChannelsTab(\"hsv\")}\n                  </calcite-tabs>\n                )}\n              </div>\n            </div>\n          )}\n          {noSaved ? null : (\n            <div class={{ [CSS.savedColorsSection]: true, [CSS.section]: true }}>\n              <div class={CSS.header}>\n                <label>{messages.saved}</label>\n                <div class={CSS.savedColorsButtons}>\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.deleteColor}\n                    disabled={noColor}\n                    iconStart=\"minus\"\n                    kind=\"neutral\"\n                    label={messages.deleteColor}\n                    onClick={this.deleteColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.saveColor}\n                    disabled={noColor}\n                    iconStart=\"plus\"\n                    kind=\"neutral\"\n                    label={messages.saveColor}\n                    onClick={this.saveColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                </div>\n              </div>\n              {savedColors.length > 0 ? (\n                <div class={CSS.savedColors}>\n                  {[\n                    ...savedColors.map((color) => (\n                      <calcite-color-picker-swatch\n                        class={CSS.savedColor}\n                        color={color}\n                        key={color}\n                        onClick={this.handleSavedColorSelect}\n                        onKeyDown={this.handleSavedColorKeyDown}\n                        scale={scale}\n                        tabIndex={0}\n                      />\n                    )),\n                  ]}\n                </div>\n              ) : null}\n            </div>\n          )}\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  private storeColorFieldScope = (node: HTMLDivElement): void => {\n    this.colorFieldScopeNode = node;\n  };\n\n  private storeHueScope = (node: HTMLDivElement): void => {\n    this.hueScopeNode = node;\n  };\n\n  private renderChannelsTabTitle = (channelMode: this[\"channelMode\"]): VNode => {\n    const { channelMode: activeChannelMode, messages } = this;\n    const selected = channelMode === activeChannelMode;\n    const label = channelMode === \"rgb\" ? messages.rgb : messages.hsv;\n\n    return (\n      <calcite-tab-title\n        class={CSS.colorMode}\n        data-color-mode={channelMode}\n        key={channelMode}\n        onCalciteTabsActivate={this.handleTabActivate}\n        selected={selected}\n      >\n        {label}\n      </calcite-tab-title>\n    );\n  };\n\n  private renderChannelsTab = (channelMode: this[\"channelMode\"]): VNode => {\n    const { isClearable, channelMode: activeChannelMode, channels, messages, alphaChannel } = this;\n    const selected = channelMode === activeChannelMode;\n    const isRgb = channelMode === \"rgb\";\n    const channelAriaLabels = isRgb\n      ? [messages.red, messages.green, messages.blue]\n      : [messages.hue, messages.saturation, messages.value];\n    const direction = getElementDir(this.el);\n    const channelsToRender = alphaChannel ? channels : channels.slice(0, 3);\n\n    return (\n      <calcite-tab class={CSS.control} key={channelMode} selected={selected}>\n        {/* channel order should not be mirrored */}\n        <div class={CSS.channels} dir=\"ltr\">\n          {channelsToRender.map((channelValue, index) => {\n            const isAlphaChannel = index === 3;\n\n            if (isAlphaChannel) {\n              channelValue =\n                isClearable && !channelValue ? channelValue : alphaToOpacity(channelValue);\n            }\n\n            /* the channel container is ltr, so we apply the host's direction */\n            return this.renderChannel(\n              channelValue,\n              index,\n              channelAriaLabels[index],\n              direction,\n              isAlphaChannel ? \"%\" : \"\",\n            );\n          })}\n        </div>\n      </calcite-tab>\n    );\n  };\n\n  private renderChannel = (\n    value: number | null,\n    index: number,\n    ariaLabel: string,\n    direction: Direction,\n    suffix?: string,\n  ): VNode => {\n    return (\n      <calcite-input-number\n        class={CSS.channel}\n        data-channel-index={index}\n        dir={direction}\n        key={index}\n        label={ariaLabel}\n        lang={this.effectiveLocale}\n        numberButtonType=\"none\"\n        numberingSystem={this.numberingSystem}\n        onCalciteInputNumberChange={this.handleChannelChange}\n        onCalciteInputNumberInput={this.handleChannelInput}\n        onCalciteInternalInputNumberBlur={this.handleChannelBlur}\n        onCalciteInternalInputNumberFocus={this.handleChannelFocus}\n        onKeyDown={this.handleKeyDown}\n        scale={this.scale === \"l\" ? \"m\" : \"s\"}\n        // workaround to ensure input borders overlap as desired\n        // this is because the build transforms margin-left to its\n        // logical-prop, which is undesired as channels are always ltr\n        style={{\n          marginLeft:\n            index > 0 && !(this.scale === \"s\" && this.alphaChannel && index === 3) ? \"-1px\" : \"\",\n        }}\n        suffixText={suffix}\n        value={value?.toString()}\n      />\n    );\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  handleKeyDown(event: KeyboardEvent): void {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  private showIncompatibleColorWarning(value: ColorValue, format: Format): void {\n    console.warn(\n      `ignoring color value (${value}) as it is not compatible with the current format (${format})`,\n    );\n  }\n\n  private setMode(format: ColorPicker[\"format\"], warn = true): void {\n    const mode = format === \"auto\" ? this.mode : format;\n    this.mode = this.ensureCompatibleMode(mode, warn);\n  }\n\n  private ensureCompatibleMode(mode: SupportedMode, warn): SupportedMode {\n    const { alphaChannel } = this;\n    const isAlphaCompatible = alphaCompatible(mode);\n\n    if (alphaChannel && !isAlphaCompatible) {\n      const alphaMode = toAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${alphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return alphaMode;\n    }\n\n    if (!alphaChannel && isAlphaCompatible) {\n      const nonAlphaMode = toNonAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${nonAlphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return nonAlphaMode;\n    }\n\n    return mode;\n  }\n\n  private captureHueSliderColor(x: number): void {\n    const hue = (HUE_LIMIT_CONSTRAINED / this.effectiveSliderWidth) * x;\n\n    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n  }\n\n  private captureOpacitySliderValue(x: number): void {\n    const alpha = opacityToAlpha((OPACITY_LIMITS.max / this.effectiveSliderWidth) * x);\n\n    this.internalColorSet(this.baseColorFieldColor.alpha(alpha), false);\n  }\n\n  private internalColorSet(\n    color: Color | null,\n    skipEqual = true,\n    context: ColorPicker[\"internalColorUpdateContext\"] = \"user-interaction\",\n  ): void {\n    if (skipEqual && colorEqual(color, this.color)) {\n      return;\n    }\n\n    this.internalColorUpdateContext = context;\n    this.color = color;\n    this.value = this.toValue(color);\n    this.internalColorUpdateContext = null;\n  }\n\n  private toValue(color: Color | null, format: SupportedMode = this.mode): ColorValue | null {\n    if (!color) {\n      return null;\n    }\n\n    const hexMode = \"hex\";\n\n    if (format.includes(hexMode)) {\n      const hasAlpha = format === CSSColorMode.HEXA;\n      return normalizeHex(hexify(color.round(), hasAlpha), hasAlpha);\n    }\n\n    if (format.includes(\"-css\")) {\n      const value = color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n\n      // Color omits alpha values when alpha is 1\n      const needToInjectAlpha =\n        (format.endsWith(\"a\") || format.endsWith(\"a-css\")) && color.alpha() === 1;\n      if (needToInjectAlpha) {\n        const model = value.slice(0, 3);\n        const values = value.slice(4, -1);\n        return `${model}a(${values}, ${color.alpha()})`;\n      }\n\n      return value;\n    }\n\n    const colorObject =\n      /* Color() does not support hsva, hsla nor rgba, so we use the non-alpha mode */\n      color[toNonAlphaMode(format)]().round().object();\n\n    if (format.endsWith(\"a\")) {\n      return normalizeAlpha(colorObject);\n    }\n\n    return colorObject;\n  }\n\n  private getSliderCapSpacing(): number {\n    const {\n      dimensions: {\n        slider: { height },\n        thumb: { radius },\n      },\n    } = this;\n\n    return radius * 2 - height;\n  }\n\n  private updateDimensions(scale: Scale = \"m\"): void {\n    this.dimensions = DIMENSIONS[scale];\n  }\n\n  private deleteColor = (): void => {\n    const colorToDelete = hexify(this.color, this.alphaChannel);\n    const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n\n    if (!inStorage) {\n      return;\n    }\n\n    const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private saveColor = (): void => {\n    const colorToSave = hexify(this.color, this.alphaChannel);\n    const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n\n    if (alreadySaved) {\n      return;\n    }\n\n    const savedColors = [...this.savedColors, colorToSave];\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private drawColorControls = throttle(\n    (type: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\"): void => {\n      if ((type === \"all\" || type === \"color-field\") && this.colorFieldRenderingContext) {\n        this.drawColorField();\n      }\n\n      if ((type === \"all\" || type === \"hue-slider\") && this.hueSliderRenderingContext) {\n        this.drawHueSlider();\n      }\n\n      if (\n        this.alphaChannel &&\n        (type === \"all\" || type === \"opacity-slider\") &&\n        this.opacitySliderRenderingContext\n      ) {\n        this.drawOpacitySlider();\n      }\n    },\n    throttleFor60FpsInMs,\n  );\n\n  private drawColorField(): void {\n    const context = this.colorFieldRenderingContext;\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n\n    context.fillStyle = this.baseColorFieldColor\n      .hsv()\n      .saturationv(100)\n      .value(100)\n      .alpha(1)\n      .string();\n    context.fillRect(0, 0, width, height);\n\n    const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n    whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n    whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    context.fillStyle = whiteGradient;\n    context.fillRect(0, 0, width, height);\n\n    const blackGradient = context.createLinearGradient(0, 0, 0, height);\n    blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n    blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n    context.fillStyle = blackGradient;\n    context.fillRect(0, 0, width, height);\n\n    this.drawActiveColorFieldColor();\n  }\n\n  private setCanvasContextSize(\n    canvas: HTMLCanvasElement,\n    { height, width }: { height: number; width: number },\n  ): void {\n    if (!canvas) {\n      return;\n    }\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.height = `${height}px`;\n    canvas.style.width = `${width}px`;\n\n    const context = canvas.getContext(\"2d\");\n    context.scale(devicePixelRatio, devicePixelRatio);\n  }\n\n  private captureColorFieldColor = (x: number, y: number, skipEqual = true): void => {\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n    const saturation = Math.round((HSV_LIMITS.s / width) * x);\n    const value = Math.round((HSV_LIMITS.v / height) * (height - y));\n\n    this.internalColorSet(\n      this.baseColorFieldColor.hsv().saturationv(saturation).value(value),\n      skipEqual,\n    );\n  };\n\n  private initColorField = (canvas: HTMLCanvasElement): void => {\n    this.colorFieldRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"color-field\");\n    this.drawColorControls();\n  };\n\n  private initHueSlider = (canvas: HTMLCanvasElement): void => {\n    this.hueSliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"hue-slider\");\n    this.drawHueSlider();\n  };\n\n  private initOpacitySlider = (canvas: HTMLCanvasElement): void => {\n    if (!canvas) {\n      return;\n    }\n\n    this.opacitySliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"opacity-slider\");\n    this.drawOpacitySlider();\n  };\n\n  private updateCanvasSize(\n    context: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\",\n  ): void {\n    const { dimensions } = this;\n\n    if (context === \"all\" || context === \"color-field\") {\n      this.setCanvasContextSize(this.colorFieldRenderingContext?.canvas, dimensions.colorField);\n    }\n\n    const adjustedSliderDimensions = {\n      width: this.effectiveSliderWidth,\n      height:\n        dimensions.slider.height + (dimensions.thumb.radius - dimensions.slider.height / 2) * 2,\n    };\n\n    if (context === \"all\" || context === \"hue-slider\") {\n      this.setCanvasContextSize(this.hueSliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n\n    if (context === \"all\" || context === \"opacity-slider\") {\n      this.setCanvasContextSize(\n        this.opacitySliderRenderingContext?.canvas,\n        adjustedSliderDimensions,\n      );\n    }\n  }\n\n  private drawActiveColorFieldColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv();\n\n    const {\n      dimensions: {\n        colorField: { height, width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n\n    requestAnimationFrame(() => {\n      this.colorFieldScopeLeft = x;\n      this.colorFieldScopeTop = y;\n    });\n\n    this.drawThumb(this.colorFieldRenderingContext, radius, x, y, hsvColor, false);\n  }\n\n  private drawThumb(\n    context: CanvasRenderingContext2D,\n    radius: number,\n    x: number,\n    y: number,\n    color: Color,\n    applyAlpha: boolean,\n  ): void {\n    const startAngle = 0;\n    const endAngle = 2 * Math.PI;\n    const outlineWidth = 1;\n\n    context.beginPath();\n    context.arc(x, y, radius, startAngle, endAngle);\n    context.fillStyle = \"#fff\";\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = outlineWidth;\n    context.stroke();\n\n    if (applyAlpha && color.alpha() < 1) {\n      const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n      context.beginPath();\n      context.arc(x, y, radius - 3, startAngle, endAngle);\n      context.fillStyle = pattern;\n      context.fill();\n    }\n\n    context.globalCompositeOperation = \"source-atop\";\n\n    context.beginPath();\n    context.arc(x, y, radius - 3, startAngle, endAngle);\n    const alpha = applyAlpha ? color.alpha() : 1;\n    context.fillStyle = color.rgb().alpha(alpha).string();\n    context.fill();\n\n    context.globalCompositeOperation = \"source-over\";\n  }\n\n  private drawActiveHueSliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv().saturationv(100).value(100);\n\n    const {\n      dimensions: {\n        thumb: { radius },\n      },\n    } = this;\n\n    const width = this.effectiveSliderWidth;\n    const x = hsvColor.hue() / (HUE_LIMIT_CONSTRAINED / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.hueScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.hueSliderRenderingContext, radius, sliderBoundX, y, hsvColor, false);\n  }\n\n  private drawHueSlider(): void {\n    const context = this.hueSliderRenderingContext;\n    const {\n      dimensions: {\n        slider: { height },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n    const width = this.effectiveSliderWidth;\n\n    const gradient = context.createLinearGradient(0, 0, width, 0);\n\n    const hueSliderColorStopKeywords = [\n      \"red\",\n      \"yellow\",\n      \"lime\",\n      \"cyan\",\n      \"blue\",\n      \"magenta\",\n      \"#ff0004\" /* 1 unit less than #ff0 to avoid duplicate values within range */,\n    ];\n\n    const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n    let currentOffset = 0;\n\n    hueSliderColorStopKeywords.forEach((keyword) => {\n      gradient.addColorStop(currentOffset, Color(keyword).string());\n      currentOffset += offset;\n    });\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveHueSliderColor();\n  }\n\n  private drawOpacitySlider(): void {\n    const context = this.opacitySliderRenderingContext;\n    const {\n      baseColorFieldColor: previousColor,\n      dimensions: {\n        slider: { height },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n    const width = this.effectiveSliderWidth;\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    const gradient = context.createLinearGradient(0, y, width, 0);\n    const startColor = previousColor.rgb().alpha(0);\n    const midColor = previousColor.rgb().alpha(0.5);\n    const endColor = previousColor.rgb().alpha(1);\n\n    gradient.addColorStop(0, startColor.string());\n    gradient.addColorStop(0.5, midColor.string());\n    gradient.addColorStop(1, endColor.string());\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n    context.fillStyle = pattern;\n    context.fill();\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveOpacitySliderColor();\n  }\n\n  private drawSliderPath(\n    context: CanvasRenderingContext2D,\n    height: number,\n    width: number,\n    x: number,\n    y: number,\n  ): void {\n    const radius = height / 2 + 1;\n    context.beginPath();\n    context.moveTo(x + radius, y);\n    context.lineTo(x + width - radius, y);\n    context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    context.lineTo(x + width, y + height - radius);\n    context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    context.lineTo(x + radius, y + height);\n    context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    context.lineTo(x, y + radius);\n    context.quadraticCurveTo(x, y, x + radius, y);\n    context.closePath();\n  }\n\n  private getCheckeredBackgroundPattern(): HTMLCanvasElement {\n    if (this.checkerPattern) {\n      return this.checkerPattern;\n    }\n\n    const pattern = document.createElement(\"canvas\");\n    pattern.width = 10;\n    pattern.height = 10;\n    const patternContext = pattern.getContext(\"2d\");\n\n    patternContext.fillStyle = \"#ccc\";\n    patternContext.fillRect(0, 0, 10, 10);\n    patternContext.fillStyle = \"#fff\";\n    patternContext.fillRect(0, 0, 5, 5);\n    patternContext.fillRect(5, 5, 5, 5);\n\n    this.checkerPattern = pattern;\n\n    return pattern;\n  }\n\n  private drawActiveOpacitySliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color;\n\n    const {\n      dimensions: {\n        thumb: { radius },\n      },\n    } = this;\n\n    const width = this.effectiveSliderWidth;\n    const x = alphaToOpacity(hsvColor.alpha()) / (OPACITY_LIMITS.max / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.opacityScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.opacitySliderRenderingContext, radius, sliderBoundX, y, hsvColor, true);\n  }\n\n  private getSliderBoundX(x: number, width: number, radius: number): number {\n    const closeToEdge = closeToRangeEdge(x, width, radius);\n\n    return closeToEdge === 0\n      ? x\n      : closeToEdge === -1\n        ? remap(x, 0, width, radius, radius * 2)\n        : remap(x, 0, width, width - radius * 2, width - radius);\n  }\n\n  private storeOpacityScope = (node: HTMLDivElement): void => {\n    this.opacityScopeNode = node;\n  };\n\n  private handleOpacityScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 0.01,\n      ArrowRight: 0.01,\n      ArrowDown: -0.01,\n      ArrowLeft: -0.01,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const alpha = this.baseColorFieldColor.alpha();\n      const color = this.baseColorFieldColor.alpha(alpha + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private updateColorFromChannels(channels: this[\"channels\"]): void {\n    this.internalColorSet(Color(channels, this.channelMode));\n  }\n\n  private updateChannelsFromColor(color: Color | null): void {\n    this.channels = color ? this.toChannels(color) : [null, null, null, null];\n  }\n\n  private toChannels(color: Color): Channels {\n    const { channelMode } = this;\n\n    const channels = color[channelMode]()\n      .array()\n      .map((value, index) => {\n        const isAlpha = index === 3;\n        return isAlpha ? value : Math.floor(value);\n      });\n\n    if (channels.length === 3) {\n      channels.push(1); // Color omits alpha when 1\n    }\n\n    return channels as Channels;\n  }\n\n  private getAdjustedScopePosition(left: number, top: number): [number, number] {\n    return [left - SCOPE_SIZE / 2, top - SCOPE_SIZE / 2];\n  }\n}\n","export const CSS = {\n  container: \"container\",\n  hexInput: \"hex-input\",\n  opacityInput: \"opacity-input\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport Color from \"color\";\nimport { Scale } from \"../interfaces\";\nimport { Channels, RGB } from \"../color-picker/interfaces\";\nimport {\n  alphaToOpacity,\n  hexChar,\n  hexify,\n  isLonghandHex,\n  isShorthandHex,\n  isValidHex,\n  normalizeHex,\n  opacityToAlpha,\n  rgbToHex,\n} from \"../color-picker/utils\";\nimport { focusElement } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { NumberingSystem } from \"../../utils/locale\";\nimport { OPACITY_LIMITS } from \"../color-picker/resources\";\nimport { ColorPickerMessages } from \"../color-picker/assets/color-picker/t9n\";\nimport { CSS } from \"./resources\";\n\nconst DEFAULT_COLOR = Color();\n\n@Component({\n  tag: \"calcite-color-picker-hex-input\",\n  styleUrl: \"color-picker-hex-input.scss\",\n  shadow: true,\n})\nexport class ColorPickerHexInput implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    const { allowEmpty, alphaChannel, value } = this;\n\n    if (value) {\n      const normalized = normalizeHex(value, alphaChannel);\n\n      if (isValidHex(normalized, alphaChannel)) {\n        this.internalSetValue(normalized, normalized, false);\n      }\n\n      return;\n    }\n\n    if (allowEmpty) {\n      this.internalSetValue(null, null, false);\n    }\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop() allowEmpty = false;\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  /**\n   * Specifies accessible label for the input field.\n   *\n   * @deprecated use `messages` instead\n   */\n  @Prop() hexLabel = \"Hex\";\n\n  /**\n   * Messages are passed by parent component for accessible labels.\n   *\n   * @internal\n   */\n  @Prop() messages: ColorPickerMessages;\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop() numberingSystem?: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * The hex value.\n   */\n  @Prop({ mutable: true, reflect: true }) value: string = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n    this.alphaChannel,\n    true,\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: string, oldValue: string): void {\n    this.internalSetValue(value, oldValue, false);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emitted when the hex value changes.\n   */\n  @Event({ cancelable: false }) calciteColorPickerHexInputChange: EventEmitter<void>;\n\n  private onHexInputBlur = (): void => {\n    const node = this.hexInputNode;\n    const inputValue = node.value;\n    const hex = `#${inputValue}`;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n    const isLonghand = isLonghandHex(hex);\n\n    if (isShorthandHex(hex, this.alphaChannel)) {\n      // ensure modified pasted hex values are committed since we prevent default to remove the # char.\n      this.onHexInputChange();\n    }\n\n    if (willClearValue || (isValidHex(hex) && isLonghand)) {\n      return;\n    }\n\n    // manipulating DOM directly since rerender doesn't update input value\n    node.value =\n      allowEmpty && !internalColor\n        ? \"\"\n        : this.formatHexForInternalInput(\n            rgbToHex(\n              // always display hex input in RRGGBB format\n              internalColor.object() as any as RGB,\n            ),\n          );\n  };\n\n  private onOpacityInputBlur = (): void => {\n    const node = this.opacityInputNode;\n    const inputValue = node.value;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n\n    if (willClearValue) {\n      return;\n    }\n\n    // manipulating DOM directly since rerender doesn't update input value\n    node.value =\n      allowEmpty && !internalColor ? \"\" : this.formatOpacityForInternalInput(internalColor);\n  };\n\n  private onOpacityInputInput = (): void => {\n    this.onOpacityInputChange();\n  };\n\n  private onHexInputChange = (): void => {\n    const nodeValue = this.hexInputNode.value;\n    let value = nodeValue;\n\n    if (value) {\n      const normalized = normalizeHex(value, false);\n      const preserveExistingAlpha = isValidHex(normalized) && this.alphaChannel;\n      if (preserveExistingAlpha && this.internalColor) {\n        const alphaHex = normalizeHex(this.internalColor.hexa(), true).slice(-2);\n        value = `${normalized + alphaHex}`;\n      }\n    }\n\n    this.internalSetValue(value, this.value);\n  };\n\n  private onOpacityInputChange = (): void => {\n    const node = this.opacityInputNode;\n    let value: number | string;\n\n    if (!node.value) {\n      value = node.value;\n    } else {\n      const alpha = opacityToAlpha(Number(node.value));\n      value = this.internalColor?.alpha(alpha).hexa();\n    }\n\n    this.internalSetValue(value, this.value);\n  };\n\n  private onInputFocus = (event: Event): void => {\n    event.type === \"calciteInternalInputTextFocus\"\n      ? this.hexInputNode.selectText()\n      : this.opacityInputNode.selectText();\n  };\n\n  private onHexInputInput = (): void => {\n    const hexInputValue = `#${this.hexInputNode.value}`;\n    const oldValue = this.value;\n\n    if (\n      isValidHex(hexInputValue, this.alphaChannel) &&\n      isLonghandHex(hexInputValue, this.alphaChannel)\n    ) {\n      this.internalSetValue(hexInputValue, oldValue);\n    }\n  };\n\n  protected onInputKeyDown = (event: KeyboardEvent): void => {\n    const { altKey, ctrlKey, metaKey, shiftKey } = event;\n    const { alphaChannel, hexInputNode, internalColor, value } = this;\n    const { key } = event;\n    const composedPath = event.composedPath();\n\n    if ((key === \"Tab\" && isShorthandHex(value, this.alphaChannel)) || key === \"Enter\") {\n      if (composedPath.includes(hexInputNode)) {\n        this.onHexInputChange();\n      } else {\n        this.onOpacityInputChange();\n      }\n\n      if (key === \"Enter\") {\n        event.preventDefault();\n      }\n\n      return;\n    }\n\n    const isNudgeKey = key === \"ArrowDown\" || key === \"ArrowUp\";\n    const oldValue = this.value;\n\n    if (isNudgeKey) {\n      if (!value) {\n        this.internalSetValue(this.previousNonNullValue, oldValue);\n        event.preventDefault();\n        return;\n      }\n\n      const direction = key === \"ArrowUp\" ? 1 : -1;\n      const bump = shiftKey ? 10 : 1;\n\n      this.internalSetValue(\n        hexify(\n          this.nudgeRGBChannels(\n            internalColor,\n            bump * direction,\n            composedPath.includes(hexInputNode) ? \"rgb\" : \"a\",\n          ),\n          alphaChannel,\n        ),\n        oldValue,\n      );\n\n      event.preventDefault();\n      return;\n    }\n\n    const withModifiers = altKey || ctrlKey || metaKey;\n    const singleChar = key.length === 1;\n    const validHexChar = hexChar.test(key);\n\n    if (singleChar && !withModifiers && !validHexChar) {\n      event.preventDefault();\n    }\n  };\n\n  private onHexInputPaste = (event: ClipboardEvent): void => {\n    const hex = event.clipboardData.getData(\"text\");\n\n    if (isValidHex(hex, this.alphaChannel) && isLonghandHex(hex, this.alphaChannel)) {\n      event.preventDefault();\n      this.hexInputNode.value = hex.slice(1);\n      this.internalSetValue(hex, this.value);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerHexInputElement;\n\n  private hexInputNode: HTMLCalciteInputTextElement;\n\n  /**\n   * The last valid/selected color. Used as a fallback if an invalid hex code is entered.\n   */\n  @State() internalColor: Color | null = DEFAULT_COLOR;\n\n  private opacityInputNode: HTMLCalciteInputNumberElement;\n\n  private previousNonNullValue: string = this.value;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const { alphaChannel, hexLabel, internalColor, messages, scale, value } = this;\n    const hexInputValue = this.formatHexForInternalInput(value);\n    const opacityInputValue = this.formatOpacityForInternalInput(internalColor);\n    const inputScale = scale === \"l\" ? \"m\" : \"s\";\n\n    return (\n      <div class={CSS.container}>\n        <calcite-input-text\n          class={CSS.hexInput}\n          label={messages?.hex || hexLabel}\n          maxLength={this.alphaChannel ? 8 : 6}\n          onCalciteInputTextChange={this.onHexInputChange}\n          onCalciteInputTextInput={this.onHexInputInput}\n          onCalciteInternalInputTextBlur={this.onHexInputBlur}\n          onCalciteInternalInputTextFocus={this.onInputFocus}\n          onKeyDown={this.onInputKeyDown}\n          onPaste={this.onHexInputPaste}\n          prefixText=\"#\"\n          ref={this.storeHexInputRef}\n          scale={inputScale}\n          value={hexInputValue}\n        />\n        {alphaChannel ? (\n          <calcite-input-number\n            class={CSS.opacityInput}\n            key=\"opacity-input\"\n            label={messages?.opacity}\n            max={OPACITY_LIMITS.max}\n            maxLength={3}\n            min={OPACITY_LIMITS.min}\n            numberButtonType=\"none\"\n            numberingSystem={this.numberingSystem}\n            onCalciteInputNumberInput={this.onOpacityInputInput}\n            onCalciteInternalInputNumberBlur={this.onOpacityInputBlur}\n            onCalciteInternalInputNumberFocus={this.onInputFocus}\n            onKeyDown={this.onInputKeyDown}\n            ref={this.storeOpacityInputRef}\n            scale={inputScale}\n            suffixText=\"%\"\n            value={opacityInputValue}\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return focusElement(this.hexInputNode);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private internalSetValue(value: string | null, oldValue: string | null, emit = true): void {\n    if (value) {\n      const { alphaChannel } = this;\n      const normalized = normalizeHex(value, alphaChannel, alphaChannel);\n\n      if (isValidHex(normalized, alphaChannel)) {\n        const { internalColor: currentColor } = this;\n        const nextColor = Color(normalized);\n        const normalizedLonghand = normalizeHex(hexify(nextColor, alphaChannel), alphaChannel);\n\n        const changed =\n          !currentColor ||\n          normalizedLonghand !== normalizeHex(hexify(currentColor, alphaChannel), alphaChannel);\n\n        this.internalColor = nextColor;\n        this.previousNonNullValue = normalizedLonghand;\n        this.value = normalizedLonghand;\n\n        if (changed && emit) {\n          this.calciteColorPickerHexInputChange.emit();\n        }\n\n        return;\n      }\n    } else if (this.allowEmpty) {\n      this.internalColor = null;\n      this.value = null;\n\n      if (emit) {\n        this.calciteColorPickerHexInputChange.emit();\n      }\n\n      return;\n    }\n\n    this.value = oldValue;\n  }\n\n  private storeHexInputRef = (node: HTMLCalciteInputTextElement): void => {\n    this.hexInputNode = node;\n  };\n\n  private storeOpacityInputRef = (node: HTMLCalciteInputNumberElement): void => {\n    this.opacityInputNode = node;\n  };\n\n  private formatHexForInternalInput(hex: string): string {\n    return hex ? hex.replace(\"#\", \"\").slice(0, 6) : \"\";\n  }\n\n  private formatOpacityForInternalInput(color: Color): string {\n    return color ? `${alphaToOpacity(color.alpha())}` : \"\";\n  }\n\n  private nudgeRGBChannels(color: Color, amount: number, context: \"rgb\" | \"a\"): Color {\n    let nudgedChannels: Channels;\n    const channels = color.array();\n    const rgbChannels = channels.slice(0, 3);\n\n    if (context === \"rgb\") {\n      const nudgedRGBChannels = rgbChannels.map((channel) => channel + amount);\n      nudgedChannels = [\n        ...nudgedRGBChannels,\n        this.alphaChannel ? channels[3] : undefined,\n      ] as Channels;\n    } else {\n      const nudgedAlpha = opacityToAlpha(alphaToOpacity(color.alpha()) + amount);\n      nudgedChannels = [...rgbChannels, nudgedAlpha] as Channels;\n    }\n\n    return Color(nudgedChannels);\n  }\n}\n",":host {\n  @apply block;\n}\n\n.container {\n  @apply flex w-full items-center flex-nowrap;\n}\n\n.hex-input {\n  @apply grow uppercase;\n}\n\n.opacity-input {\n  inline-size: 68px;\n  margin-inline-start: -1px;\n}\n\n:host([scale=\"s\"]) {\n  .container {\n    @apply flex-wrap gap-y-0.5;\n  }\n\n  .opacity-input {\n    inline-size: unset;\n    margin-inline-start: unset;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .opacity-input {\n    inline-size: 88px;\n  }\n}\n\n@include base-component();\n","export const CSS = {\n  swatch: \"swatch\",\n  noColorSwatch: \"swatch--no-color\",\n  checker: \"checker\",\n};\n\nexport const COLORS = {\n  borderLight: \"rgba(0, 0, 0, 0.3)\",\n  borderDark: \"rgba(255, 255, 255, 0.15)\",\n};\n\nconst checkerSquareSize = 4;\n\nexport const CHECKER_DIMENSIONS = {\n  squareSize: checkerSquareSize,\n  size: checkerSquareSize * 2,\n};\n","import { Component, Element, Fragment, h, Prop, VNode, Watch } from \"@stencil/core\";\nimport Color from \"color\";\nimport { getModeName } from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport { hexify } from \"../color-picker/utils\";\nimport { CHECKER_DIMENSIONS, COLORS, CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-color-picker-swatch\",\n  styleUrl: \"color-picker-swatch.scss\",\n  shadow: true,\n})\nexport class ColorPickerSwatch {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is active.\n   */\n  @Prop({\n    reflect: true,\n  })\n  active = false;\n\n  /**\n   * The color value.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n   */\n  @Prop()\n  color: string | null;\n\n  @Watch(\"color\")\n  handleColorChange(color: string | null): void {\n    this.internalColor = color ? Color(color) : null;\n  }\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerSwatchElement;\n\n  private internalColor: Color;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.handleColorChange(this.color);\n  }\n\n  render(): VNode {\n    const isEmpty = !this.internalColor;\n    const classes = {\n      [CSS.swatch]: true,\n      [CSS.noColorSwatch]: isEmpty,\n    };\n\n    return (\n      <svg class={classes} xmlns=\"http://www.w3.org/2000/svg\">\n        {this.renderSwatch()}\n      </svg>\n    );\n  }\n\n  renderSwatch(): VNode {\n    const { active, el, internalColor } = this;\n    const borderRadius = active ? \"100%\" : \"0\";\n    const theme = getModeName(el);\n    const borderColor = theme === \"light\" ? COLORS.borderLight : COLORS.borderDark;\n    const isEmpty = !internalColor;\n    const commonSwatchProps = {\n      height: \"100%\",\n      rx: borderRadius,\n      stroke: borderColor,\n      strokeWidth: \"2\",\n      width: \"100%\",\n    };\n\n    if (isEmpty) {\n      return (\n        <Fragment>\n          <clipPath id=\"shape\">\n            <rect height=\"100%\" rx={borderRadius} width=\"100%\" />\n          </clipPath>\n          {this.renderSwatchRect({\n            clipPath: `inset(0 round ${borderRadius})`,\n            ...commonSwatchProps,\n          })}\n          <line clip-path=\"url(#shape)\" stroke-width=\"3\" x1=\"100%\" x2=\"0\" y1=\"0\" y2=\"100%\" />\n        </Fragment>\n      );\n    }\n\n    const alpha = internalColor.alpha();\n    const hex = hexify(internalColor);\n    const hexa = hexify(internalColor, alpha < 1);\n\n    return (\n      <Fragment>\n        <title>{hexa}</title>\n        <defs>\n          <pattern\n            height={CHECKER_DIMENSIONS.size}\n            id=\"checker\"\n            patternUnits=\"userSpaceOnUse\"\n            width={CHECKER_DIMENSIONS.size}\n            x=\"0\"\n            y=\"0\"\n          >\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x=\"0\"\n              y=\"0\"\n            />\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x={CHECKER_DIMENSIONS.squareSize}\n              y={CHECKER_DIMENSIONS.squareSize}\n            />\n          </pattern>\n        </defs>\n        {this.renderSwatchRect({\n          fill: \"url(#checker)\",\n          rx: commonSwatchProps.rx,\n          height: commonSwatchProps.height,\n          width: commonSwatchProps.width,\n        })}\n        {this.renderSwatchRect({\n          clipPath: alpha < 1 ? \"polygon(100% 0, 0 0, 0 100%)\" : `inset(0 round ${borderRadius})`,\n          fill: hex,\n          ...commonSwatchProps,\n        })}\n        {alpha < 1\n          ? this.renderSwatchRect({\n              clipPath: \"polygon(100% 0, 100% 100%, 0 100%)\",\n              fill: hexa,\n              key: \"opacity-fill\",\n              ...commonSwatchProps,\n            })\n          : null}\n      </Fragment>\n    );\n  }\n\n  renderSwatchRect({\n    clipPath,\n    fill,\n    height,\n    key,\n    rx,\n    stroke,\n    strokeWidth,\n    width,\n  }: {\n    clipPath?: string;\n    fill?: string;\n    height: string;\n    key?: string;\n    rx: string;\n\n    // note: stroke-width and clip-path are needed to hide overflowing portion of stroke\n    // see https://stackoverflow.com/a/7273346/194216\n    stroke?: string;\n    strokeWidth?: string;\n\n    width: string;\n  }): VNode {\n    return (\n      <rect\n        clip-path={clipPath}\n        fill={fill}\n        height={height}\n        key={key}\n        rx={rx}\n        stroke={stroke}\n        stroke-width={strokeWidth}\n        width={width}\n      />\n    );\n  }\n}\n","$size-s: 20px;\n$size-m: 24px;\n$size-l: 28px;\n\n:host {\n  @apply relative inline-flex;\n}\n\n:host([scale=\"s\"]) {\n  @apply h-5 w-5;\n}\n\n:host([scale=\"m\"]) {\n  @apply h-6 w-6;\n}\n\n:host([scale=\"l\"]) {\n  @apply h-8 w-8;\n}\n\n.swatch {\n  @apply overflow-hidden;\n  block-size: inherit;\n  inline-size: inherit;\n\n  rect {\n    @apply transition-all duration-150 ease-in-out;\n  }\n}\n\n.swatch--no-color {\n  rect {\n    fill: var(--calcite-color-foreground-1);\n  }\n\n  line {\n    stroke: var(--calcite-color-status-danger);\n  }\n}\n\n.checker {\n  fill: #cacaca;\n}\n\n@include base-component();\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","export const clamp = (value: number, min: number, max: number): number => Math.max(min, Math.min(value, max));\n\nconst decimalNumberRegex = new RegExp(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\n/**\n * Returns the quantity of real decimal places for a number, which excludes trailing zeros.\n *\n * Adapted from {@link https://stackoverflow.com/questions/10454518/javascript-how-to-retrieve-the-number-of-decimals-of-a-string-number}.\n *\n * @param decimal - decimal value\n * @param value\n * @returns {number} the amount of decimal places in a number\n */\nexport const decimalPlaces = (value: number | string): number => {\n  const match = (\"\" + value).match(decimalNumberRegex);\n  if (!match || parseInt(match[1]) === 0) {\n    return 0;\n  }\n  return Math.max(\n    0,\n    // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) -\n      // Adjust for scientific notation.\n      (match[2] ? +match[2] : 0),\n  );\n};\n\nexport function getDecimals(value: number): number {\n  if (decimalPlaces(value) > 0 && value > 0) {\n    return parseFloat(`0.${value.toString().split(\".\")[1]}`);\n  }\n  return value;\n}\n\nexport function remap(value: number, fromMin: number, fromMax: number, toMin: number, toMax: number): number {\n  return ((value - fromMin) * (toMax - toMin)) / (fromMax - fromMin) + toMin;\n}\n\n/**\n * Helper to determine if a value is close to the edge of a range within a threshold.\n *\n * @param value\n * @param range\n * @param threshold\n * @returns -1 if close to lower edge, 1 if close to upper edge, 0 otherwise.\n */\nexport function closeToRangeEdge(value: number, range: number, threshold: number): number {\n  return value < threshold ? -1 : value > range - threshold ? 1 : 0;\n}\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n"],"names":["ColorPicker","internalColorUpdateContext","isActiveChannelInputEmpty","mode","CSSColorMode","HEX","shiftKeyChannelAdjustment","upOrDownArrowKeyTracker","handleTabActivate","event","this","channelMode","currentTarget","getAttribute","updateChannelsFromColor","color","handleColorFieldScopeKeyDown","key","arrowKeyToXYOffset","ArrowUp","x","y","ArrowRight","ArrowDown","ArrowLeft","preventDefault","scopeOrientation","captureColorFieldColor","colorFieldScopeLeft","colorFieldScopeTop","handleHueScopeKeyDown","modifier","shiftKey","arrowKeyToXOffset","delta","hue","baseColorFieldColor","internalColorSet","handleHexInputChange","stopPropagation","isClearable","hex","target","value","normalizeHex","hexify","alphaCompatible","Color","handleSavedColorSelect","swatch","handleChannelInput","input","channelIndex","Number","limit","OPACITY_LIMITS","max","RGB_LIMITS","Object","keys","HSV_LIMITS","inputValue","adjustedValue","clamp","toString","handleChannelChange","handleChannelBlur","channels","handleChannelFocus","selectText","isAlphaChannel","getChannelInputLimit","opacityToAlpha","updateColorFromChannels","handleSavedColorKeyDown","isActivationKey","handleColorFieldPointerDown","handleCanvasControlPointerDown","colorFieldRenderingContext","colorFieldScopeNode","handleHueSliderPointerDown","hueSliderRenderingContext","captureHueSliderColor","hueScopeNode","handleOpacitySliderPointerDown","opacitySliderRenderingContext","captureOpacitySliderValue","opacityScopeNode","globalPointerUpHandler","isPrimaryPointerButton","previouslyDragging","activeCanvasInfo","drawColorControls","calciteColorPickerChange","emit","globalPointerMoveHandler","el","isConnected","context","bounds","samplingX","samplingY","clientX","clientY","canvas","matches","width","height","storeColorFieldScope","node","storeHueScope","renderChannelsTabTitle","activeChannelMode","messages","selected","label","rgb","hsv","h","class","CSS$2","colorMode","onCalciteTabsActivate","renderChannelsTab","alphaChannel","channelAriaLabels","red","green","blue","saturation","direction","getElementDir","channelsToRender","slice","control","dir","map","channelValue","index","alphaToOpacity","renderChannel","ariaLabel","suffix","channel","lang","effectiveLocale","numberButtonType","numberingSystem","onCalciteInputNumberChange","onCalciteInputNumberInput","onCalciteInternalInputNumberBlur","onCalciteInternalInputNumberFocus","onKeyDown","handleKeyDown","scale","style","marginLeft","suffixText","deleteColor","colorToDelete","savedColors","indexOf","filter","storageKey","DEFAULT_STORAGE_KEY_PREFIX","storageId","localStorage","setItem","JSON","stringify","saveColor","colorToSave","throttle","type","arguments","length","undefined","_this","drawColorField","drawHueSlider","drawOpacitySlider","skipEqual","dimensions","colorField","Math","round","s","v","saturationv","initColorField","getContext","updateCanvasSize","initHueSlider","initOpacitySlider","storeOpacityScope","handleOpacityScopeKeyDown","alpha","DEFAULT_COLOR$1","toChannels","DIMENSIONS","m","handleAllowEmptyOrClearableChange","clearable","allowEmpty","handleAlphaChannelChange","format","console","warn","handleAlphaChannelDimensionsChange","effectiveSliderWidth","getSliderWidth","handleColorChange","oldColor","previousColor","handleFormatOrAlphaChannelChange","setMode","handleScaleChange","updateDimensions","onMessagesChange","handleValueChange","oldValue","modeChanged","nextMode","parseMode","showIncompatibleColorWarning","dragging","calciteColorPickerInput","normalizeColor","colorChanged","colorEqual","endsWith","effectiveLocaleChange","updateMessages","handleChannelKeyUpOrDown","composedPath","some","classList","contains","focusScope","focusEl","requestAnimationFrame","focus","renderingContext","captureValue","scopeNode","window","addEventListener","once","getBoundingClientRect","call","offsetX","offsetY","setFocus","componentFocusable","focusFirstTabbable","componentWillLoad","setUpLoadableComponent","willSetNoColor","parsedMode","valueIsCompatible","initialColor","getItem","parse","setUpMessages","connectedCallback","connectLocalized","connectMessages","componentDidLoad","setComponentLoaded","disconnectedCallback","removeEventListener","disconnectLocalized","disconnectMessages","componentDidRender","updateHostInteraction","render","channelsDisabled","thumb","radius","thumbRadius","hexDisabled","hideChannels","hideHex","hideSaved","hueScopeLeft","opacityScopeLeft","savedDisabled","sliderWidth","selectedColorInHex","hueTop","hueLeft","opacityTop","opacityLeft","noColor","vertical","noHex","noChannels","noSaved","adjustedColorFieldScopeLeft","adjustedColorFieldScopeTop","getAdjustedScopePosition","adjustedHueScopeLeft","adjustedHueScopeTop","adjustedOpacityScopeLeft","adjustedOpacityScopeTop","InteractiveContainer","disabled","container","controlAndScope","onPointerDown","ref","scope","colorFieldScope","role","top","left","tabindex","previewAndSliders","preview","sliders","slider","hueSlider","hueScope","opacitySlider","opacity","min","opacityScope","controlSection","section","hexAndChannelsGroup","hexOptions","onCalciteColorPickerHexInputChange","colorModeContainer","splitSection","slot","savedColorsSection","header","saved","savedColorsButtons","appearance","iconStart","kind","onClick","savedColor","tabIndex","ensureCompatibleMode","isAlphaCompatible","alphaMode","toAlphaMode","nonAlphaMode","toNonAlphaMode","HUE_LIMIT_CONSTRAINED","toValue","includes","hasAlpha","HEXA","replace","string","colorObject","object","normalizeAlpha","getSliderCapSpacing","fillStyle","fillRect","whiteGradient","createLinearGradient","addColorStop","blackGradient","drawActiveColorFieldColor","setCanvasContextSize","_ref","devicePixelRatio","adjustedSliderDimensions","hsvColor","drawThumb","applyAlpha","endAngle","PI","beginPath","arc","fill","strokeStyle","lineWidth","stroke","pattern","createPattern","getCheckeredBackgroundPattern","globalCompositeOperation","drawActiveHueSliderColor","sliderBoundX","getSliderBoundX","gradient","hueSliderColorStopKeywords","offset","currentOffset","forEach","keyword","clearRect","drawSliderPath","startColor","midColor","endColor","drawActiveOpacitySliderColor","moveTo","lineTo","quadraticCurveTo","closePath","checkerPattern","document","createElement","patternContext","closeToEdge","closeToRangeEdge","remap","array","floor","push","SCOPE_SIZE","CSS$1","DEFAULT_COLOR","ColorPickerHexInput","onHexInputBlur","hexInputNode","internalColor","willClearValue","isLonghand","isLonghandHex","isShorthandHex","onHexInputChange","isValidHex","formatHexForInternalInput","rgbToHex","onOpacityInputBlur","opacityInputNode","formatOpacityForInternalInput","onOpacityInputInput","onOpacityInputChange","normalized","hexa","internalSetValue","onInputFocus","onHexInputInput","hexInputValue","onInputKeyDown","altKey","ctrlKey","metaKey","isNudgeKey","previousNonNullValue","bump","nudgeRGBChannels","withModifiers","singleChar","validHexChar","hexChar","test","onHexInputPaste","clipboardData","getData","storeHexInputRef","storeOpacityInputRef","hexLabel","opacityInputValue","inputScale","maxLength","onCalciteInputTextChange","onCalciteInputTextInput","onCalciteInternalInputTextBlur","onCalciteInternalInputTextFocus","onPaste","prefixText","focusElement","currentColor","nextColor","normalizedLonghand","changed","calciteColorPickerHexInputChange","amount","nudgedChannels","rgbChannels","nudgedAlpha","CSS","COLORS","CHECKER_DIMENSIONS","squareSize","size","checkerSquareSize","ColorPickerSwatch","isEmpty","classes","xmlns","renderSwatch","active","borderRadius","commonSwatchProps","rx","getModeName","strokeWidth","Fragment","id","renderSwatchRect","clipPath","x1","x2","y1","y2","patternUnits","_ref2","freeGlobal$1","global","freeSelf","self","root$1","Function","Symbol$1","Symbol","objectProto$1","prototype","hasOwnProperty","nativeObjectToString$1","symToStringTag$1","toStringTag","nativeObjectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","isOwn","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","symbolTag","isSymbol","reWhitespace","reTrimStart","baseTrim","charAt","trimmedEndIndex","isObject","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","now$1","Date","now","FUNC_ERROR_TEXT","nativeMax","nativeMin","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","clearTimeout","cancel","flush","interceptedClick","HTMLElement","click","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","setAttribute","activeElement","blur","element","blockInteraction","restoreInteraction","removeAttribute","children","inert","resolveMap","WeakMap","promiseMap","set","Promise","resolve","get","componentLoaded","async","isBrowser","forceUpdate","decimalNumberRegex","RegExp","decimalPlaces","match","getDecimals","parseFloat","split","fromMin","fromMax","toMin","toMax","range","threshold","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","fetchMessages","componentName","tagName","toLowerCase","fetch","getAssetPath","then","resp","ok","json","catch","getMessageBundle","getSupportedLocale","defaultOnMessagesChange"],"sourceRoot":""}