{"version":3,"file":"static/js/42025.e6b889d6.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/esm/src/components/functional/Validation.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/functional/XButton.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/combobox/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/combobox/utils.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/combobox/combobox.scss?tag=calcite-combobox&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/combobox/combobox.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/combobox-item/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/combobox-item/combobox-item.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/combobox-item/combobox-item.scss?tag=calcite-combobox-item&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/components/combobox-item-group/resources.ts","../node_modules/@esri/calcite-components/dist/esm/src/components/combobox-item-group/combobox-item-group.tsx","../node_modules/@esri/calcite-components/dist/esm/src/components/combobox-item-group/combobox-item-group.scss?tag=calcite-combobox-item-group&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/esm/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/conditionalSlot.ts","../node_modules/@esri/calcite-components/dist/calcite-design-tokens/dist/es6/core.js","../node_modules/@esri/calcite-components/dist/esm/src/utils/form.tsx","../node_modules/@esri/calcite-components/dist/esm/src/utils/label.ts","../node_modules/@esri/calcite-components/dist/esm/src/utils/openCloseComponent.ts"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\n\ninterface ValidationProps extends JSXBase.HTMLAttributes {\n  scale: Scale;\n  status: Status;\n  icon?: IconNameOrString | boolean;\n  id?: string;\n  message: string;\n}\n\nexport const CSS = {\n  validationContainer: \"validation-container\",\n};\n\nexport const Validation: FunctionalComponent<ValidationProps> = ({\n  scale,\n  status,\n  id,\n  icon,\n  message,\n}): VNode => (\n  <div class={CSS.validationContainer}>\n    <calcite-input-message aria-live=\"polite\" icon={icon} id={id} scale={scale} status={status}>\n      {message}\n    </calcite-input-message>\n  </div>\n);\n","import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXAttributes, JSXBase } from \"@stencil/core/internal\";\nimport { Scale } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\n\nexport interface XButtonProps extends JSXAttributes {\n  disabled: boolean;\n  label: string;\n  scale: Scale;\n  onClick?: JSXBase.DOMAttributes<HTMLElement>[\"onClick\"];\n}\n\nexport const CSS = {\n  button: \"x-button\",\n};\n\nexport const XButton: FunctionalComponent<XButtonProps> = ({\n  disabled,\n  key,\n  label,\n  scale,\n}): VNode => (\n  <button\n    aria-label={label}\n    class={CSS.button}\n    disabled={disabled}\n    key={key}\n    tabIndex={-1}\n    type=\"button\"\n  >\n    <calcite-icon icon=\"x\" scale={getIconScale(scale)} />\n  </button>\n);\n","export const ComboboxItem = \"CALCITE-COMBOBOX-ITEM\";\nexport const ComboboxItemGroup = \"CALCITE-COMBOBOX-ITEM-GROUP\";\nexport const ComboboxChildSelector = `${ComboboxItem}, ${ComboboxItemGroup}`;\n\nexport const CSS = {\n  input: \"input\",\n  inputHidden: \"input--hidden\",\n  chipInvisible: \"chip--invisible\",\n  selectionDisplayFit: \"selection-display-fit\",\n  selectionDisplaySingle: \"selection-display-single\",\n  listContainer: \"list-container\",\n  icon: \"icon\",\n  placeholderIcon: \"placeholder-icon\",\n  selectedIcon: \"selected-icon\",\n};\n\nexport const IDS = {\n  validationMessage: \"comboboxValidationMessage\",\n};\n","import { nodeListToArray } from \"../../utils/dom\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { ComboboxChildElement } from \"./interfaces\";\nimport { ComboboxChildSelector } from \"./resources\";\nimport { Combobox } from \"./combobox\";\n\nexport function getAncestors(element: HTMLElement): ComboboxChildElement[] {\n  const parent: ComboboxChildElement = element.parentElement?.closest(ComboboxChildSelector);\n  const grandparent: ComboboxChildElement = parent?.parentElement?.closest(ComboboxChildSelector);\n  return [parent, grandparent].filter((el) => el);\n}\n\nexport function getItemAncestors(item: HTMLCalciteComboboxItemElement): HTMLCalciteComboboxItemElement[] {\n  return (\n    item.ancestors?.filter((el): el is HTMLCalciteComboboxItemElement => el.nodeName === \"CALCITE-COMBOBOX-ITEM\") || []\n  );\n}\n\nexport function getItemChildren(item: HTMLCalciteComboboxItemElement): HTMLCalciteComboboxItemElement[] {\n  return nodeListToArray(item.querySelectorAll(\"calcite-combobox-item\"));\n}\n\nexport function hasActiveChildren(node: HTMLCalciteComboboxItemElement): boolean {\n  const items = nodeListToArray(node.querySelectorAll(\"calcite-combobox-item\"));\n  return items.filter((item) => item.selected).length > 0;\n}\n\nexport function getDepth(element: HTMLElement): number {\n  if (!isBrowser()) {\n    return 0;\n  }\n\n  const result = document.evaluate(\n    \"ancestor::calcite-combobox-item | ancestor::calcite-combobox-item-group\",\n    element,\n    null,\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null,\n  );\n\n  return result.snapshotLength;\n}\n\nexport function isSingleLike(selectionMode: Combobox[\"selectionMode\"]): boolean {\n  return selectionMode.includes(\"single\");\n}\n\nexport function getLabel(item: HTMLCalciteComboboxItemElement): string {\n  return item.shortHeading || item.textLabel;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-combobox-input-height: Specifies the height of the component's input.\n */\n\n:host {\n  @apply relative block;\n}\n\n@include disabled();\n@include x-button();\n\n:host([scale=\"s\"]) {\n  @apply text-n2;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.1\");\n  --calcite-combobox-input-height: theme(\"spacing.4\");\n  --calcite-internal-combobox-input-margin-block: calc(theme(\"spacing.1\") - theme(\"borderWidth.DEFAULT\"));\n\n  .x-button {\n    margin-inline: theme(\"spacing.2\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n1;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.3\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.2\");\n  --calcite-combobox-input-height: theme(\"spacing.4\");\n  --calcite-internal-combobox-input-margin-block: calc(theme(\"spacing.2\") - theme(\"borderWidth.DEFAULT\"));\n\n  .x-button {\n    margin-inline-end: theme(\"spacing.3\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  @apply text-0;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.4\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.3\");\n  --calcite-combobox-input-height: theme(\"spacing.6\");\n  --calcite-internal-combobox-input-margin-block: calc(theme(\"spacing[2.5]\") - theme(\"borderWidth.DEFAULT\"));\n\n  .x-button {\n    margin-inline-end: theme(\"spacing.4\");\n  }\n}\n\n.wrapper {\n  @apply bg-foreground-1\n    text-color-1\n    focus-base\n    flex\n    border-color-input\n    border\n    border-solid;\n  padding-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n\n  &:hover {\n    .icon {\n      color: var(--calcite-color-text-1);\n    }\n  }\n}\n\n:host(:focus-within) .wrapper,\n.wrapper--active {\n  @apply focus-inset;\n}\n\n:host([read-only]) {\n  .wrapper {\n    background-color: var(--calcite-color-background);\n  }\n\n  .label {\n    font-weight: var(--calcite-font-weight-medium);\n  }\n}\n\n:host([status=\"invalid\"]) .wrapper {\n  @apply border-color-danger;\n}\n\n:host([status=\"invalid\"]:focus-within) .wrapper {\n  @apply focus-inset-danger;\n}\n\n.wrapper--single {\n  padding-block: 0;\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n  @apply cursor-pointer flex-nowrap;\n}\n\n.grid-input {\n  @apply flex\n    flex-grow\n    flex-wrap\n    items-center\n    relative\n    truncate\n    p-0;\n\n  gap: var(--calcite-combobox-item-spacing-unit-s);\n  margin-inline-end: var(--calcite-combobox-item-spacing-unit-s);\n\n  &.selection-display-fit,\n  &.selection-display-single {\n    @apply flex-nowrap overflow-hidden;\n  }\n}\n\n.input {\n  @apply appearance-none\n  bg-transparent\n  border-none\n  flex-grow\n  font-inherit\n  text-color-1\n  text-ellipsis\n  overflow-hidden\n  p-0;\n  font-size: inherit;\n  block-size: var(--calcite-combobox-input-height);\n  line-height: var(--calcite-combobox-input-height);\n  inline-size: 100%;\n  margin-block-end: var(--calcite-combobox-item-spacing-unit-s);\n  min-inline-size: 4.8125rem;\n  &:focus {\n    @apply outline-none;\n  }\n\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\n\n.input--single {\n  @apply p-0;\n  margin-block: var(--calcite-internal-combobox-input-margin-block);\n}\n\n.wrapper--active .input-single {\n  @apply cursor-text;\n}\n\n.input--hidden {\n  @apply pointer-events-none\n  w-0\n  min-w-0\n  opacity-0;\n}\n\n.input--icon {\n  padding-block: 0;\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n.placeholder-icon {\n  color: var(--calcite-color-text-3);\n}\n\n.input-wrap {\n  @apply flex flex-grow items-center;\n}\n\n.input-wrap--single {\n  @apply flex-1 overflow-hidden;\n}\n\n.label {\n  @apply pointer-events-none\n    max-w-full\n    flex-auto\n    truncate\n    p-0\n    font-normal;\n  block-size: var(--calcite-combobox-input-height);\n  line-height: var(--calcite-combobox-input-height);\n}\n\n.label--icon {\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n.icon-end,\n.icon-start {\n  @apply flex cursor-pointer items-center;\n}\n\n.icon-end {\n  @apply flex-none;\n\n  .icon {\n    color: var(--calcite-color-text-3);\n  }\n}\n\n.floating-ui-container {\n  --calcite-floating-ui-z-index: theme(\"zIndex.dropdown\");\n  @include floating-ui-container();\n  @include floating-ui-wrapper();\n}\n\n@include floating-ui-elem-anim(\".floating-ui-container\");\n\n.floating-ui-container--active {\n  @include floating-ui-wrapper-active();\n}\n\n@media (forced-colors: active) {\n  .wrapper,\n  .floating-ui-container--active {\n    border: 1px solid canvasText;\n  }\n}\n\n.screen-readers-only {\n  @apply sr-only;\n}\n\n.list-container {\n  @apply bg-foreground-1\n    max-h-menu\n    overflow-y-auto;\n  inline-size: var(--calcite-dropdown-width, 100%);\n}\n\n.list {\n  @apply m-0 block p-0;\n}\n\n.list--hide {\n  @apply h-0 overflow-hidden;\n}\n\ncalcite-chip {\n  --calcite-animation-timing: 0;\n}\n\n.chip {\n  margin-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);\n  max-inline-size: 100%;\n}\n\n.chip--active {\n  @apply bg-foreground-3;\n}\n\n.chip--invisible {\n  @apply absolute invisible;\n}\n\n.item {\n  @apply block;\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n\n::slotted(calcite-combobox-item-group:not(:first-child)) {\n  padding-block-start: var(--calcite-combobox-item-spacing-unit-l);\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { debounce, escapeRegExp } from \"lodash-es\";\nimport { calciteSize48 } from \"@esri/calcite-design-tokens/dist/es6/core.js\";\nimport { filter } from \"../../utils/filter\";\nimport { getElementWidth, getTextWidth, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultMenuPlacement,\n  disconnectFloatingUI,\n  filterValidFlipPlacements,\n  FlipPlacement,\n  FloatingCSS,\n  FloatingUIComponent,\n  LogicalPlacement,\n  OverlayPositioning,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  componentLoaded,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { DEBOUNCE } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Scale, SelectionMode, Status } from \"../interfaces\";\nimport { CSS as XButtonCSS, XButton } from \"../functional/XButton\";\nimport { componentOnReady, getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { ComboboxMessages } from \"./assets/combobox/t9n\";\nimport { ComboboxChildElement, SelectionDisplay } from \"./interfaces\";\nimport { ComboboxChildSelector, ComboboxItem, ComboboxItemGroup, CSS, IDS } from \"./resources\";\nimport {\n  getItemAncestors,\n  getItemChildren,\n  getLabel,\n  hasActiveChildren,\n  isSingleLike,\n} from \"./utils\";\n\ninterface ItemData {\n  description: string;\n  label: string;\n  metadata: Record<string, unknown>;\n  shortHeading: string;\n  value: string;\n}\n\nconst isGroup = (el: ComboboxChildElement): el is HTMLCalciteComboboxItemGroupElement =>\n  el.tagName === ComboboxItemGroup;\n\nconst itemUidPrefix = \"combobox-item-\";\nconst chipUidPrefix = \"combobox-chip-\";\nconst labelUidPrefix = \"combobox-label-\";\nconst listboxUidPrefix = \"combobox-listbox-\";\nconst inputUidPrefix = \"combobox-input-\";\n\n/**\n * @slot - A slot for adding `calcite-combobox-item`s.\n */\n@Component({\n  tag: \"calcite-combobox\",\n  styleUrl: \"combobox.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Combobox\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    OpenCloseComponent,\n    FloatingUIComponent,\n    T9nComponent,\n    LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the value-clearing will be disabled.\n   */\n  @Prop({ reflect: true }) clearDisabled = false;\n\n  /**\n   * Text for the component's filter input field.\n   */\n  @Prop({ reflect: true, mutable: true }) filterText = \"\";\n\n  @Watch(\"filterText\")\n  filterTextChange(value: string): void {\n    this.updateActiveItemIndex(-1);\n    this.filterItems(value, true);\n  }\n\n  /**\n   * When `selectionMode` is `\"ancestors\"` or `\"multiple\"`, specifies the display of multiple `calcite-combobox-item` selections, where:\n   *\n   * `\"all\"` displays all selections with individual `calcite-chip`s,\n   *\n   * `\"fit\"` displays individual `calcite-chip`s that scale to the component's size, including a non-closable `calcite-chip`, which provides the number of additional `calcite-combobox-item` selections not visually displayed, and\n   *\n   * `\"single\"` displays one `calcite-chip` with the total number of selections.\n   */\n  @Prop({ reflect: true }) selectionDisplay: SelectionDisplay = \"all\";\n\n  /**When `true`, displays and positions the component. */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n\n    if (this.disabled) {\n      this.open = false;\n      return;\n    }\n\n    this.setMaxScrollerHeight();\n  }\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(value: boolean): void {\n    if (!value) {\n      this.open = false;\n    }\n  }\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /** Specifies the placeholder text for the input. */\n  @Prop() placeholder: string;\n\n  /** Specifies the placeholder icon for the input. */\n  @Prop({ reflect: true }) placeholderIcon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) placeholderIconFlipRtl = false;\n\n  /** Specifies the maximum number of `calcite-combobox-item`s (including nested children) to display before displaying a scrollbar. */\n  @Prop({ reflect: true }) maxItems = 0;\n\n  @Watch(\"maxItems\")\n  maxItemsHandler(): void {\n    this.setMaxScrollerHeight();\n  }\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** When `true`, allows entry of custom values, which are not in the original set of items. */\n  @Prop({ reflect: true }) allowCustomValues: boolean;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection,\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection, and\n   *\n   * `\"ancestors\"` allows multiple selections, but shows ancestors of selected items as selected, with only deepest children shown in chips.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"single\" | \"single-persist\" | \"ancestors\" | \"multiple\",\n    SelectionMode\n  > = \"multiple\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"selectionMode\")\n  @Watch(\"scale\")\n  handlePropsChange(): void {\n    this.updateItems();\n  }\n\n  /** The component's value(s) from the selected `calcite-combobox-item`(s). */\n  @Prop({ mutable: true }) value: string | string[] = null;\n\n  @Watch(\"value\")\n  valueHandler(value: string | string[]): void {\n    if (!this.internalValueChangeFlag) {\n      const items = this.getItems();\n      if (Array.isArray(value)) {\n        items.forEach((item) => (item.selected = value.includes(item.value)));\n      } else if (value) {\n        items.forEach((item) => (item.selected = value === item.value));\n      } else {\n        items.forEach((item) => (item.selected = false));\n      }\n      this.updateItems();\n    }\n  }\n\n  /**\n   * Specifies the component's fallback slotted content placement when it's initial placement has insufficient space available.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ComboboxMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ComboboxMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /*  wired up by t9n util */\n  }\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteComboboxItemElement[] = [];\n\n  @Watch(\"selectedItems\")\n  selectedItemsHandler(): void {\n    this.internalValueChangeFlag = true;\n    this.value = this.getValue();\n    this.internalValueChangeFlag = false;\n  }\n\n  /**\n   * Specifies the component's filtered items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) filteredItems: HTMLCalciteComboboxItemElement[] = [];\n\n  /**\n   * When `true`, the component's value can be read, but controls are not accessible and the value cannot be modified.\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"click\", { target: \"document\" })\n  async documentClickHandler(event: PointerEvent): Promise<void> {\n    if (this.disabled || event.composedPath().includes(this.el)) {\n      return;\n    }\n\n    await componentOnReady(this.el);\n\n    if (!this.allowCustomValues && this.filterText) {\n      this.clearInputValue();\n      this.filterItems(\"\");\n      this.updateActiveItemIndex(-1);\n    }\n\n    if (this.allowCustomValues && this.filterText.trim().length) {\n      this.addCustomChip(this.filterText);\n    }\n\n    this.open = false;\n  }\n\n  @Listen(\"calciteComboboxItemChange\")\n  calciteComboboxItemChangeHandler(event: CustomEvent<HTMLCalciteComboboxItemElement>): void {\n    if (this.ignoreSelectedEventsFlag) {\n      return;\n    }\n\n    const target = event.target as HTMLCalciteComboboxItemElement;\n    const newIndex = this.filteredItems.indexOf(target);\n    this.updateActiveItemIndex(newIndex);\n    this.toggleSelection(target, target.selected);\n  }\n\n  @Listen(\"calciteInternalComboboxItemChange\")\n  calciteInternalComboboxItemChangeHandler(\n    event: CustomEvent<HTMLCalciteComboboxItemElement>,\n  ): void {\n    event.stopPropagation();\n    this.updateItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed Reposition the component after a delay\n   * @returns Promise\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl,\n        referenceEl,\n        overlayPositioning,\n        placement,\n        flipPlacements: filteredFlipPlacements,\n        type: \"menu\",\n      },\n      delayed,\n    );\n  }\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.textInput?.focus();\n    this.activeChipIndex = -1;\n    this.activeItemIndex = -1;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the selected item(s) changes.\n   */\n  @Event({ cancelable: false }) calciteComboboxChange: EventEmitter<void>;\n\n  /** Fires when text is added to filter the options list. */\n  @Event({ cancelable: false }) calciteComboboxFilterChange: EventEmitter<void>;\n\n  /**\n   * Fires when a selected item in the component is closed via its `calcite-chip`.\n   */\n  @Event({ cancelable: false }) calciteComboboxChipClose: EventEmitter<void>;\n\n  /** Fires when the component is requested to be closed, and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteComboboxBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteComboboxClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteComboboxBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteComboboxOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    connectLabel(this);\n    connectForm(this);\n\n    this.internalValueChangeFlag = true;\n    this.value = this.getValue();\n    this.internalValueChangeFlag = false;\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n\n    this.updateItems();\n    this.setFilteredPlacements();\n\n    if (this.open) {\n      this.openHandler();\n      onToggleOpenCloseComponent(this);\n    }\n\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.updateItems();\n    await setUpMessages(this);\n    this.filterItems(this.filterText, false, false);\n  }\n\n  componentDidLoad(): void {\n    afterConnectDefaultValueSet(this, this.getValue());\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    if (this.el.offsetHeight !== this.inputHeight) {\n      this.reposition(true);\n      this.inputHeight = this.el.offsetHeight;\n    }\n\n    updateHostInteraction(this);\n  }\n\n  componentDidUpdate(): void {\n    this.refreshSelectionDisplay();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteComboboxElement;\n\n  private allSelectedIndicatorChipEl: HTMLCalciteChipElement;\n\n  private filterTextMatchPattern: RegExp;\n\n  placement: LogicalPlacement = defaultMenuPlacement;\n\n  filteredFlipPlacements: FlipPlacement[];\n\n  internalValueChangeFlag = false;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Combobox[\"value\"];\n\n  @State() items: HTMLCalciteComboboxItemElement[] = [];\n\n  @State() groupItems: HTMLCalciteComboboxItemGroupElement[] = [];\n\n  @State() needsIcon: boolean;\n\n  @State() activeItemIndex = -1;\n\n  @State() activeChipIndex = -1;\n\n  @State() activeDescendant = \"\";\n\n  @State() compactSelectionDisplay = false;\n\n  @State() selectedHiddenChipsCount = 0;\n\n  @State() selectedVisibleChipsCount = 0;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ComboboxMessages;\n\n  textInput: HTMLInputElement = null;\n\n  private data: ItemData[];\n\n  mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n\n  private resizeObserver = createObserver(\"resize\", () => {\n    this.setMaxScrollerHeight();\n    this.refreshSelectionDisplay();\n  });\n\n  private guid = guid();\n\n  private inputHeight = 0;\n\n  private floatingEl: HTMLDivElement;\n\n  private referenceEl: HTMLDivElement;\n\n  private chipContainerEl: HTMLDivElement;\n\n  private listContainerEl: HTMLDivElement;\n\n  private ignoreSelectedEventsFlag = false;\n\n  private maxCompactBreakpoint: number;\n\n  openTransitionProp = \"opacity\";\n\n  private selectedIndicatorChipEl: HTMLCalciteChipElement;\n\n  transitionEl: HTMLDivElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private clearValue(): void {\n    this.ignoreSelectedEventsFlag = true;\n    this.items.forEach((el) => (el.selected = false));\n    this.ignoreSelectedEventsFlag = false;\n    this.selectedItems = [];\n    this.emitComboboxChange();\n    this.open = false;\n    this.updateActiveItemIndex(-1);\n    this.resetText();\n    this.filterItems(\"\");\n    this.setFocus();\n  }\n\n  private clearInputValue(): void {\n    this.textInput.value = \"\";\n    this.filterText = \"\";\n  }\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterValidFlipPlacements(flipPlacements, el)\n      : null;\n  };\n\n  getValue = (): string | string[] => {\n    const items = this.selectedItems.map((item) => item?.value?.toString());\n    return items?.length ? (items.length > 1 ? items : items[0]) : \"\";\n  };\n\n  onLabelClick = (): void => {\n    this.setFocus();\n  };\n\n  private comboboxInViewport(): boolean {\n    const bounding = this.el.getBoundingClientRect();\n    return (\n      bounding.top >= 0 &&\n      bounding.left >= 0 &&\n      bounding.right <= (window.innerWidth || document.documentElement.clientWidth) &&\n      bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight)\n    );\n  }\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly) {\n      return;\n    }\n\n    const { key } = event;\n\n    switch (key) {\n      case \"Tab\":\n        this.activeChipIndex = -1;\n        this.activeItemIndex = -1;\n        if (this.allowCustomValues && this.filterText) {\n          this.addCustomChip(this.filterText, true);\n          event.preventDefault();\n        } else if (this.open) {\n          this.open = false;\n          event.preventDefault();\n        } else if (!this.allowCustomValues && this.filterText) {\n          this.clearInputValue();\n          this.filterItems(\"\");\n          this.updateActiveItemIndex(-1);\n        }\n        break;\n      case \"ArrowLeft\":\n        if (this.activeChipIndex !== -1 || this.textInput.selectionStart === 0) {\n          this.previousChip();\n          event.preventDefault();\n        }\n        break;\n      case \"ArrowRight\":\n        if (this.activeChipIndex !== -1) {\n          this.nextChip();\n          event.preventDefault();\n        }\n        break;\n      case \"ArrowUp\":\n        if (this.filteredItems.length) {\n          event.preventDefault();\n          if (this.open) {\n            this.shiftActiveItemIndex(-1);\n          }\n\n          if (!this.comboboxInViewport()) {\n            this.el.scrollIntoView();\n          }\n        }\n        break;\n      case \"ArrowDown\":\n        if (this.filteredItems.length) {\n          event.preventDefault();\n          if (this.open) {\n            this.shiftActiveItemIndex(1);\n          } else {\n            this.open = true;\n            this.ensureRecentSelectedItemIsActive();\n          }\n\n          if (!this.comboboxInViewport()) {\n            this.el.scrollIntoView();\n          }\n        }\n        break;\n      case \" \":\n        if (!this.textInput.value && !event.defaultPrevented) {\n          if (!this.open) {\n            this.open = true;\n            this.shiftActiveItemIndex(1);\n          }\n          event.preventDefault();\n        }\n        break;\n      case \"Home\":\n        if (!this.open) {\n          return;\n        }\n        event.preventDefault();\n        this.updateActiveItemIndex(0);\n        this.scrollToActiveItem();\n        if (!this.comboboxInViewport()) {\n          this.el.scrollIntoView();\n        }\n        break;\n      case \"End\":\n        if (!this.open) {\n          return;\n        }\n        event.preventDefault();\n        this.updateActiveItemIndex(this.filteredItems.length - 1);\n        this.scrollToActiveItem();\n        if (!this.comboboxInViewport()) {\n          this.el.scrollIntoView();\n        }\n        break;\n      case \"Escape\":\n        if (!this.clearDisabled && !this.open) {\n          this.clearValue();\n        }\n\n        this.open = false;\n        event.preventDefault();\n        break;\n      case \"Enter\":\n        if (this.open && this.activeItemIndex > -1) {\n          const item = this.filteredItems[this.activeItemIndex];\n          this.toggleSelection(item, !item.selected);\n          event.preventDefault();\n        } else if (this.activeChipIndex > -1) {\n          this.removeActiveChip();\n          event.preventDefault();\n        } else if (this.allowCustomValues && this.filterText) {\n          this.addCustomChip(this.filterText, true);\n          event.preventDefault();\n        } else if (!event.defaultPrevented) {\n          if (submitForm(this)) {\n            event.preventDefault();\n          }\n        }\n        break;\n      case \"Delete\":\n      case \"Backspace\": {\n        const notDeletable =\n          this.selectionDisplay === \"single\" ||\n          (this.selectionDisplay === \"fit\" && this.selectedHiddenChipsCount > 0);\n        if (notDeletable) {\n          return;\n        }\n        if (this.activeChipIndex > -1) {\n          event.preventDefault();\n          this.removeActiveChip();\n        } else if (!this.filterText && this.isMulti()) {\n          event.preventDefault();\n          this.removeLastChip();\n        }\n        break;\n      }\n    }\n  };\n\n  onBeforeOpen(): void {\n    this.scrollToActiveItem();\n    this.calciteComboboxBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteComboboxOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteComboboxBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteComboboxClose.emit();\n  }\n\n  setMaxScrollerHeight = async (): Promise<void> => {\n    const { listContainerEl, open, referenceEl } = this;\n\n    if (!listContainerEl || !open) {\n      return;\n    }\n\n    await this.reposition(true);\n    const maxScrollerHeight = this.getMaxScrollerHeight();\n    listContainerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : \"\";\n    listContainerEl.style.minWidth = `${referenceEl.clientWidth}px`;\n    await this.reposition(true);\n  };\n\n  calciteChipCloseHandler = (comboboxItem: HTMLCalciteComboboxItemElement): void => {\n    this.open = false;\n\n    const selection = this.items.find((item) => item === comboboxItem);\n\n    if (selection) {\n      this.toggleSelection(selection, false);\n    }\n\n    this.calciteComboboxChipClose.emit();\n  };\n\n  clickHandler = (event: MouseEvent): void => {\n    if (this.readOnly) {\n      return;\n    }\n\n    const composedPath = event.composedPath();\n\n    if (composedPath.some((node: HTMLElement) => node.tagName === \"CALCITE-CHIP\")) {\n      this.open = false;\n      event.preventDefault();\n      return;\n    }\n\n    if (composedPath.some((node: HTMLElement) => node.classList?.contains(XButtonCSS.button))) {\n      this.clearValue();\n      event.preventDefault();\n      return;\n    }\n\n    this.open = !this.open;\n    this.ensureRecentSelectedItemIsActive();\n  };\n\n  private ensureRecentSelectedItemIsActive(): void {\n    const { selectedItems } = this;\n    const targetIndex =\n      selectedItems.length === 0 ? 0 : this.items.indexOf(selectedItems[selectedItems.length - 1]);\n\n    this.updateActiveItemIndex(targetIndex);\n  }\n\n  private hideChip(chipEl: HTMLCalciteChipElement): void {\n    chipEl.classList.add(CSS.chipInvisible);\n  }\n\n  private showChip(chipEl: HTMLCalciteChipElement): void {\n    chipEl.classList.remove(CSS.chipInvisible);\n  }\n\n  private refreshChipDisplay({\n    chipEls,\n    availableHorizontalChipElSpace,\n    chipContainerElGap,\n  }): void {\n    chipEls.forEach((chipEl: HTMLCalciteChipElement) => {\n      if (!chipEl.selected) {\n        this.hideChip(chipEl);\n      } else {\n        const chipElWidth = getElementWidth(chipEl);\n        if (chipElWidth && chipElWidth < availableHorizontalChipElSpace) {\n          availableHorizontalChipElSpace -= chipElWidth + chipContainerElGap;\n          this.showChip(chipEl);\n          return;\n        }\n      }\n      this.hideChip(chipEl);\n    });\n  }\n\n  private refreshSelectionDisplay = async () => {\n    await componentLoaded(this);\n\n    if (isSingleLike(this.selectionMode)) {\n      return;\n    }\n\n    if (!this.textInput) {\n      return;\n    }\n\n    const {\n      allSelectedIndicatorChipEl,\n      chipContainerEl,\n      selectionDisplay,\n      placeholder,\n      selectedIndicatorChipEl,\n      textInput,\n    } = this;\n\n    const chipContainerElGap = parseInt(getComputedStyle(chipContainerEl).gap.replace(\"px\", \"\"));\n    const chipContainerElWidth = getElementWidth(chipContainerEl);\n    const { fontSize, fontFamily } = getComputedStyle(textInput);\n    const inputTextWidth = getTextWidth(placeholder, `${fontSize} ${fontFamily}`);\n    const inputWidth = (inputTextWidth || parseInt(calciteSize48)) + chipContainerElGap;\n    const allSelectedIndicatorChipElWidth = getElementWidth(allSelectedIndicatorChipEl);\n    const selectedIndicatorChipElWidth = getElementWidth(selectedIndicatorChipEl);\n    const largestSelectedIndicatorChipWidth = Math.max(\n      allSelectedIndicatorChipElWidth,\n      selectedIndicatorChipElWidth,\n    );\n\n    this.setCompactSelectionDisplay({\n      chipContainerElGap,\n      chipContainerElWidth,\n      inputWidth,\n      largestSelectedIndicatorChipWidth,\n    });\n\n    if (selectionDisplay === \"fit\") {\n      const chipEls = Array.from(this.el.shadowRoot.querySelectorAll(\"calcite-chip\")).filter(\n        (chipEl) => chipEl.closable,\n      );\n\n      const availableHorizontalChipElSpace = Math.round(\n        chipContainerElWidth -\n          ((this.selectedHiddenChipsCount > 0 ? selectedIndicatorChipElWidth : 0) +\n            chipContainerElGap +\n            inputWidth +\n            chipContainerElGap),\n      );\n\n      this.refreshChipDisplay({ availableHorizontalChipElSpace, chipContainerElGap, chipEls });\n      this.setVisibleAndHiddenChips(chipEls);\n    }\n  };\n\n  setFloatingEl = (el: HTMLDivElement): void => {\n    this.floatingEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  private setCompactSelectionDisplay({\n    chipContainerElGap,\n    chipContainerElWidth,\n    inputWidth,\n    largestSelectedIndicatorChipWidth,\n  }): void {\n    const newCompactBreakpoint = Math.round(\n      largestSelectedIndicatorChipWidth + chipContainerElGap + inputWidth,\n    );\n    if (!this.maxCompactBreakpoint || this.maxCompactBreakpoint < newCompactBreakpoint) {\n      this.maxCompactBreakpoint = newCompactBreakpoint;\n    }\n    this.compactSelectionDisplay = chipContainerElWidth < this.maxCompactBreakpoint;\n  }\n\n  setContainerEl = (el: HTMLDivElement): void => {\n    this.resizeObserver.observe(el);\n    this.listContainerEl = el;\n    this.transitionEl = el;\n  };\n\n  setChipContainerEl = (el: HTMLDivElement): void => {\n    this.resizeObserver.observe(el);\n    this.chipContainerEl = el;\n  };\n\n  setReferenceEl = (el: HTMLDivElement): void => {\n    this.referenceEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  setAllSelectedIndicatorChipEl = (el: HTMLCalciteChipElement): void => {\n    this.allSelectedIndicatorChipEl = el;\n  };\n\n  setSelectedIndicatorChipEl = (el: HTMLCalciteChipElement): void => {\n    this.selectedIndicatorChipEl = el;\n  };\n\n  private setVisibleAndHiddenChips(chipEls: HTMLCalciteChipElement[]): void {\n    let newSelectedVisibleChipsCount = 0;\n    chipEls.forEach((chipEl) => {\n      if (chipEl.selected && !chipEl.classList.contains(CSS.chipInvisible)) {\n        newSelectedVisibleChipsCount++;\n      }\n    });\n    if (newSelectedVisibleChipsCount !== this.selectedVisibleChipsCount) {\n      this.selectedVisibleChipsCount = newSelectedVisibleChipsCount;\n    }\n    const newSelectedHiddenChipsCount =\n      this.getSelectedItems().length - newSelectedVisibleChipsCount;\n    if (newSelectedHiddenChipsCount !== this.selectedHiddenChipsCount) {\n      this.selectedHiddenChipsCount = newSelectedHiddenChipsCount;\n    }\n  }\n\n  private getMaxScrollerHeight(): number {\n    const items = this.getItemsAndGroups().filter((item) => !item.hidden);\n\n    const { maxItems } = this;\n\n    let itemsToProcess = 0;\n    let maxScrollerHeight = 0;\n\n    if (items.length > maxItems) {\n      items.forEach((item) => {\n        if (itemsToProcess < maxItems) {\n          const height = this.calculateScrollerHeight(item);\n          if (height > 0) {\n            maxScrollerHeight += height;\n            itemsToProcess++;\n          }\n        }\n      });\n    }\n\n    return maxScrollerHeight;\n  }\n\n  private calculateScrollerHeight(item: ComboboxChildElement): number {\n    if (!item) {\n      return;\n    }\n\n    // if item has children items, don't count their height twice\n    const parentHeight = item.getBoundingClientRect().height;\n    const childrenTotalHeight = Array.from(\n      item.querySelectorAll<ComboboxChildElement>(ComboboxChildSelector),\n    ).reduce((total, child) => total + child.getBoundingClientRect().height, 0);\n\n    return parentHeight - childrenTotalHeight;\n  }\n\n  inputHandler = (event: Event): void => {\n    const value = (event.target as HTMLInputElement).value;\n    this.filterText = value;\n  };\n\n  getItemsAndGroups(): ComboboxChildElement[] {\n    return [...this.groupItems, ...this.items];\n  }\n\n  private filterItems = (() => {\n    const find = (item: ComboboxChildElement, filteredData: ItemData[]) =>\n      item &&\n      filteredData.some(({ label, value }) =>\n        isGroup(item) ? label === item.label : value === item.value && label === item.textLabel,\n      );\n\n    return debounce((text: string, setOpenToEmptyState = false, emit = true): void => {\n      const filteredData = filter(this.data, text);\n      const itemsAndGroups = this.getItemsAndGroups();\n\n      const matchAll = text === \"\";\n\n      itemsAndGroups.forEach((item) => {\n        if (matchAll) {\n          item.hidden = false;\n          return;\n        }\n\n        const hidden = !find(item, filteredData);\n        item.hidden = hidden;\n        const [parent, grandparent] = item.ancestors;\n\n        if (find(parent, filteredData) || find(grandparent, filteredData)) {\n          item.hidden = false;\n        }\n\n        if (!hidden) {\n          item.ancestors.forEach((ancestor) => (ancestor.hidden = false));\n        }\n      });\n\n      this.filterTextMatchPattern =\n        this.filterText && new RegExp(`(${escapeRegExp(this.filterText)})`, \"i\");\n\n      this.filteredItems = this.getFilteredItems();\n      this.filteredItems.forEach((item) => {\n        item.filterTextMatchPattern = this.filterTextMatchPattern;\n      });\n\n      if (setOpenToEmptyState) {\n        this.open = this.filterText.trim().length > 0 && this.filteredItems.length > 0;\n      }\n\n      if (emit) {\n        this.calciteComboboxFilterChange.emit();\n      }\n    }, DEBOUNCE.filter);\n  })();\n\n  internalComboboxChangeEvent = (): void => {\n    this.calciteComboboxChange.emit();\n  };\n\n  private emitComboboxChange = debounce(this.internalComboboxChangeEvent, 0);\n\n  toggleSelection(item: HTMLCalciteComboboxItemElement, value: boolean): void {\n    if (\n      !item ||\n      (this.selectionMode === \"single-persist\" &&\n        item.selected &&\n        item.value === this.value &&\n        !value)\n    ) {\n      return;\n    }\n\n    if (this.isMulti()) {\n      item.selected = value;\n      this.updateAncestors(item);\n      this.selectedItems = this.getSelectedItems();\n      this.emitComboboxChange();\n      this.resetText();\n      this.filterItems(\"\");\n    } else {\n      this.ignoreSelectedEventsFlag = true;\n      this.items.forEach((el) => (el.selected = el === item ? value : false));\n      this.ignoreSelectedEventsFlag = false;\n      this.selectedItems = this.getSelectedItems();\n      this.emitComboboxChange();\n\n      if (this.textInput) {\n        this.textInput.value = getLabel(item);\n      }\n      this.open = false;\n      this.updateActiveItemIndex(-1);\n      this.resetText();\n      this.filterItems(\"\");\n    }\n  }\n\n  updateAncestors(item: HTMLCalciteComboboxItemElement): void {\n    if (this.selectionMode !== \"ancestors\") {\n      return;\n    }\n    const ancestors = getItemAncestors(item);\n    const children = getItemChildren(item);\n    if (item.selected) {\n      ancestors.forEach((el) => {\n        el.selected = true;\n      });\n    } else {\n      children.forEach((el) => (el.selected = false));\n      [...ancestors].forEach((el) => {\n        if (!hasActiveChildren(el)) {\n          el.selected = false;\n        }\n      });\n    }\n  }\n\n  getFilteredItems(): HTMLCalciteComboboxItemElement[] {\n    return this.filterText === \"\" ? this.items : this.items.filter((item) => !item.hidden);\n  }\n\n  private getSelectedItems = (): HTMLCalciteComboboxItemElement[] => {\n    if (!this.isMulti()) {\n      const match = this.items.find(({ selected }) => selected);\n      return match ? [match] : [];\n    }\n\n    return (\n      this.items\n        .filter(\n          (item) =>\n            item.selected && (this.selectionMode !== \"ancestors\" || !hasActiveChildren(item)),\n        )\n        /** Preserve order of entered tags */\n        .sort((a, b) => {\n          const aIdx = this.selectedItems.indexOf(a);\n          const bIdx = this.selectedItems.indexOf(b);\n          if (aIdx > -1 && bIdx > -1) {\n            return aIdx - bIdx;\n          }\n          return bIdx - aIdx;\n        })\n    );\n  };\n\n  private updateItems = (): void => {\n    this.items = this.getItems();\n    this.groupItems = this.getGroupItems();\n    this.data = this.getData();\n    this.selectedItems = this.getSelectedItems();\n    this.filteredItems = this.getFilteredItems();\n    this.needsIcon = this.getNeedsIcon();\n\n    this.items.forEach((item) => {\n      item.selectionMode = this.selectionMode;\n      item.scale = this.scale;\n    });\n\n    if (!this.allowCustomValues) {\n      this.setMaxScrollerHeight();\n    }\n\n    this.groupItems.forEach((groupItem, index, items) => {\n      if (index === 0) {\n        groupItem.afterEmptyGroup = false;\n      }\n\n      const nextGroupItem = items[index + 1];\n\n      if (nextGroupItem) {\n        nextGroupItem.afterEmptyGroup = groupItem.children.length === 0;\n      }\n    });\n  };\n\n  getData(): ItemData[] {\n    return this.items.map((item) => ({\n      description: item.description,\n      filterDisabled: item.filterDisabled,\n      label: item.textLabel,\n      metadata: item.metadata,\n      shortHeading: item.shortHeading,\n      value: item.value,\n    }));\n  }\n\n  getNeedsIcon(): boolean {\n    return isSingleLike(this.selectionMode) && this.items.some((item) => item.icon);\n  }\n\n  resetText(): void {\n    if (this.textInput) {\n      this.textInput.value = \"\";\n    }\n    this.filterText = \"\";\n  }\n\n  getItems(): HTMLCalciteComboboxItemElement[] {\n    const items: HTMLCalciteComboboxItemElement[] = Array.from(\n      this.el.querySelectorAll(ComboboxItem),\n    );\n    return items.filter((item) => !item.disabled);\n  }\n\n  getGroupItems(): HTMLCalciteComboboxItemGroupElement[] {\n    return Array.from(this.el.querySelectorAll(ComboboxItemGroup));\n  }\n\n  addCustomChip(value: string, focus?: boolean): void {\n    const existingItem = this.items.find((el) => el.textLabel === value);\n    if (existingItem) {\n      this.toggleSelection(existingItem, true);\n    } else {\n      if (!this.isMulti()) {\n        this.toggleSelection(this.selectedItems[this.selectedItems.length - 1], false);\n      }\n      const item = document.createElement(\"calcite-combobox-item\");\n      item.value = value;\n      item.textLabel = value;\n      item.selected = true;\n      this.el.prepend(item);\n      this.resetText();\n      if (focus) {\n        this.setFocus();\n      }\n      this.updateItems();\n      this.filterItems(\"\");\n      this.open = true;\n      this.emitComboboxChange();\n    }\n  }\n\n  removeActiveChip(): void {\n    this.toggleSelection(this.selectedItems[this.activeChipIndex], false);\n    this.setFocus();\n  }\n\n  removeLastChip(): void {\n    this.toggleSelection(this.selectedItems[this.selectedItems.length - 1], false);\n    this.setFocus();\n  }\n\n  previousChip(): void {\n    const length = this.selectedItems.length - 1;\n    const active = this.activeChipIndex;\n    this.activeChipIndex = active === -1 ? length : Math.max(active - 1, 0);\n    this.updateActiveItemIndex(-1);\n    this.focusChip();\n  }\n\n  nextChip(): void {\n    const last = this.selectedItems.length - 1;\n    const newIndex = this.activeChipIndex + 1;\n    if (newIndex > last) {\n      this.activeChipIndex = -1;\n      this.setFocus();\n    } else {\n      this.activeChipIndex = newIndex;\n      this.focusChip();\n    }\n    this.updateActiveItemIndex(-1);\n  }\n\n  focusChip(): void {\n    const guid = this.selectedItems[this.activeChipIndex]?.guid;\n\n    const chip = guid\n      ? this.referenceEl.querySelector<HTMLCalciteChipElement>(`#${chipUidPrefix}${guid}`)\n      : null;\n    chip?.setFocus();\n  }\n\n  private scrollToActiveItem = (): void => {\n    const activeItem = this.filteredItems[this.activeItemIndex];\n\n    if (!activeItem) {\n      return;\n    }\n\n    const height = this.calculateScrollerHeight(activeItem);\n    const { offsetHeight, scrollTop } = this.listContainerEl;\n    if (offsetHeight + scrollTop < activeItem.offsetTop + height) {\n      this.listContainerEl.scrollTop = activeItem.offsetTop - offsetHeight + height;\n    } else if (activeItem.offsetTop < scrollTop) {\n      this.listContainerEl.scrollTop = activeItem.offsetTop;\n    }\n  };\n\n  shiftActiveItemIndex(delta: number): void {\n    const { length } = this.filteredItems;\n    const newIndex = (this.activeItemIndex + length + delta) % length;\n    this.updateActiveItemIndex(newIndex);\n    this.scrollToActiveItem();\n  }\n\n  updateActiveItemIndex(index: number): void {\n    this.activeItemIndex = index;\n    let activeDescendant: string = null;\n    this.filteredItems.forEach((el, i) => {\n      if (i === index) {\n        el.active = true;\n        activeDescendant = `${itemUidPrefix}${el.guid}`;\n      } else {\n        el.active = false;\n      }\n    });\n    this.activeDescendant = activeDescendant;\n    if (this.activeItemIndex > -1) {\n      this.activeChipIndex = -1;\n    }\n  }\n\n  private isAllSelected(): boolean {\n    return this.getItems().length === this.getSelectedItems().length;\n  }\n\n  isMulti(): boolean {\n    return !isSingleLike(this.selectionMode);\n  }\n\n  comboboxFocusHandler = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.textInput?.focus();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderChips(): VNode[] {\n    const { activeChipIndex, readOnly, scale, selectionMode, messages } = this;\n    return this.selectedItems.map((item, i) => {\n      const chipClasses = {\n        chip: true,\n        \"chip--active\": activeChipIndex === i,\n      };\n      const ancestors = [...getItemAncestors(item)].reverse();\n      const itemLabel = getLabel(item);\n      const pathLabel = [...ancestors, item].map((el) => getLabel(el));\n      const label = selectionMode !== \"ancestors\" ? itemLabel : pathLabel.join(\" / \");\n\n      return (\n        <calcite-chip\n          appearance={readOnly ? \"outline\" : \"solid\"}\n          class={chipClasses}\n          closable={!readOnly}\n          data-test-id={`chip-${i}`}\n          icon={item.icon}\n          iconFlipRtl={item.iconFlipRtl}\n          id={item.guid ? `${chipUidPrefix}${item.guid}` : null}\n          key={itemLabel}\n          messageOverrides={{ dismissLabel: messages.removeTag }}\n          onCalciteChipClose={() => this.calciteChipCloseHandler(item)}\n          onFocusin={() => (this.activeChipIndex = i)}\n          scale={scale}\n          selected={item.selected}\n          tabindex={activeChipIndex === i ? 0 : -1}\n          title={label}\n          value={item.value}\n        >\n          {label}\n        </calcite-chip>\n      );\n    });\n  }\n\n  renderAllSelectedIndicatorChip(): VNode {\n    const {\n      compactSelectionDisplay,\n      scale,\n      selectedVisibleChipsCount,\n      setAllSelectedIndicatorChipEl,\n    } = this;\n    const label = this.messages.allSelected;\n    return (\n      <calcite-chip\n        class={{\n          chip: true,\n          [CSS.chipInvisible]: !(\n            this.isAllSelected() &&\n            !selectedVisibleChipsCount &&\n            !compactSelectionDisplay\n          ),\n        }}\n        ref={setAllSelectedIndicatorChipEl}\n        scale={scale}\n        title={label}\n        value=\"\"\n      >\n        {label}\n      </calcite-chip>\n    );\n  }\n\n  renderAllSelectedIndicatorChipCompact(): VNode {\n    const { compactSelectionDisplay, scale, selectedVisibleChipsCount } = this;\n    const label = this.messages.all || \"All\";\n    return (\n      <calcite-chip\n        class={{\n          chip: true,\n          [CSS.chipInvisible]: !(\n            this.isAllSelected() &&\n            !selectedVisibleChipsCount &&\n            compactSelectionDisplay\n          ),\n        }}\n        scale={scale}\n        title={label}\n        value=\"\"\n      >\n        {label}\n      </calcite-chip>\n    );\n  }\n\n  renderSelectedIndicatorChip(): VNode {\n    const {\n      compactSelectionDisplay,\n      selectionDisplay,\n      getSelectedItems,\n      scale,\n      selectedHiddenChipsCount,\n      selectedVisibleChipsCount,\n      setSelectedIndicatorChipEl,\n    } = this;\n    let chipInvisible: boolean;\n    let label: string;\n\n    if (compactSelectionDisplay) {\n      chipInvisible = true;\n    } else {\n      if (selectionDisplay === \"single\") {\n        const selectedItemsCount = getSelectedItems().length;\n        if (this.isAllSelected()) {\n          chipInvisible = true;\n        } else if (selectedItemsCount > 0) {\n          chipInvisible = false;\n        } else {\n          chipInvisible = true;\n        }\n        label = `${selectedItemsCount} ${this.messages.selected}`;\n      } else if (selectionDisplay === \"fit\") {\n        chipInvisible = !!(\n          (this.isAllSelected() && selectedVisibleChipsCount === 0) ||\n          selectedHiddenChipsCount === 0\n        );\n        label =\n          selectedVisibleChipsCount > 0\n            ? `+${selectedHiddenChipsCount}`\n            : `${selectedHiddenChipsCount} ${this.messages.selected}`;\n      }\n    }\n    return (\n      <calcite-chip\n        class={{\n          chip: true,\n          [CSS.chipInvisible]: chipInvisible,\n        }}\n        ref={setSelectedIndicatorChipEl}\n        scale={scale}\n        title={label}\n        value=\"\"\n      >\n        {label}\n      </calcite-chip>\n    );\n  }\n\n  renderSelectedIndicatorChipCompact(): VNode {\n    const {\n      compactSelectionDisplay,\n      selectionDisplay,\n      getSelectedItems,\n      scale,\n      selectedHiddenChipsCount,\n    } = this;\n    let chipInvisible: boolean;\n    let label: string;\n\n    if (compactSelectionDisplay) {\n      const selectedItemsCount = getSelectedItems().length;\n      if (this.isAllSelected()) {\n        chipInvisible = true;\n      } else if (selectionDisplay === \"fit\") {\n        chipInvisible = !(selectedHiddenChipsCount > 0);\n        label = `${selectedHiddenChipsCount || 0}`;\n      } else if (selectionDisplay === \"single\") {\n        chipInvisible = !(selectedItemsCount > 0);\n        label = `${selectedItemsCount}`;\n      }\n    } else {\n      chipInvisible = true;\n    }\n    return (\n      <calcite-chip\n        class={{\n          chip: true,\n          [CSS.chipInvisible]: chipInvisible,\n        }}\n        scale={scale}\n        title={label}\n        value=\"\"\n      >\n        {label}\n      </calcite-chip>\n    );\n  }\n\n  private get showingInlineIcon(): boolean {\n    const { placeholderIcon, selectionMode, selectedItems, open } = this;\n    const selectedItem = selectedItems[0];\n    const selectedIcon = selectedItem?.icon;\n    const singleSelectionMode = isSingleLike(selectionMode);\n\n    return !open && selectedItem\n      ? !!selectedIcon && singleSelectionMode\n      : !!placeholderIcon && (!selectedItem || singleSelectionMode);\n  }\n\n  private renderInput(): VNode {\n    const { guid, disabled, placeholder, selectionMode, selectedItems, open } = this;\n    const single = isSingleLike(selectionMode);\n    const selectedItem = selectedItems[0];\n    const showLabel = !open && single && !!selectedItem && !this.filterText;\n\n    return (\n      <span\n        class={{\n          \"input-wrap\": true,\n          \"input-wrap--single\": single,\n        }}\n      >\n        {showLabel && (\n          <span\n            class={{\n              label: true,\n              \"label--icon\": !!selectedItem?.icon,\n            }}\n            key=\"label\"\n          >\n            {getLabel(selectedItem)}\n          </span>\n        )}\n        <input\n          aria-activedescendant={this.activeDescendant}\n          aria-autocomplete=\"list\"\n          aria-controls={`${listboxUidPrefix}${guid}`}\n          aria-errormessage={IDS.validationMessage}\n          aria-expanded={toAriaBoolean(open)}\n          aria-haspopup=\"listbox\"\n          aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n          aria-label={getLabelText(this)}\n          aria-owns={`${listboxUidPrefix}${guid}`}\n          class={{\n            [CSS.input]: true,\n            \"input--single\": true,\n            [CSS.inputHidden]: showLabel,\n            \"input--icon\": this.showingInlineIcon && !!this.placeholderIcon,\n          }}\n          data-test-id=\"input\"\n          disabled={disabled}\n          id={`${inputUidPrefix}${guid}`}\n          key=\"input\"\n          onFocus={this.comboboxFocusHandler}\n          onInput={this.inputHandler}\n          placeholder={placeholder}\n          readOnly={this.readOnly}\n          ref={(el) => (this.textInput = el)}\n          role=\"combobox\"\n          tabindex={this.activeChipIndex === -1 ? 0 : -1}\n          type=\"text\"\n          value={this.filterText}\n        />\n      </span>\n    );\n  }\n\n  renderListBoxOptions(): VNode[] {\n    return this.filteredItems.map((item) => (\n      <li\n        aria-selected={toAriaBoolean(item.selected)}\n        id={item.guid ? `${itemUidPrefix}${item.guid}` : null}\n        role=\"option\"\n        tabindex=\"-1\"\n      >\n        {item.textLabel}\n      </li>\n    ));\n  }\n\n  renderFloatingUIContainer(): VNode {\n    const { setFloatingEl, setContainerEl, open } = this;\n    const classes = {\n      [CSS.listContainer]: true,\n      [FloatingCSS.animation]: true,\n      [FloatingCSS.animationActive]: open,\n    };\n\n    return (\n      <div\n        aria-hidden=\"true\"\n        class={{\n          \"floating-ui-container\": true,\n          \"floating-ui-container--active\": open,\n        }}\n        ref={setFloatingEl}\n      >\n        <div class={classes} ref={setContainerEl}>\n          <ul class={{ list: true, \"list--hide\": !open }}>\n            <slot />\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  renderSelectedOrPlaceholderIcon(): VNode {\n    const { open, placeholderIcon, placeholderIconFlipRtl, selectedItems } = this;\n    const selectedItem = selectedItems[0];\n    const selectedIcon = selectedItem?.icon;\n    const showPlaceholder = placeholderIcon && (open || !selectedItem);\n\n    return (\n      this.showingInlineIcon && (\n        <span class=\"icon-start\" key=\"selected-placeholder-icon\">\n          <calcite-icon\n            class={{\n              [CSS.selectedIcon]: !showPlaceholder,\n              [CSS.placeholderIcon]: showPlaceholder,\n            }}\n            flipRtl={showPlaceholder ? placeholderIconFlipRtl : selectedItem.iconFlipRtl}\n            icon={showPlaceholder ? placeholderIcon : selectedIcon}\n            scale={getIconScale(this.scale)}\n          />\n        </span>\n      )\n    );\n  }\n\n  renderChevronIcon(): VNode {\n    const { open } = this;\n    return (\n      <span class=\"icon-end\" key=\"chevron\">\n        <calcite-icon\n          class={CSS.icon}\n          icon={open ? \"chevron-up\" : \"chevron-down\"}\n          scale={getIconScale(this.scale)}\n        />\n      </span>\n    );\n  }\n\n  render(): VNode {\n    const { selectionDisplay, guid, label, open, readOnly } = this;\n    const singleSelectionMode = isSingleLike(this.selectionMode);\n    const allSelectionDisplay = selectionDisplay === \"all\";\n    const singleSelectionDisplay = selectionDisplay === \"single\";\n    const fitSelectionDisplay = !singleSelectionMode && selectionDisplay === \"fit\";\n    const isClearable = !this.clearDisabled && this.value?.length > 0;\n\n    return (\n      <Host onClick={this.comboboxFocusHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-live=\"polite\"\n            class={{\n              wrapper: true,\n              \"wrapper--single\": singleSelectionMode || !this.selectedItems.length,\n              \"wrapper--active\": open,\n            }}\n            onClick={this.clickHandler}\n            onKeyDown={this.keyDownHandler}\n            ref={this.setReferenceEl}\n          >\n            {this.renderSelectedOrPlaceholderIcon()}\n            <div\n              class={{\n                \"grid-input\": true,\n                [CSS.selectionDisplayFit]: fitSelectionDisplay,\n                [CSS.selectionDisplaySingle]: singleSelectionDisplay,\n              }}\n              key=\"grid\"\n              ref={this.setChipContainerEl}\n            >\n              {!singleSelectionMode && !singleSelectionDisplay && this.renderChips()}\n              {!singleSelectionMode &&\n                !allSelectionDisplay && [\n                  this.renderSelectedIndicatorChip(),\n                  this.renderSelectedIndicatorChipCompact(),\n                  this.renderAllSelectedIndicatorChip(),\n                  this.renderAllSelectedIndicatorChipCompact(),\n                ]}\n              <label\n                class=\"screen-readers-only\"\n                htmlFor={`${inputUidPrefix}${guid}`}\n                id={`${labelUidPrefix}${guid}`}\n              >\n                {label}\n              </label>\n              {this.renderInput()}\n            </div>\n            {!readOnly && isClearable ? (\n              <XButton\n                disabled={this.disabled}\n                key=\"close-button\"\n                label={this.messages.clear}\n                scale={this.scale}\n              />\n            ) : null}\n            {!readOnly && this.renderChevronIcon()}\n          </div>\n          <ul\n            aria-labelledby={`${labelUidPrefix}${guid}`}\n            aria-multiselectable=\"true\"\n            class=\"screen-readers-only\"\n            id={`${listboxUidPrefix}${guid}`}\n            role=\"listbox\"\n            tabIndex={-1}\n          >\n            {this.renderListBoxOptions()}\n          </ul>\n          {this.renderFloatingUIContainer()}\n          <HiddenFormInputSlot component={this} />\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","import { Scale } from \"../interfaces\";\n\nexport const CSS = {\n  active: \"label--active\",\n  centerContent: \"center-content\",\n  container: \"container\",\n  custom: \"icon--custom\",\n  description: \"description\",\n  dot: \"icon--dot\",\n  filterMatch: \"filter-match\",\n  icon: \"icon\",\n  iconActive: \"icon--active\",\n  label: \"label\",\n  scale: (scale: Scale) => `scale--${scale}` as const,\n  selected: \"label--selected\",\n  shortText: \"short-text\",\n  single: \"label--single\",\n  textContainer: \"text-container\",\n  title: \"title\",\n};\n\nexport const SLOTS = {\n  contentEnd: \"content-end\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { ComboboxChildElement } from \"../combobox/interfaces\";\nimport { getAncestors, getDepth, isSingleLike } from \"../combobox/utils\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding nested `calcite-combobox-item`s.\n * @slot content-end - A slot for adding non-actionable elements after the component's content.\n */\n@Component({\n  tag: \"calcite-combobox-item\",\n  styleUrl: \"combobox-item.scss\",\n  shadow: true,\n})\nexport class ComboboxItem implements ConditionalSlotComponent, InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** When `true`, the component is active. */\n  @Prop({ reflect: true }) active = false;\n\n  /** Specifies the parent and grandparent items, which are set on `calcite-combobox`. */\n  @Prop({ mutable: true }) ancestors: ComboboxChildElement[];\n\n  /**\n   * A description for the component, which displays below the label.\n   */\n  @Prop() description: string;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  @Watch(\"textLabel\")\n  handleComboboxItemPropsChange(): void {\n    this.calciteInternalComboboxItemChange.emit();\n  }\n\n  /**\n   * When `true`, omits the component from the `calcite-combobox` filtered search results.\n   */\n  @Prop({ reflect: true }) filterDisabled: boolean;\n\n  /**\n   * Pattern for highlighting filter text matches.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterTextMatchPattern: RegExp;\n\n  /** The `id` attribute of the component. When omitted, a globally unique identifier is used. */\n  @Prop({ reflect: true }) guid = guid();\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  @Watch(\"selected\")\n  selectedWatchHandler(): void {\n    this.calciteComboboxItemChange.emit();\n  }\n\n  /**\n   * Provides additional metadata to the component used in filtering.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-combobox`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection,\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection, and\n   *\n   * `\"ancestors\"` allows multiple selections, but shows ancestors of selected items as selected, with only deepest children shown in chips.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"single\" | \"single-persist\" | \"ancestors\" | \"multiple\",\n    SelectionMode\n  > = \"multiple\";\n\n  /**\n   * The component's short heading.\n   *\n   * When provided, the short heading will be displayed in the component's selection.\n   *\n   * It is recommended to use 5 characters or fewer.\n   */\n  @Prop() shortHeading: string;\n\n  /** The component's text. */\n  @Prop() heading: string;\n\n  /**\n   * The component's text.\n   *\n   * @deprecated Use `heading` instead.\n   */\n  @Prop({ reflect: true }) textLabel!: string;\n\n  /** The component's value. */\n  @Prop() value!: any;\n\n  /** The component's label. */\n  @Prop() label: any;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteComboboxItemElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.ancestors = getAncestors(this.el);\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires whenever the component is selected or unselected.\n   *\n   */\n  @Event({ cancelable: false }) calciteComboboxItemChange: EventEmitter<void>;\n\n  /**\n   * Fires whenever a property the parent combobox needs to know about is changed.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalComboboxItemChange: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  toggleSelected(): Promise<void> {\n    const isSinglePersistSelect = this.selectionMode === \"single-persist\";\n\n    if (this.disabled || (isSinglePersistSelect && this.selected)) {\n      return;\n    }\n\n    this.selected = !this.selected;\n  }\n\n  private itemClickHandler = (): void => {\n    this.toggleSelected();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderIcon(iconPath: IconNameOrString): VNode {\n    return this.icon ? (\n      <calcite-icon\n        class={{\n          [CSS.custom]: !!this.icon,\n          [CSS.iconActive]: this.icon && this.selected,\n        }}\n        flipRtl={this.iconFlipRtl}\n        icon={this.icon || iconPath}\n        key=\"icon\"\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n  }\n\n  renderSelectIndicator(showDot: boolean): VNode;\n  renderSelectIndicator(showDot: boolean, iconPath: IconNameOrString): VNode;\n  renderSelectIndicator(showDot: boolean, iconPath?: IconNameOrString): VNode {\n    return showDot ? (\n      <span\n        class={{\n          [CSS.icon]: true,\n          [CSS.dot]: true,\n        }}\n      />\n    ) : (\n      <calcite-icon\n        class={{\n          [CSS.icon]: true,\n          [CSS.iconActive]: this.selected,\n        }}\n        flipRtl={this.iconFlipRtl}\n        icon={iconPath}\n        key=\"indicator\"\n        scale={getIconScale(this.scale)}\n      />\n    );\n  }\n\n  renderChildren(): VNode {\n    if (getSlotted(this.el)) {\n      return (\n        <ul key=\"default-slot-container\">\n          <slot />\n        </ul>\n      );\n    }\n\n    return null;\n  }\n\n  render(): VNode {\n    const { disabled, heading, label, textLabel, value } = this;\n    const isSingleSelect = isSingleLike(this.selectionMode);\n    const defaultIcon = isSingleSelect ? undefined : \"check\";\n    const headingText = heading || textLabel;\n    const iconPath = disabled ? undefined : defaultIcon;\n    const itemLabel = label || value;\n    const showDot = isSingleSelect && !disabled;\n\n    const classes = {\n      [CSS.label]: true,\n      [CSS.selected]: this.selected,\n      [CSS.active]: this.active,\n      [CSS.single]: isSingleSelect,\n    };\n    const depth = getDepth(this.el) + 1;\n\n    return (\n      <Host aria-hidden=\"true\" aria-label={itemLabel}>\n        <InteractiveContainer disabled={disabled}>\n          <div\n            class={{\n              [CSS.container]: true,\n              [CSS.scale(this.scale)]: true,\n            }}\n            style={{ \"--calcite-combobox-item-spacing-indent-multiplier\": `${depth}` }}\n          >\n            <li class={classes} id={this.guid} onClick={this.itemClickHandler}>\n              {this.renderSelectIndicator(showDot, iconPath)}\n              {this.renderIcon(iconPath)}\n              <div class={CSS.centerContent}>\n                <div class={CSS.title}>{this.renderTextContent(headingText)}</div>\n                {this.description ? (\n                  <div class={CSS.description}>{this.renderTextContent(this.description)}</div>\n                ) : null}\n              </div>\n              {this.shortHeading ? (\n                <div class={CSS.shortText}>{this.renderTextContent(this.shortHeading)}</div>\n              ) : null}\n              <slot name={SLOTS.contentEnd} />\n            </li>\n            {this.renderChildren()}\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  private renderTextContent(text: string): string | (string | VNode)[] {\n    const pattern = this.filterTextMatchPattern;\n\n    if (!pattern || !text) {\n      return text;\n    }\n\n    const parts: (string | VNode)[] = text.split(pattern);\n\n    if (parts.length > 1) {\n      // we only highlight the first match\n      parts[1] = <mark class={CSS.filterMatch}>{parts[1]}</mark>;\n    }\n\n    return parts;\n  }\n}\n","@include base-component();\n\n.scale--s {\n  @apply text-n2h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.1\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.2\");\n  --calcite-combobox-item-selector-icon-size: theme(\"spacing.4\");\n  --calcite-internal-combobox-item-description-font-size: var(--calcite-font-size-xs);\n}\n\n.scale--m {\n  @apply text-n1h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.3\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing[1.5]\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.3\");\n  --calcite-combobox-item-selector-icon-size: theme(\"spacing.4\");\n  --calcite-internal-combobox-item-description-font-size: var(--calcite-font-size-sm);\n}\n\n.scale--l {\n  @apply text-0h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.4\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing[2.5]\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.4\");\n  --calcite-combobox-item-selector-icon-size: theme(\"spacing.6\");\n  --calcite-internal-combobox-item-description-font-size: var(--calcite-font-size);\n}\n\n.container {\n  --calcite-combobox-item-indent-value: calc(\n    var(--calcite-combobox-item-spacing-indent) * var(--calcite-combobox-item-spacing-indent-multiplier)\n  );\n}\n\n:host(:focus) {\n  @apply shadow-none;\n}\n\n@include disabled();\n\n:host,\nul {\n  @apply m-0 flex flex-col p-0;\n}\n\n:host(:focus),\nul:focus {\n  @apply outline-none;\n}\n\n.label {\n  @apply text-color-3\n  focus-base\n  relative\n  box-border\n  flex\n  w-full\n  min-w-full\n  cursor-pointer\n  items-center\n  no-underline\n  duration-150\n  ease-in-out;\n  @include word-break();\n  justify-content: space-around;\n  gap: var(--calcite-combobox-item-spacing-unit-l);\n  padding-block: var(--calcite-combobox-item-spacing-unit-s);\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n  padding-inline-start: var(--calcite-combobox-item-indent-value);\n}\n\n:host([disabled]) .label {\n  @apply cursor-default;\n}\n\n// selected state\n.label--selected {\n  @apply text-color-1;\n\n  .title {\n    @apply font-medium;\n  }\n}\n\n.label--active {\n  @apply focus-inset;\n}\n\n.label:hover,\n.label:active {\n  @apply text-color-1\n    bg-foreground-2\n    no-underline\n    shadow-none;\n}\n\n.icon {\n  @apply inline-flex\n    opacity-0\n    duration-150\n    ease-in-out;\n  color: theme(\"borderColor.color.1\");\n}\n\n.icon--custom {\n  margin-block-start: -1px;\n  @apply text-color-3;\n}\n\n.icon--active {\n  @apply text-color-1;\n}\n\n.icon--dot {\n  @apply flex justify-center;\n  min-inline-size: var(--calcite-combobox-item-selector-icon-size);\n}\n\n.icon--dot::before {\n  text-align: start;\n  content: \"\\2022\";\n}\n\n.label--active .icon {\n  @apply opacity-100;\n}\n\n.label--selected .icon {\n  @apply opacity-100;\n  color: theme(\"backgroundColor.brand\");\n}\n\n:host(:hover[disabled]) .icon {\n  @apply opacity-100;\n}\n\n.filter-match {\n  font-weight: var(--calcite-font-weight-bold);\n  color: var(--calcite-color-text-1);\n  background-color: var(--calcite-color-foreground-current);\n}\n\n.center-content {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding-block: 0;\n}\n\n.description {\n  font-size: var(--calcite-internal-combobox-item-description-font-size);\n}\n\n:host([selected]),\n:host(:hover) {\n  .description {\n    color: var(--calcite-color-text-2);\n  }\n}\n\n.short-text {\n  color: var(--calcite-color-text-3);\n  white-space: nowrap;\n}\n\n.title {\n  color: var(--calcite-color-text-1);\n}\n\n.title,\n.description,\n.short-text {\n  line-height: var(--calcite-font-line-height-relative-snug);\n}\n","export const CSS = {\n  list: \"list\",\n  label: \"label\",\n  title: \"title\",\n};\n","import { Component, Element, h, Prop, VNode } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { ComboboxChildElement } from \"../combobox/interfaces\";\nimport { getAncestors, getDepth } from \"../combobox/utils\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-combobox-item`s.\n */\n@Component({\n  tag: \"calcite-combobox-item-group\",\n  styleUrl: \"combobox-item-group.scss\",\n  shadow: true,\n})\nexport class ComboboxItemGroup {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, signifies that the group comes after another group without any children (items or sub-groups), otherwise indicates that the group comes after another group that has children. Used for styling.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) afterEmptyGroup = false;\n\n  /** Specifies the parent and grandparent `calcite-combobox-item`s, which are set on `calcite-combobox`. */\n  @Prop({ mutable: true }) ancestors: ComboboxChildElement[];\n\n  /** Specifies the title of the component. */\n  @Prop() label!: string;\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-combobox`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.ancestors = getAncestors(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteComboboxItemGroupElement;\n\n  guid: string = guid();\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { el, scale } = this;\n    const depth = getDepth(el);\n\n    return (\n      <ul\n        aria-labelledby={this.guid}\n        class={{ [CSS.list]: true, [`scale--${scale}`]: true }}\n        role=\"group\"\n      >\n        <li\n          class={{ [CSS.label]: true }}\n          id={this.guid}\n          role=\"presentation\"\n          style={{ \"--calcite-combobox-item-spacing-indent-multiplier\": `${depth}` }}\n        >\n          <span class={CSS.title}>{this.label}</span>\n        </li>\n        <slot />\n      </ul>\n    );\n  }\n}\n",".scale--s {\n  @apply text-n2h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.1\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.2\");\n}\n\n.scale--m {\n  @apply text-n1h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.3\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.3\");\n}\n\n.scale--l {\n  @apply text-0h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.4\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.3\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.4\");\n}\n\n:host,\n.list {\n  @apply m-0 flex flex-col p-0;\n}\n\n:host(:focus),\n.list:focus {\n  @apply outline-none;\n}\n\n.label {\n  @apply text-color-3 box-border flex w-full min-w-0 max-w-full;\n}\n\n.title {\n  --calcite-combobox-item-indent-value: calc(\n    var(--calcite-combobox-item-spacing-indent) * var(--calcite-combobox-item-spacing-indent-multiplier)\n  );\n  border: 0 solid;\n  @apply border-b-color-3\n    text-color-2\n    word-break\n    block\n    flex-1\n    border-b\n    font-bold;\n  padding-block: var(--calcite-combobox-item-spacing-unit-l);\n  padding-inline: var(--calcite-combobox-item-spacing-unit-s);\n  margin-inline-start: var(--calcite-combobox-item-indent-value);\n}\n\n::slotted(calcite-combobox-item-group:not([after-empty-group])) {\n  padding-block-start: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n@include base-component();\n","import { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver, ExtendedMutationObserver } from \"./observers\";\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: ExtendedMutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  mutationObserver.unobserve(component.el);\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n","/**\n * Do not edit directly\n * Generated on Thu, 24 Oct 2024 00:22:20 GMT\n */\n\nexport const calciteColorNeutralBlk000 = \"#ffffff\";\nexport const calciteColorNeutralBlk005 = \"#f8f8f8\";\nexport const calciteColorNeutralBlk010 = \"#f3f3f3\";\nexport const calciteColorNeutralBlk020 = \"#eaeaea\";\nexport const calciteColorNeutralBlk030 = \"#dfdfdf\";\nexport const calciteColorNeutralBlk040 = \"#d4d4d4\";\nexport const calciteColorNeutralBlk050 = \"#cacaca\";\nexport const calciteColorNeutralBlk060 = \"#bfbfbf\";\nexport const calciteColorNeutralBlk070 = \"#b5b5b5\";\nexport const calciteColorNeutralBlk080 = \"#aaaaaa\";\nexport const calciteColorNeutralBlk090 = \"#9f9f9f\";\nexport const calciteColorNeutralBlk100 = \"#949494\";\nexport const calciteColorNeutralBlk110 = \"#8a8a8a\";\nexport const calciteColorNeutralBlk120 = \"#808080\";\nexport const calciteColorNeutralBlk130 = \"#757575\";\nexport const calciteColorNeutralBlk140 = \"#6a6a6a\";\nexport const calciteColorNeutralBlk150 = \"#606060\";\nexport const calciteColorNeutralBlk160 = \"#555555\";\nexport const calciteColorNeutralBlk170 = \"#4a4a4a\";\nexport const calciteColorNeutralBlk180 = \"#404040\";\nexport const calciteColorNeutralBlk190 = \"#353535\";\nexport const calciteColorNeutralBlk200 = \"#2b2b2b\";\nexport const calciteColorNeutralBlk210 = \"#202020\";\nexport const calciteColorNeutralBlk220 = \"#151515\";\nexport const calciteColorNeutralBlk230 = \"#0b0b0b\";\nexport const calciteColorNeutralBlk235 = \"#060606\";\nexport const calciteColorNeutralBlk240 = \"#000000\";\nexport const calciteColorHighSaturationBlueHBb010 = \"#c7eaff\";\nexport const calciteColorHighSaturationBlueHBb020 = \"#9fd4f3\";\nexport const calciteColorHighSaturationBlueHBb030 = \"#77bde7\";\nexport const calciteColorHighSaturationBlueHBb040 = \"#50a7da\";\nexport const calciteColorHighSaturationBlueHBb050 = \"#2890ce\";\nexport const calciteColorHighSaturationBlueHBb060 = \"#007ac2\";\nexport const calciteColorHighSaturationBlueHBb070 = \"#00619b\";\nexport const calciteColorHighSaturationBlueHBb080 = \"#004874\";\nexport const calciteColorHighSaturationBlueHBb090 = \"#00304d\";\nexport const calciteColorHighSaturationBlueHBb100 = \"#001726\";\nexport const calciteColorHighSaturationGreenBlueHGb010 = \"#cef5f4\";\nexport const calciteColorHighSaturationGreenBlueHGb020 = \"#afedec\";\nexport const calciteColorHighSaturationGreenBlueHGb030 = \"#8fe6e5\";\nexport const calciteColorHighSaturationGreenBlueHGb040 = \"#5ae0de\";\nexport const calciteColorHighSaturationGreenBlueHGb050 = \"#28cecb\";\nexport const calciteColorHighSaturationGreenBlueHGb060 = \"#00bab5\";\nexport const calciteColorHighSaturationGreenBlueHGb070 = \"#009b98\";\nexport const calciteColorHighSaturationGreenBlueHGb080 = \"#007472\";\nexport const calciteColorHighSaturationGreenBlueHGb090 = \"#004d4c\";\nexport const calciteColorHighSaturationGreenBlueHGb100 = \"#002625\";\nexport const calciteColorHighSaturationGreenHGg010 = \"#bdf2c4\";\nexport const calciteColorHighSaturationGreenHGg020 = \"#a2e4ab\";\nexport const calciteColorHighSaturationGreenHGg030 = \"#87d692\";\nexport const calciteColorHighSaturationGreenHGg040 = \"#6bc878\";\nexport const calciteColorHighSaturationGreenHGg050 = \"#50ba5f\";\nexport const calciteColorHighSaturationGreenHGg060 = \"#35ac46\";\nexport const calciteColorHighSaturationGreenHGg070 = \"#288835\";\nexport const calciteColorHighSaturationGreenHGg080 = \"#1a6324\";\nexport const calciteColorHighSaturationGreenHGg090 = \"#0d3f14\";\nexport const calciteColorHighSaturationGreenHGg100 = \"#001a03\";\nexport const calciteColorHighSaturationYellowGreenHYg010 = \"#e5f7b4\";\nexport const calciteColorHighSaturationYellowGreenHYg020 = \"#d9ef9f\";\nexport const calciteColorHighSaturationYellowGreenHYg030 = \"#cde78a\";\nexport const calciteColorHighSaturationYellowGreenHYg040 = \"#c2e075\";\nexport const calciteColorHighSaturationYellowGreenHYg050 = \"#b6d860\";\nexport const calciteColorHighSaturationYellowGreenHYg060 = \"#aad04b\";\nexport const calciteColorHighSaturationYellowGreenHYg070 = \"#84a338\";\nexport const calciteColorHighSaturationYellowGreenHYg080 = \"#5e7526\";\nexport const calciteColorHighSaturationYellowGreenHYg090 = \"#384813\";\nexport const calciteColorHighSaturationYellowGreenHYg100 = \"#121a00\";\nexport const calciteColorHighSaturationYellowHYy010 = \"#fff7cc\";\nexport const calciteColorHighSaturationYellowHYy020 = \"#fef3ad\";\nexport const calciteColorHighSaturationYellowHYy030 = \"#fcee8d\";\nexport const calciteColorHighSaturationYellowHYy040 = \"#fbea6e\";\nexport const calciteColorHighSaturationYellowHYy050 = \"#f9e54e\";\nexport const calciteColorHighSaturationYellowHYy060 = \"#edd317\";\nexport const calciteColorHighSaturationYellowHYy070 = \"#d9bc00\";\nexport const calciteColorHighSaturationYellowHYy080 = \"#bfa200\";\nexport const calciteColorHighSaturationYellowHYy090 = \"#8c7500\";\nexport const calciteColorHighSaturationYellowHYy100 = \"#5c4e00\";\nexport const calciteColorHighSaturationOrangeYellowHOy010 = \"#ffe2bf\";\nexport const calciteColorHighSaturationOrangeYellowHOy020 = \"#fed3a1\";\nexport const calciteColorHighSaturationOrangeYellowHOy030 = \"#fcc582\";\nexport const calciteColorHighSaturationOrangeYellowHOy040 = \"#fbb664\";\nexport const calciteColorHighSaturationOrangeYellowHOy050 = \"#f9a845\";\nexport const calciteColorHighSaturationOrangeYellowHOy060 = \"#f89927\";\nexport const calciteColorHighSaturationOrangeYellowHOy070 = \"#c67718\";\nexport const calciteColorHighSaturationOrangeYellowHOy080 = \"#9a5b10\";\nexport const calciteColorHighSaturationOrangeYellowHOy090 = \"#6d3f08\";\nexport const calciteColorHighSaturationOrangeYellowHOy100 = \"#402300\";\nexport const calciteColorHighSaturationOrangeHOo010 = \"#ffd8bf\";\nexport const calciteColorHighSaturationOrangeHOo020 = \"#fdc39f\";\nexport const calciteColorHighSaturationOrangeHOo030 = \"#faae7f\";\nexport const calciteColorHighSaturationOrangeHOo040 = \"#f89960\";\nexport const calciteColorHighSaturationOrangeHOo050 = \"#f58440\";\nexport const calciteColorHighSaturationOrangeHOo060 = \"#f36f20\";\nexport const calciteColorHighSaturationOrangeHOo070 = \"#c65a18\";\nexport const calciteColorHighSaturationOrangeHOo080 = \"#9a4410\";\nexport const calciteColorHighSaturationOrangeHOo090 = \"#6d2f08\";\nexport const calciteColorHighSaturationOrangeHOo100 = \"#401900\";\nexport const calciteColorHighSaturationRedOrangeHRo010 = \"#ffc7b3\";\nexport const calciteColorHighSaturationRedOrangeHRo020 = \"#f8af95\";\nexport const calciteColorHighSaturationRedOrangeHRo030 = \"#f09677\";\nexport const calciteColorHighSaturationRedOrangeHRo040 = \"#e97e5a\";\nexport const calciteColorHighSaturationRedOrangeHRo050 = \"#e1653c\";\nexport const calciteColorHighSaturationRedOrangeHRo060 = \"#da4d1e\";\nexport const calciteColorHighSaturationRedOrangeHRo070 = \"#ad3c16\";\nexport const calciteColorHighSaturationRedOrangeHRo080 = \"#802c0f\";\nexport const calciteColorHighSaturationRedOrangeHRo090 = \"#531b07\";\nexport const calciteColorHighSaturationRedOrangeHRo100 = \"#260a00\";\nexport const calciteColorHighSaturationRedHRr010 = \"#ffc6bf\";\nexport const calciteColorHighSaturationRedHRr020 = \"#ffaaa1\";\nexport const calciteColorHighSaturationRedHRr030 = \"#f2877b\";\nexport const calciteColorHighSaturationRedHRr040 = \"#f07062\";\nexport const calciteColorHighSaturationRedHRr050 = \"#e65240\";\nexport const calciteColorHighSaturationRedHRr060 = \"#d83020\";\nexport const calciteColorHighSaturationRedHRr070 = \"#a82b1e\";\nexport const calciteColorHighSaturationRedHRr080 = \"#7c1d13\";\nexport const calciteColorHighSaturationRedHRr090 = \"#4f0e08\";\nexport const calciteColorHighSaturationRedHRr100 = \"#210300\";\nexport const calciteColorHighSaturationPinkHPk010 = \"#ffd1ef\";\nexport const calciteColorHighSaturationPinkHPk020 = \"#fabee4\";\nexport const calciteColorHighSaturationPinkHPk030 = \"#f2a5d6\";\nexport const calciteColorHighSaturationPinkHPk040 = \"#eb8dc9\";\nexport const calciteColorHighSaturationPinkHPk050 = \"#e673bb\";\nexport const calciteColorHighSaturationPinkHPk060 = \"#e04ea6\";\nexport const calciteColorHighSaturationPinkHPk070 = \"#ba2f7e\";\nexport const calciteColorHighSaturationPinkHPk080 = \"#851b52\";\nexport const calciteColorHighSaturationPinkHPk090 = \"#590b32\";\nexport const calciteColorHighSaturationPinkHPk100 = \"#260404\";\nexport const calciteColorHighSaturationVioletRedHVr010 = \"#fadbff\";\nexport const calciteColorHighSaturationVioletRedHVr020 = \"#e4beeb\";\nexport const calciteColorHighSaturationVioletRedHVr030 = \"#cfa1d7\";\nexport const calciteColorHighSaturationVioletRedHVr040 = \"#b983c3\";\nexport const calciteColorHighSaturationVioletRedHVr050 = \"#a466af\";\nexport const calciteColorHighSaturationVioletRedHVr060 = \"#8e499b\";\nexport const calciteColorHighSaturationVioletRedHVr070 = \"#73377e\";\nexport const calciteColorHighSaturationVioletRedHVr080 = \"#572561\";\nexport const calciteColorHighSaturationVioletRedHVr090 = \"#3c1243\";\nexport const calciteColorHighSaturationVioletRedHVr100 = \"#200026\";\nexport const calciteColorHighSaturationVioletHVv010 = \"#e8d9ff\";\nexport const calciteColorHighSaturationVioletHVv020 = \"#cdb9eb\";\nexport const calciteColorHighSaturationVioletHVv030 = \"#b39ad7\";\nexport const calciteColorHighSaturationVioletHVv040 = \"#987ac3\";\nexport const calciteColorHighSaturationVioletHVv050 = \"#7e5baf\";\nexport const calciteColorHighSaturationVioletHVv060 = \"#633b9b\";\nexport const calciteColorHighSaturationVioletHVv070 = \"#4e2c7e\";\nexport const calciteColorHighSaturationVioletHVv080 = \"#3a1e61\";\nexport const calciteColorHighSaturationVioletHVv090 = \"#250f43\";\nexport const calciteColorHighSaturationVioletHVv100 = \"#100026\";\nexport const calciteColorVibrantBlueVBb120 = \"#59d6ff\";\nexport const calciteColorVibrantBlueVBb140 = \"#3db8ff\";\nexport const calciteColorVibrantBlueVBb160 = \"#009af2\";\nexport const calciteColorVibrantBlueVBb180 = \"#009af2\";\nexport const calciteColorVibrantGreenBlueVGb120 = \"#59fffc\";\nexport const calciteColorVibrantGreenBlueVGb140 = \"#00f7f3\";\nexport const calciteColorVibrantGreenBlueVGb160 = \"#00e6e2\";\nexport const calciteColorVibrantGreenBlueVGb180 = \"#00cfca\";\nexport const calciteColorVibrantGreenVGg120 = \"#73ff84\";\nexport const calciteColorVibrantGreenVGg140 = \"#3bed52\";\nexport const calciteColorVibrantGreenVGg160 = \"#00b81b\";\nexport const calciteColorVibrantGreenVGg180 = \"#00a118\";\nexport const calciteColorVibrantYellowGreenVYg120 = \"#d7ff73\";\nexport const calciteColorVibrantYellowGreenVYg140 = \"#bbed3b\";\nexport const calciteColorVibrantYellowGreenVYg160 = \"#96cc00\";\nexport const calciteColorVibrantYellowGreenVYg180 = \"#7fab00\";\nexport const calciteColorVibrantYellowVYy120 = \"#fff766\";\nexport const calciteColorVibrantYellowVYy140 = \"#ffee33\";\nexport const calciteColorVibrantYellowVYy160 = \"#f5d000\";\nexport const calciteColorVibrantYellowVYy180 = \"#ebba17\";\nexport const calciteColorVibrantOrangeYellowVOy120 = \"#ffb54d\";\nexport const calciteColorVibrantOrangeYellowVOy140 = \"#ff9500\";\nexport const calciteColorVibrantOrangeYellowVOy160 = \"#e68600\";\nexport const calciteColorVibrantOrangeYellowVOy180 = \"#d17300\";\nexport const calciteColorVibrantRedOrangeVRo120 = \"#ff824d\";\nexport const calciteColorVibrantRedOrangeVRo140 = \"#ff4d00\";\nexport const calciteColorVibrantRedOrangeVRo160 = \"#de4300\";\nexport const calciteColorVibrantRedOrangeVRo180 = \"#c93b00\";\nexport const calciteColorVibrantRedVRr120 = \"#ff624d\";\nexport const calciteColorVibrantRedVRr140 = \"#ff0015\";\nexport const calciteColorVibrantRedVRr160 = \"#d90012\";\nexport const calciteColorVibrantRedVRr180 = \"#b3000f\";\nexport const calciteColorVibrantPinkVPk120 = \"#ff66c2\";\nexport const calciteColorVibrantPinkVPk140 = \"#ff19a4\";\nexport const calciteColorVibrantPinkVPk160 = \"#d11486\";\nexport const calciteColorVibrantPinkVPk180 = \"#c00073\";\nexport const calciteColorVibrantVioletRedVVr120 = \"#ea80ff\";\nexport const calciteColorVibrantVioletRedVVr140 = \"#dd33ff\";\nexport const calciteColorVibrantVioletRedVVr160 = \"#ac08cc\";\nexport const calciteColorVibrantVioletRedVVr180 = \"#83009e\";\nexport const calciteColorVibrantVioletVVv120 = \"#b580ff\";\nexport const calciteColorVibrantVioletVVv140 = \"#974dff\";\nexport const calciteColorVibrantVioletVVv160 = \"#8129ff\";\nexport const calciteColorVibrantVioletVVv180 = \"#6a0be6\";\nexport const calciteColorDarkGreenDGg410 = \"#44ed51\";\nexport const calciteColorDarkGreenDGg420 = \"#36da43\";\nexport const calciteColorDarkGreenDGg430 = \"#36da43\";\nexport const calciteColorDarkYellowDYy410 = \"#ffe24d\";\nexport const calciteColorDarkYellowDYy420 = \"#ffc900\";\nexport const calciteColorDarkYellowDYy430 = \"#f4b000\";\nexport const calciteColorDarkRedDRr410 = \"#ff7465\";\nexport const calciteColorDarkRedDRr420 = \"#fe583e\";\nexport const calciteColorDarkRedDRr430 = \"#f3381b\";\nexport const calciteColorDarkBlueDBb410 = \"#47bbff\";\nexport const calciteColorDarkBlueDBb420 = \"#00a0ff\";\nexport const calciteColorDarkBlueDBb430 = \"#0087d7\";\nexport const calciteContainerSize0 = \"0\";\nexport const calciteContainerSize154 = \"154px\";\nexport const calciteContainerSize320 = \"320px\";\nexport const calciteContainerSize328 = \"328px\";\nexport const calciteContainerSize476 = \"476px\";\nexport const calciteContainerSize504 = \"504px\";\nexport const calciteContainerSize678 = \"678px\";\nexport const calciteContainerSize768 = \"768px\";\nexport const calciteContainerSize854 = \"854px\";\nexport const calciteContainerSize1152 = \"1152px\";\nexport const calciteContainerSize1440 = \"1440px\";\nexport const calciteFontFamilyAndaleMono = \"Andale Mono\"; // Fallback for Monaco\nexport const calciteFontFamilyAvenirNextPro = \"Avenir Next LT Pro\";\nexport const calciteFontFamilyAvenirNextWorld = \"Avenir Next World\";\nexport const calciteFontFamilyAvenirNext = \"Avenir Next\"; // Primary font family\nexport const calciteFontFamilyAvenir = \"Avenir\"; // Fallback for Avenir Next\nexport const calciteFontFamilyConsolas = \"Consolas\"; // Fallback for Monaco\nexport const calciteFontFamilyHelveticaNeue = \"Helvetica Neue\"; // Fallback for Avenir Next\nexport const calciteFontFamilyLucidaConsole = \"Lucida Console\"; // Fallback for Monaco\nexport const calciteFontFamilyMonaco = \"Monaco\";\nexport const calciteFontFamilyMonospace = \"monospace\"; // Fallback for Monaco\nexport const calciteFontFamilySansSerif = \"sans-serif\"; // Fallback for Avenir Next\nexport const calciteFontStyleItalic = \"italic\"; // used in ratings\nexport const calciteFontWeightUltralight = \"200\"; // only for Avenir Next World (secondary font family)\nexport const calciteFontWeightThin = \"100\";\nexport const calciteFontWeightLight = \"300\"; // only for Avenir Next World (secondary font family)\nexport const calciteFontWeightRegular = \"400\";\nexport const calciteFontWeightMedium = \"500\";\nexport const calciteFontWeightMediumItalic = \"Medium Italic\";\nexport const calciteFontWeightDemi = \"600\";\nexport const calciteFontWeightBold = \"700\";\nexport const calciteFontWeightExtrabold = \"800\"; // only for Avenir Next World (secondary font family)\nexport const calciteFontWeightBlack = \"900\"; // only for Avenir Next World (secondary font family)\nexport const calciteFontWeightHeavy = \"900\";\nexport const calciteFontTextDecorationNone = \"none\";\nexport const calciteFontTextDecorationUnderline = \"underline\";\nexport const calciteFontTextCaseNone = \"none\";\nexport const calciteFontTextCaseUppercase = \"uppercase\";\nexport const calciteFontTextCaseLowercase = \"lowercase\";\nexport const calciteFontTextCaseCapitalize = \"capitalize\";\nexport const calciteOpacity0 = \"0\";\nexport const calciteOpacity4 = \"0.04\";\nexport const calciteOpacity8 = \"0.08\";\nexport const calciteOpacity10 = \"0.1\";\nexport const calciteOpacity20 = \"0.2\";\nexport const calciteOpacity30 = \"0.3\";\nexport const calciteOpacity40 = \"0.4\";\nexport const calciteOpacity50 = \"0.5\";\nexport const calciteOpacity60 = \"0.6\";\nexport const calciteOpacity70 = \"0.7\";\nexport const calciteOpacity80 = \"0.8\";\nexport const calciteOpacity85 = \"0.85\";\nexport const calciteOpacity90 = \"0.9\";\nexport const calciteOpacity92 = \"0.92\";\nexport const calciteOpacity96 = \"0.96\";\nexport const calciteOpacity100 = \"1\";\nexport const calciteShadow0 = {\"x\":\"0\",\"y\":\"0\",\"blur\":\"0\",\"spread\":\"0\",\"color\":\"rgba(#000000, 0)\"};\nexport const calciteShadow1 = {\"x\":\"0\",\"y\":\"2\",\"blur\":\"8\",\"spread\":\"0\",\"color\":\"rgba(#000000, 0.04)\"};\nexport const calciteShadow2 = {\"x\":\"0\",\"y\":\"4\",\"blur\":\"16\",\"spread\":\"0\",\"color\":\"rgba(#000000, 0.08)\"};\nexport const calciteShadow3 = {\"x\":\"0\",\"y\":\"4\",\"blur\":\"20\",\"spread\":\"0\",\"color\":\"rgba(#000000, 0.08)\"};\nexport const calciteShadow4 = {\"x\":\"0\",\"y\":\"12\",\"blur\":\"32\",\"spread\":\"-2\",\"color\":\"rgba(#000000, 0.1)\"};\nexport const calciteSize1 = \"1px\";\nexport const calciteSize2 = \"2px\";\nexport const calciteSize4 = \"4px\";\nexport const calciteSize6 = \"6px\";\nexport const calciteSize8 = \"8px\";\nexport const calciteSize10 = \"10px\";\nexport const calciteSize12 = \"12px\";\nexport const calciteSize14 = \"14px\";\nexport const calciteSize16 = \"16px\";\nexport const calciteSize20 = \"20px\";\nexport const calciteSize24 = \"24px\";\nexport const calciteSize28 = \"28px\";\nexport const calciteSize32 = \"32px\";\nexport const calciteSize36 = \"36px\";\nexport const calciteSize40 = \"40px\";\nexport const calciteSize44 = \"44px\";\nexport const calciteSize48 = \"48px\";\nexport const calciteSize56 = \"56px\";\nexport const calciteSize64 = \"64px\";\nexport const calciteSize72 = \"72px\";\nexport const calciteSize80 = \"80px\";\nexport const calciteSize96 = \"96px\";\nexport const calciteSize112 = \"112px\";\nexport const calciteSize128 = \"128px\";\nexport const calciteSize144 = \"144px\";\nexport const calciteSize160 = \"160px\";\nexport const calciteSize192 = \"192px\";\nexport const calciteSize224 = \"224px\";\nexport const calciteSize256 = \"256px\";\nexport const calciteSize288 = \"288px\";\nexport const calciteSizeNone = \"0\";\nexport const calciteSizeRelative50 = \"50%\";\nexport const calciteSizeRelative100 = \"100%\";\nexport const calciteSizeRelative125 = \"125%\";\nexport const calciteSizeRelative137 = \"137.5%\";\nexport const calciteSizeRelative150 = \"150%\";\nexport const calciteSizeRelative162 = \"162.5%\";\nexport const calciteSizeRelative200 = \"200%\";\nexport const calciteSizeRelativeAuto = \"auto\";\nexport const calciteZIndex0 = \"-999999\";\nexport const calciteZIndex1 = \"1\";\nexport const calciteZIndex3 = \"300\";\nexport const calciteZIndex4 = \"400\";\nexport const calciteZIndex5 = \"500\";\nexport const calciteZIndex6 = \"600\";\nexport const calciteZIndex7 = \"700\";\nexport const calciteZIndex8 = \"800\";\nexport const calciteZIndex9 = \"900\";\n","import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { Writable } from \"type-fest\";\nimport { Status } from \"../components/interfaces\";\nimport type { IconNameOrString } from \"../components/icon/interfaces\";\nimport { closestElementCrossShadowBoundary, queryElementRoots } from \"./dom\";\n\n/**\n * Any form <Component> with a `calcite<Component>Input` event needs to be included in this array.\n */\nexport const componentsWithInputEvent = [\n  \"calcite-input\",\n  \"calcite-input-number\",\n  \"calcite-input-text\",\n  \"calcite-text-area\",\n];\n\n/**\n * Get the event name to listen for that, when emitted, will clear the\n * validation message that displays after form submission. Only validation\n * messages that are set by the browser will be cleared. If a user sets\n * validationMessage to a custom value, they are responsible for clearing it.\n *\n * Exported for testing purposes.\n *\n * @param componentTag the tag of the component, e.g. \"calcite-input\"\n * @returns the event name\n */\nexport function getClearValidationEventName(componentTag: string): string {\n  const componentTagCamelCase = componentTag\n    .split(\"-\")\n    .map((part: string, index: number) =>\n      index === 0 ? part : `${part[0].toUpperCase()}${part.slice(1)}`,\n    )\n    .join(\"\");\n\n  const clearValidationEvent = `${componentTagCamelCase}${\n    componentsWithInputEvent.includes(componentTag) ? \"Input\" : \"Change\"\n  }`;\n\n  return clearValidationEvent;\n}\n\nexport type MutableValidityState = Writable<ValidityState>;\n\n/**\n * Exported for testing purposes.\n */\nexport const hiddenFormInputSlotName = \"hidden-form-input\";\n\n/**\n * Defines interface for form owning components.\n *\n * Allows calling submit/reset methods on the form.\n */\nexport interface FormOwner {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * The ID of the form to associate with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   *\n   * Note that this prop should use the @Prop decorator.\n   */\n  form: string;\n\n  /**\n   * The form this component is associated with.\n   *\n   * @internal\n   */\n  formEl: HTMLFormElement;\n}\n\n/**\n * Defines interface for form-associated components.\n *\n * Along with the interface, use the matching form utils to help set up the component behavior.\n */\nexport interface FormComponent<T = any> extends FormOwner {\n  /**\n   * When true, this component's value will not be submitted in the form.\n   */\n  disabled: boolean;\n\n  /**\n   * When true, form submit requests will enforce field requirement.\n   *\n   * @todo remove optional in follow-up PR\n   */\n  required?: boolean;\n\n  /**\n   * The name used to submit the value to the associated form.\n   *\n   * Note that this prop should use the @Prop decorator.\n   */\n  name: string;\n\n  /**\n   * This form component's value.\n   *\n   * Note that this prop should use the @Prop decorator.\n   */\n  value: T;\n\n  /**\n   * The initial value for this form component.\n   *\n   * When the form is reset, the value will be set to this property.\n   */\n  defaultValue: T;\n\n  /** The validation icon to display. */\n  validationIcon?: string | boolean;\n\n  /** The validation message to display. */\n  validationMessage?: string;\n\n  /** The validity state of the form component. */\n  validity?: MutableValidityState;\n\n  /**\n   * Hook for components to provide custom form reset behavior.\n   */\n  onFormReset?: () => void;\n\n  /**\n   * Hook for components to sync _extra_ props on the hidden input form element used for form-submitting.\n   *\n   * Note: The following props are set by default: disabled, hidden, name, required, value.\n   */\n  syncHiddenFormInput?: (input: HTMLInputElement) => void;\n}\n\n/**\n * Defines interface for checkable form-associated components.\n *\n * Along with the interface, use the matching form utils to help set up the component behavior.\n */\nexport interface CheckableFormComponent<T = any> extends FormComponent<T> {\n  /**\n   * For boolean-valued components, this property defines whether the associated value is submitted to the form or not.\n   */\n  checked: boolean;\n\n  /**\n   * The initial checked value for this form component.\n   *\n   * When the form is reset, the checked property will be set to this value.\n   */\n  defaultChecked: boolean;\n}\n\nfunction isCheckable(component: FormComponent): component is CheckableFormComponent {\n  return \"checked\" in component;\n}\n\nconst onFormResetMap = new WeakMap<HTMLElement, FormComponent[\"onFormReset\"]>();\nconst formComponentSet = new WeakSet<HTMLElement>();\n\n/**\n * This helps determine if our form component is part of a composite form-associated component.\n *\n * @param form\n * @param formComponentEl\n */\nfunction hasRegisteredFormComponentParent(\n  form: HTMLFormElement,\n  formComponentEl: HTMLElement,\n): boolean {\n  // if we have a parent component using the form ID attribute, we assume it is form-associated\n  const hasParentComponentWithFormIdSet = closestElementCrossShadowBoundary(\n    formComponentEl.parentElement,\n    \"[form]\",\n  );\n\n  if (hasParentComponentWithFormIdSet) {\n    return true;\n  }\n\n  // we use events as a way to test for nested form-associated components across shadow bounds\n  const formComponentRegisterEventName = \"calciteInternalFormComponentRegister\";\n\n  let hasRegisteredFormComponentParent = false;\n\n  form.addEventListener(\n    formComponentRegisterEventName,\n    (event) => {\n      hasRegisteredFormComponentParent = event\n        .composedPath()\n        .some((element) => formComponentSet.has(element as HTMLElement));\n      event.stopPropagation();\n    },\n    { once: true },\n  );\n\n  formComponentEl.dispatchEvent(\n    new CustomEvent(formComponentRegisterEventName, {\n      bubbles: true,\n      composed: true,\n    }),\n  );\n\n  return hasRegisteredFormComponentParent;\n}\n\n// exported for test purposes only\nexport interface ValidationProps {\n  status: Status;\n  message: string;\n  icon: IconNameOrString | boolean | \"\";\n}\n\nfunction displayValidationMessage(\n  component: HTMLCalciteInputElement | FormComponent,\n  { status, message, icon }: ValidationProps,\n): void {\n  if (\"status\" in component) {\n    component.status = status;\n  }\n\n  if (\"validationIcon\" in component && typeof component.validationIcon !== \"string\") {\n    component.validationIcon = icon;\n  }\n\n  if (\"validationMessage\" in component && !component.validationMessage) {\n    component.validationMessage = message;\n  }\n}\n\nfunction getValidationComponent(\n  el: HTMLCalciteInputElement,\n  // TODO: create an HTMLCalciteFormAssociatedElement base type\n): HTMLCalciteInputElement | HTMLCalciteRadioButtonGroupElement {\n  // radio-button is formAssociated, but the validation props are on the parent group\n  if (el.nodeName === \"CALCITE-RADIO-BUTTON\") {\n    return closestElementCrossShadowBoundary(el, \"calcite-radio-button-group\");\n  }\n  return el;\n}\n\nconst invalidEvent = new CustomEvent(\"calciteInvalid\", { bubbles: true, composed: true });\n\nfunction invalidHandler(event: Event) {\n  // target is the hidden input, which is slotted in the actual form component\n  const hiddenInput = event?.target as HTMLInputElement;\n  const hiddenInputMessage = hiddenInput?.validationMessage;\n\n  // not necessarily a calcite-input, but we don't have an HTMLCalciteFormAssociatedElement type\n  const formComponent = getValidationComponent(\n    hiddenInput?.parentElement as HTMLCalciteInputElement,\n  ) as HTMLCalciteInputElement;\n\n  if (!formComponent) {\n    return;\n  }\n\n  const componentTag = formComponent?.nodeName?.toLowerCase();\n  const componentTagParts = componentTag?.split(\"-\");\n\n  if (componentTagParts.length < 2 || componentTagParts[0] !== \"calcite\") {\n    return;\n  }\n\n  // prevent the browser from showing the native validation popover\n  event?.preventDefault();\n\n  if (\"validity\" in formComponent) {\n    formComponent.validity = hiddenInput?.validity;\n  }\n\n  // dispatch a \"calciteInvalid\" so users can set custom validation messages\n  formComponent.dispatchEvent(invalidEvent);\n\n  displayValidationMessage(formComponent, {\n    message: hiddenInputMessage,\n    icon: true,\n    status: \"invalid\",\n  });\n\n  const clearValidationEvent = getClearValidationEventName(componentTag);\n  formComponent.addEventListener(\n    clearValidationEvent,\n    () => {\n      if (\"status\" in formComponent) {\n        formComponent.status = \"idle\";\n      }\n\n      if (\"validationIcon\" in formComponent && !formComponent.validationIcon) {\n        formComponent.validationIcon = false;\n      }\n\n      if (\n        \"validationMessage\" in formComponent &&\n        formComponent.validationMessage === hiddenInputMessage\n      ) {\n        formComponent.validationMessage = \"\";\n      }\n\n      if (\"validity\" in formComponent) {\n        formComponent.validity = hiddenInput?.validity;\n      }\n    },\n    { once: true },\n  );\n}\n\n/**\n * Helper to submit a form.\n *\n * @param component\n * @returns true if its associated form was submitted, false otherwise.\n */\nexport function submitForm(component: FormOwner): boolean {\n  const { formEl } = component;\n\n  if (!formEl) {\n    return false;\n  }\n\n  formEl.addEventListener(\"invalid\", invalidHandler, true);\n  formEl.requestSubmit();\n  formEl.removeEventListener(\"invalid\", invalidHandler, true);\n\n  requestAnimationFrame(() => {\n    const invalidEls = formEl.querySelectorAll<HTMLCalciteInputElement>(\"[status=invalid]\");\n\n    // focus the first invalid element that has a validation message\n    for (const el of invalidEls) {\n      if (el?.validationMessage) {\n        el?.setFocus();\n        break;\n      }\n    }\n  });\n\n  return true;\n}\n\n/**\n * Helper to reset a form.\n *\n * @param component\n */\nexport function resetForm(component: FormOwner): void {\n  component.formEl?.reset();\n}\n\n/**\n * Helper to set up form interactions on connectedCallback.\n *\n * @param component\n */\nexport function connectForm<T>(component: FormComponent<T>): void {\n  const { el, value } = component;\n  const associatedForm = findAssociatedForm(component);\n\n  if (!associatedForm || hasRegisteredFormComponentParent(associatedForm, el)) {\n    return;\n  }\n\n  component.formEl = associatedForm;\n  component.defaultValue = value;\n\n  if (isCheckable(component)) {\n    component.defaultChecked = component.checked;\n  }\n\n  const boundOnFormReset = (component.onFormReset || onFormReset).bind(component);\n  associatedForm.addEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.set(component.el, boundOnFormReset);\n  formComponentSet.add(el);\n}\n\n/**\n * Utility method to find a form-component's associated form element.\n *\n * @param component\n */\nexport function findAssociatedForm(component: FormOwner): HTMLFormElement | null {\n  const { el, form } = component;\n\n  return form\n    ? queryElementRoots<HTMLFormElement>(el, { id: form })\n    : closestElementCrossShadowBoundary(el, \"form\");\n}\n\nfunction onFormReset<T>(this: FormComponent<T>): void {\n  if (\"status\" in this) {\n    this.status = \"idle\";\n  }\n\n  if (\"validationIcon\" in this) {\n    this.validationIcon = false;\n  }\n\n  if (\"validationMessage\" in this) {\n    this.validationMessage = \"\";\n  }\n\n  if (isCheckable(this)) {\n    this.checked = this.defaultChecked;\n    return;\n  }\n\n  this.value = this.defaultValue;\n}\n\n/**\n * Helper to tear down form interactions on disconnectedCallback.\n *\n * @param component\n */\nexport function disconnectForm<T>(component: FormComponent<T>): void {\n  const { el, formEl } = component;\n\n  if (!formEl) {\n    return;\n  }\n\n  const boundOnFormReset = onFormResetMap.get(el);\n  formEl.removeEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.delete(el);\n  component.formEl = null;\n  formComponentSet.delete(el);\n}\n\n/**\n * Helper for setting the default value on initialization after connectedCallback.\n *\n * Note that this is only needed if the default value cannot be determined on connectedCallback.\n *\n * @param component\n * @param value\n */\nexport function afterConnectDefaultValueSet<T>(component: FormComponent<T>, value: any): void {\n  component.defaultValue = value;\n}\n\nexport const internalHiddenInputInputEvent = \"calciteInternalHiddenInputInput\";\n\nconst hiddenInputInputHandler = (event: Event) => {\n  event.target.dispatchEvent(new CustomEvent(internalHiddenInputInputEvent, { bubbles: true }));\n};\n\nconst removeHiddenInputChangeEventListener = (input: HTMLInputElement) =>\n  input.removeEventListener(\"input\", hiddenInputInputHandler);\n\n/**\n * Helper for maintaining a form-associated's hidden input in sync with the component.\n *\n * Based on Ionic's approach: https://github.com/ionic-team/ionic-framework/blob/e4bf052794af9aac07f887013b9250d2a045eba3/core/src/utils/helpers.ts#L198\n *\n * @param component\n */\nfunction syncHiddenFormInput(component: FormComponent): void {\n  const { el, formEl, name, value } = component;\n  const { ownerDocument } = el;\n\n  const inputs = el.querySelectorAll<HTMLInputElement>(`input[slot=\"${hiddenFormInputSlotName}\"]`);\n\n  if (!formEl || !name) {\n    inputs.forEach((input) => {\n      removeHiddenInputChangeEventListener(input);\n      input.remove();\n    });\n    return;\n  }\n\n  const values = Array.isArray(value) ? value : [value];\n  const extra: any[] = [];\n  const seen = new Set<any>();\n\n  inputs.forEach((input) => {\n    const valueMatch = values.find(\n      (val) =>\n        /* intentional non-strict equality check */\n        val == input.value,\n    );\n\n    if (valueMatch != null) {\n      seen.add(valueMatch);\n      defaultSyncHiddenFormInput(component, input, valueMatch);\n    } else {\n      extra.push(input);\n    }\n  });\n\n  let docFrag: DocumentFragment;\n\n  values.forEach((value) => {\n    if (seen.has(value)) {\n      return;\n    }\n\n    let input = extra.pop();\n\n    if (!input) {\n      input = ownerDocument.createElement(\"input\");\n      input.slot = hiddenFormInputSlotName;\n    }\n\n    if (!docFrag) {\n      docFrag = ownerDocument.createDocumentFragment();\n    }\n\n    docFrag.append(input);\n\n    // emits when hidden input is autofilled\n    input.addEventListener(\"input\", hiddenInputInputHandler);\n\n    defaultSyncHiddenFormInput(component, input, value);\n  });\n\n  if (docFrag) {\n    el.append(docFrag);\n  }\n  extra.forEach((input) => {\n    removeHiddenInputChangeEventListener(input);\n    input.remove();\n  });\n}\n\nfunction defaultSyncHiddenFormInput(\n  component: FormComponent,\n  input: HTMLInputElement,\n  value: string,\n): void {\n  const { defaultValue, disabled, form, name, required } = component;\n\n  // keep in sync to prevent losing reset value\n  input.defaultValue = defaultValue;\n  input.disabled = disabled;\n  input.name = name;\n  input.required = required;\n  input.tabIndex = -1;\n\n  // we set the attr as the prop is read-only\n  if (form) {\n    input.setAttribute(\"form\", form);\n  } else {\n    input.removeAttribute(\"form\");\n  }\n\n  if (isCheckable(component)) {\n    input.checked = component.checked;\n\n    // keep in sync to prevent losing reset value\n    input.defaultChecked = component.defaultChecked;\n    // heuristic to support default/on mode from https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n    input.value = component.checked ? value || \"on\" : \"\";\n  } else {\n    input.value = value || \"\";\n  }\n\n  component.syncHiddenFormInput?.(input);\n\n  const validationComponent = getValidationComponent(component.el as HTMLCalciteInputElement);\n\n  if (validationComponent && \"validity\" in validationComponent) {\n    // mutate the component's validity object to prevent a rerender\n    // https://stenciljs.com/docs/properties#mutable-arrays-and-objects\n    for (const key in { ...input?.validity }) {\n      validationComponent.validity[key] = input.validity[key];\n    }\n  }\n}\n\ninterface HiddenFormInputSlotProps {\n  component: FormComponent;\n}\n\n/**\n * Helper to render the slot for form-associated component's hidden input.\n *\n * If the component has a default slot, this must be placed at the bottom of the component's root container to ensure it is the last child.\n *\n * render(): VNode {\n *   <Host>\n *     <div class={CSS.container}>\n *     // ...\n *     <HiddenFormInputSlot component={this} />\n *     </div>\n *   </Host>\n * }\n *\n * Note that the hidden-form-input Sass mixin must be added to the component's style to apply specific styles.\n *\n * @param root0\n * @param root0.component\n */\nexport const HiddenFormInputSlot: FunctionalComponent<HiddenFormInputSlotProps> = ({\n  component,\n}): VNode => {\n  syncHiddenFormInput(component);\n\n  return <slot name={hiddenFormInputSlotName} />;\n};\n","import { closestElementCrossShadowBoundary, isBefore, queryElementRoots } from \"./dom\";\nimport { componentOnReady } from \"./component\";\n\nexport interface LabelableComponent {\n  /**\n   * When true, disabled prevents interaction.\n   */\n  disabled: boolean;\n\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * Text label.\n   */\n  label?: string;\n\n  /**\n   * The label this component is associated with.\n   */\n  labelEl: HTMLCalciteLabelElement;\n\n  /**\n   * Hook for components to provide custom label click behavior.\n   */\n  onLabelClick: (event: CustomEvent<any>) => void;\n}\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport const labelClickEvent = \"calciteInternalLabelClick\";\nexport const labelConnectedEvent = \"calciteInternalLabelConnected\";\nexport const labelDisconnectedEvent = \"calciteInternalLabelDisconnected\";\n\nconst labelTagName = \"calcite-label\";\nconst labelToLabelables = new WeakMap<HTMLCalciteLabelElement, LabelableComponent[]>();\nconst onLabelClickMap = new WeakMap<HTMLCalciteLabelElement, typeof onLabelClick>();\nconst onLabelConnectedMap = new WeakMap<LabelableComponent, typeof onLabelConnected>();\nconst onLabelDisconnectedMap = new WeakMap<LabelableComponent, typeof onLabelDisconnected>();\nconst unlabeledComponents = new Set<LabelableComponent>();\n\nconst findLabelForComponent = (componentEl: HTMLElement): HTMLCalciteLabelElement | null => {\n  const { id } = componentEl;\n\n  const forLabel =\n    id && queryElementRoots<HTMLCalciteLabelElement>(componentEl, { selector: `${labelTagName}[for=\"${id}\"]` });\n\n  if (forLabel) {\n    return forLabel;\n  }\n\n  const parentLabel = closestElementCrossShadowBoundary<HTMLCalciteLabelElement>(componentEl, labelTagName);\n\n  if (\n    !parentLabel ||\n    // labelable components within other custom elements are not considered labelable\n    hasAncestorCustomElements(parentLabel, componentEl)\n  ) {\n    return null;\n  }\n\n  return parentLabel;\n};\n\nfunction hasAncestorCustomElements(label: HTMLCalciteLabelElement, componentEl: HTMLElement): boolean {\n  let traversedElements: HTMLElement[];\n  const customElementAncestorCheckEventType = \"custom-element-ancestor-check\";\n\n  const listener = (event: CustomEvent) => {\n    event.stopImmediatePropagation();\n    const composedPath = event.composedPath() as HTMLElement[];\n    traversedElements = composedPath.slice(composedPath.indexOf(componentEl), composedPath.indexOf(label));\n  };\n\n  label.addEventListener(customElementAncestorCheckEventType, listener, { once: true });\n\n  componentEl.dispatchEvent(new CustomEvent(customElementAncestorCheckEventType, { composed: true, bubbles: true }));\n  label.removeEventListener(customElementAncestorCheckEventType, listener);\n\n  const ancestorCustomElements = traversedElements\n    .filter((el) => el !== componentEl && el !== label)\n    .filter((el) => el.tagName?.includes(\"-\"));\n\n  return ancestorCustomElements.length > 0;\n}\n\n/**\n * Helper to set up label interactions on connectedCallback.\n *\n * @param component\n */\nexport function connectLabel(component: LabelableComponent): void {\n  if (!component) {\n    return;\n  }\n\n  const labelEl = findLabelForComponent(component.el);\n\n  if (\n    (onLabelClickMap.has(labelEl) && labelEl === component.labelEl) ||\n    (!labelEl && unlabeledComponents.has(component))\n  ) {\n    return;\n  }\n\n  const boundOnLabelDisconnected = onLabelDisconnected.bind(component);\n\n  if (labelEl) {\n    component.labelEl = labelEl;\n\n    const labelables = labelToLabelables.get(labelEl) || [];\n    labelables.push(component);\n    labelToLabelables.set(labelEl, labelables.sort(sortByDOMOrder));\n\n    if (!onLabelClickMap.has(component.labelEl)) {\n      onLabelClickMap.set(component.labelEl, onLabelClick);\n      component.labelEl.addEventListener(labelClickEvent, onLabelClick);\n    }\n\n    unlabeledComponents.delete(component);\n    document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n    onLabelDisconnectedMap.set(component, boundOnLabelDisconnected);\n    document.addEventListener(labelDisconnectedEvent, boundOnLabelDisconnected);\n  } else if (!unlabeledComponents.has(component)) {\n    boundOnLabelDisconnected();\n    document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  }\n}\n/**\n * Helper to tear down label interactions on disconnectedCallback on labelable components.\n *\n * @param component\n */\nexport function disconnectLabel(component: LabelableComponent): void {\n  if (!component) {\n    return;\n  }\n\n  unlabeledComponents.delete(component);\n  document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n  document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  onLabelConnectedMap.delete(component);\n  onLabelDisconnectedMap.delete(component);\n\n  if (!component.labelEl) {\n    return;\n  }\n\n  const labelables = labelToLabelables.get(component.labelEl);\n\n  if (labelables.length === 1) {\n    component.labelEl.removeEventListener(labelClickEvent, onLabelClickMap.get(component.labelEl));\n    onLabelClickMap.delete(component.labelEl);\n  }\n\n  labelToLabelables.set(\n    component.labelEl,\n    labelables.filter((labelable) => labelable !== component).sort(sortByDOMOrder),\n  );\n\n  component.labelEl = null;\n}\n\nfunction sortByDOMOrder(a: LabelableComponent, b: LabelableComponent): number {\n  return isBefore(a.el, b.el) ? -1 : 1;\n}\n\n/**\n * Helper to get the label text from a component.\n *\n * @param component\n */\nexport function getLabelText(component: LabelableComponent): string {\n  return component.label || component.labelEl?.textContent?.trim() || \"\";\n}\n\nfunction onLabelClick(this: HTMLCalciteLabelElement, event: CustomEvent<{ sourceEvent: MouseEvent }>): void {\n  const labelClickTarget = event.detail.sourceEvent.target as HTMLElement;\n  const labelables = labelToLabelables.get(this);\n  const clickedLabelable = labelables.find((labelable) => labelable.el === labelClickTarget);\n  const labelableChildClicked = labelables.includes(clickedLabelable);\n\n  if (labelableChildClicked) {\n    // no need to forward click as labelable will receive focus\n    return;\n  }\n\n  const firstLabelable = labelables[0];\n\n  if (firstLabelable.disabled) {\n    return;\n  }\n\n  firstLabelable.onLabelClick(event);\n}\n\nfunction onLabelConnected(this: LabelableComponent): void {\n  if (unlabeledComponents.has(this)) {\n    connectLabel(this);\n  }\n}\n\nfunction onLabelDisconnected(this: LabelableComponent): void {\n  unlabeledComponents.add(this);\n  const boundOnLabelConnected = onLabelConnectedMap.get(this) || onLabelConnected.bind(this);\n  onLabelConnectedMap.set(this, boundOnLabelConnected);\n  document.addEventListener(labelConnectedEvent, boundOnLabelConnected);\n}\n\n/**\n * Helper to associate an explicit label (i.e., using `for`) with a labelable component that does not have an associated label.\n *\n * @param label - the label element\n */\nexport async function associateExplicitLabelToUnlabeledComponent(label: HTMLCalciteLabelElement): Promise<void> {\n  await componentOnReady(label);\n\n  const alreadyLabeled = labelToLabelables.has(label);\n\n  if (alreadyLabeled) {\n    return;\n  }\n\n  const forComponentEl = label.ownerDocument?.getElementById(label.for);\n\n  if (!forComponentEl) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    for (const labelable of unlabeledComponents) {\n      if (labelable.el === forComponentEl) {\n        connectLabel(labelable);\n        break;\n      }\n    }\n  });\n}\n","import { readTask } from \"@stencil/core\";\nimport { whenTransitionDone } from \"./dom\";\n\n/**\n * Exported for testing purposes only\n */\nexport const internalReadTask = readTask;\n\n/**\n * Defines interface for components with open/close public emitter.\n * All implementations of this interface must handle the following events: `beforeOpen`, `open`, `beforeClose`, `close`.\n */\nexport interface OpenCloseComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * When true, the component opens.\n   */\n  open?: boolean;\n\n  /**\n   * When true, the component is open.\n   */\n  opened?: boolean;\n\n  /**\n   *  Specifies the name of transitionProp.\n   */\n  transitionProp?: string;\n\n  /**\n   * Specifies property on which active transition is watched for.\n   */\n  openTransitionProp: string;\n\n  /**\n   * Specifies element that the transition is allowed to emit on.\n   */\n  transitionEl: HTMLElement;\n\n  /**\n   * Defines method for `beforeOpen` event handler.\n   */\n  onBeforeOpen: () => void;\n\n  /**\n   * Defines method for `open` event handler:\n   */\n  onOpen: () => void;\n\n  /**\n   * Defines method for `beforeClose` event handler:\n   */\n  onBeforeClose: () => void;\n\n  /**\n   * Defines method for `close` event handler:\n   */\n  onClose: () => void;\n}\n\nfunction isOpen(component: OpenCloseComponent): boolean {\n  return \"opened\" in component ? component.opened : component.open;\n}\n\n/**\n * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch(\"open\").\n * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).\n *\n * @example\n * import { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\n *\n * async componentWillLoad() {\n * // When component initially renders, if `open` was set we need to trigger on load as watcher doesn't fire.\n * if (this.open) {\n *    onToggleOpenCloseComponent(this);\n * }\n * @Watch(\"open\")\n * async toggleModal(value: boolean): Promise<void> {\n *    onToggleOpenCloseComponent(this);\n * }\n *\n * @param component - OpenCloseComponent uses `open` prop to emit (before)open/close.\n */\nexport function onToggleOpenCloseComponent(component: OpenCloseComponent): void {\n  internalReadTask((): void => {\n    if (!component.transitionEl) {\n      return;\n    }\n\n    whenTransitionDone(\n      component.transitionEl,\n      component.openTransitionProp,\n      () => {\n        if (isOpen(component)) {\n          component.onBeforeOpen();\n        } else {\n          component.onBeforeClose();\n        }\n      },\n      () => {\n        if (isOpen(component)) {\n          component.onOpen();\n        } else {\n          component.onClose();\n        }\n      },\n    );\n  });\n}\n"],"names":["CSS","Validation","_ref","scale","status","id","icon","message","h","class","CSS$3","XButton","disabled","key","label","tabIndex","type","getIconScale","ComboboxItem$1","ComboboxItemGroup$1","ComboboxChildSelector","CSS$2","IDS","getAncestors","element","parent","parentElement","closest","grandparent","filter","el","getItemAncestors","item","ancestors","nodeName","hasActiveChildren","node","nodeListToArray","querySelectorAll","selected","length","getDepth","isBrowser","document","evaluate","XPathResult","UNORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","isSingleLike","selectionMode","includes","getLabel","shortHeading","textLabel","itemUidPrefix","chipUidPrefix","labelUidPrefix","listboxUidPrefix","inputUidPrefix","Combobox","placement","defaultMenuPlacement","internalValueChangeFlag","textInput","mutationObserver","createObserver","this","updateItems","resizeObserver","setMaxScrollerHeight","refreshSelectionDisplay","guid","inputHeight","ignoreSelectedEventsFlag","openTransitionProp","setFilteredPlacements","flipPlacements","filteredFlipPlacements","filterValidFlipPlacements","getValue","items","selectedItems","map","value","toString","onLabelClick","setFocus","keyDownHandler","event","readOnly","activeChipIndex","activeItemIndex","allowCustomValues","filterText","addCustomChip","preventDefault","open","clearInputValue","filterItems","updateActiveItemIndex","selectionStart","previousChip","nextChip","filteredItems","shiftActiveItemIndex","comboboxInViewport","scrollIntoView","ensureRecentSelectedItemIsActive","defaultPrevented","scrollToActiveItem","clearDisabled","clearValue","toggleSelection","removeActiveChip","submitForm","selectionDisplay","selectedHiddenChipsCount","isMulti","removeLastChip","async","listContainerEl","referenceEl","reposition","maxScrollerHeight","getMaxScrollerHeight","style","maxHeight","minWidth","clientWidth","calciteChipCloseHandler","comboboxItem","selection","find","calciteComboboxChipClose","emit","clickHandler","composedPath","some","tagName","classList","contains","componentLoaded","allSelectedIndicatorChipEl","chipContainerEl","placeholder","selectedIndicatorChipEl","chipContainerElGap","parseInt","getComputedStyle","gap","replace","chipContainerElWidth","getElementWidth","fontSize","fontFamily","inputWidth","getTextWidth","calciteSize48","allSelectedIndicatorChipElWidth","selectedIndicatorChipElWidth","largestSelectedIndicatorChipWidth","Math","max","setCompactSelectionDisplay","chipEls","Array","from","shadowRoot","chipEl","closable","availableHorizontalChipElSpace","round","refreshChipDisplay","setVisibleAndHiddenChips","setFloatingEl","floatingEl","connectFloatingUI","setContainerEl","observe","transitionEl","setChipContainerEl","setReferenceEl","setAllSelectedIndicatorChipEl","setSelectedIndicatorChipEl","inputHandler","target","filteredData","_ref2","debounce","text","setOpenToEmptyState","arguments","undefined","_this","data","itemsAndGroups","getItemsAndGroups","matchAll","forEach","hidden","ancestor","filterTextMatchPattern","RegExp","escapeRegExp","getFilteredItems","trim","calciteComboboxFilterChange","DEBOUNCE","internalComboboxChangeEvent","calciteComboboxChange","emitComboboxChange","getSelectedItems","match","_ref3","sort","a","b","aIdx","indexOf","bIdx","getItems","groupItems","getGroupItems","getData","needsIcon","getNeedsIcon","groupItem","index","afterEmptyGroup","nextGroupItem","children","activeItem","height","calculateScrollerHeight","offsetHeight","scrollTop","offsetTop","comboboxFocusHandler","focus","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","filterTextChange","openHandler","onToggleOpenCloseComponent","handleDisabledChange","maxItemsHandler","overlayPositioningHandler","handlePropsChange","valueHandler","isArray","onMessagesChange","flipPlacementsHandler","selectedItemsHandler","documentClickHandler","componentOnReady","calciteComboboxItemChangeHandler","newIndex","calciteInternalComboboxItemChangeHandler","stopPropagation","delayed","overlayPositioning","componentFocusable","connectedCallback","connectLocalized","connectMessages","connectLabel","connectForm","childList","subtree","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","afterConnectDefaultValueSet","setComponentLoaded","componentDidRender","updateHostInteraction","componentDidUpdate","disconnectedCallback","disconnect","disconnectLabel","disconnectForm","disconnectFloatingUI","disconnectLocalized","disconnectMessages","effectiveLocaleChange","updateMessages","effectiveLocale","resetText","bounding","getBoundingClientRect","top","left","right","window","innerWidth","documentElement","bottom","innerHeight","clientHeight","onBeforeOpen","calciteComboboxBeforeOpen","onOpen","calciteComboboxOpen","onBeforeClose","calciteComboboxBeforeClose","onClose","calciteComboboxClose","targetIndex","hideChip","add","showChip","remove","_ref4","chipElWidth","_ref5","newCompactBreakpoint","maxCompactBreakpoint","compactSelectionDisplay","newSelectedVisibleChipsCount","selectedVisibleChipsCount","newSelectedHiddenChipsCount","maxItems","itemsToProcess","reduce","total","child","updateAncestors","getItemChildren","description","filterDisabled","metadata","existingItem","createElement","prepend","active","focusChip","last","chip","querySelector","delta","activeDescendant","i","isAllSelected","renderChips","messages","chipClasses","reverse","itemLabel","pathLabel","join","appearance","iconFlipRtl","messageOverrides","dismissLabel","removeTag","onCalciteChipClose","onFocusin","tabindex","title","renderAllSelectedIndicatorChip","allSelected","ref","renderAllSelectedIndicatorChipCompact","all","renderSelectedIndicatorChip","chipInvisible","selectedItemsCount","renderSelectedIndicatorChipCompact","showingInlineIcon","placeholderIcon","selectedItem","selectedIcon","singleSelectionMode","renderInput","single","showLabel","toAriaBoolean","getLabelText","onFocus","onInput","role","renderListBoxOptions","renderFloatingUIContainer","classes","FloatingCSS","animation","animationActive","list","renderSelectedOrPlaceholderIcon","placeholderIconFlipRtl","showPlaceholder","flipRtl","renderChevronIcon","render","allSelectionDisplay","singleSelectionDisplay","fitSelectionDisplay","isClearable","Host","onClick","InteractiveContainer","wrapper","onKeyDown","htmlFor","clear","HiddenFormInputSlot","component","validationMessage","validationIcon","CSS$1","SLOTS","ComboboxItem","itemClickHandler","toggleSelected","handleComboboxItemPropsChange","calciteInternalComboboxItemChange","selectedWatchHandler","calciteComboboxItemChange","connectConditionalSlotComponent","disconnectConditionalSlotComponent","isSinglePersistSelect","renderIcon","iconPath","renderSelectIndicator","showDot","renderChildren","getSlotted","heading","isSingleSelect","headingText","depth","renderTextContent","name","pattern","parts","split","ComboboxItemGroup","componentScale","isStencilEl","Promise","resolve","requestAnimationFrame","observerOptions","processMutations","unobserve","mutations","forceUpdate","calciteSize24","calciteSize32","calciteSize44","componentsWithInputEvent","hiddenFormInputSlotName","isCheckable","onFormResetMap","WeakMap","formComponentSet","WeakSet","getValidationComponent","closestElementCrossShadowBoundary","invalidEvent","CustomEvent","bubbles","composed","invalidHandler","hiddenInput","hiddenInputMessage","formComponent","componentTag","toLowerCase","componentTagParts","validity","dispatchEvent","displayValidationMessage","clearValidationEvent","part","toUpperCase","slice","getClearValidationEventName","addEventListener","once","formEl","requestSubmit","removeEventListener","invalidEls","resetForm","reset","associatedForm","findAssociatedForm","form","formComponentEl","formComponentRegisterEventName","hasRegisteredFormComponentParent","has","defaultValue","defaultChecked","checked","boundOnFormReset","onFormReset","bind","set","queryElementRoots","get","delete","internalHiddenInputInputEvent","hiddenInputInputHandler","removeHiddenInputChangeEventListener","input","defaultSyncHiddenFormInput","required","setAttribute","removeAttribute","syncHiddenFormInput","validationComponent","ownerDocument","inputs","values","extra","seen","Set","docFrag","valueMatch","val","push","pop","slot","createDocumentFragment","append","labelClickEvent","labelConnectedEvent","labelDisconnectedEvent","labelTagName","labelToLabelables","onLabelClickMap","onLabelConnectedMap","onLabelDisconnectedMap","unlabeledComponents","findLabelForComponent","componentEl","forLabel","selector","parentLabel","traversedElements","customElementAncestorCheckEventType","listener","stopImmediatePropagation","ancestorCustomElements","hasAncestorCustomElements","labelEl","boundOnLabelDisconnected","onLabelDisconnected","labelables","sortByDOMOrder","labelable","isBefore","textContent","labelClickTarget","detail","sourceEvent","clickedLabelable","firstLabelable","onLabelConnected","boundOnLabelConnected","associateExplicitLabelToUnlabeledComponent","forComponentEl","getElementById","for","internalReadTask","readTask","isOpen","opened","whenTransitionDone"],"sourceRoot":""}