{"version":3,"file":"static/js/51863.a772425e.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/Heading.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/date.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-day/date-picker-day.scss?tag=calcite-date-picker-day&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-day/date-picker-day.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month/date-picker-month.scss?tag=calcite-date-picker-month&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month/date-picker-month.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month-header/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month-header/date-picker-month-header.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month-header/date-picker-month-header.scss?tag=calcite-date-picker-month-header&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/date-picker.scss?tag=calcite-date-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/date-picker.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/input-date-picker.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/input-date-picker.scss?tag=calcite-input-date-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/t9n.ts"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\n\nexport type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeadingProps extends Pick<JSXBase.HTMLAttributes, \"class\" | \"key\"> {\n  level?: HeadingLevel;\n}\n\nexport function constrainHeadingLevel(level: number): HeadingLevel {\n  return Math.min(Math.max(Math.ceil(level), 1), 6) as HeadingLevel;\n}\n\nexport const Heading: FunctionalComponent<HeadingProps> = (props, children): VNode => {\n  const HeadingTag = props.level ? `h${props.level}` : \"div\";\n\n  delete props.level;\n\n  return (\n    <HeadingTag class={props.class} key={props.key}>\n      {children}\n    </HeadingTag>\n  );\n};\n","import { DateLocaleData } from \"../components/date-picker/utils\";\nimport { numberStringFormatter } from \"./locale\";\n\nexport interface HoverRange {\n  focused: \"end\" | \"start\";\n  start: Date;\n  end: Date;\n}\n\n/**\n * Check if date is within a min and max\n *\n * @param date\n * @param min\n * @param max\n */\nexport function inRange(date: Date, min?: Date | string, max?: Date | string): boolean {\n  if (!date) {\n    return;\n  }\n  const time = date.getTime();\n  const afterMin = !(min instanceof Date) || time >= min.getTime();\n  const beforeMax = !(max instanceof Date) || time <= max.getTime();\n  return afterMin && beforeMax;\n}\n\n/**\n * Ensures date is within range,\n * returns min or max if out of bounds\n *\n * @param date\n * @param min\n * @param max\n */\nexport function dateFromRange(date?: any, min?: Date | string, max?: Date | string): Date | null {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n  const time = date.getTime();\n  const beforeMin = min instanceof Date && time < min.getTime();\n  const afterMax = max instanceof Date && time > max.getTime();\n  if (beforeMin) {\n    return min;\n  }\n  if (afterMax) {\n    return max;\n  }\n  return date;\n}\n\n/**\n * Parse an iso8601 string (YYYY-mm-dd) into a valid date.\n * TODO: handle time when time of day UI is added\n *\n * @param iso8601\n * @param isEndDate\n */\nexport function dateFromISO(iso8601: string | Date, isEndDate = false): Date | null {\n  if (iso8601 instanceof Date) {\n    return iso8601;\n  }\n  if (!iso8601 || typeof iso8601 !== \"string\") {\n    return null;\n  }\n  const d = iso8601.split(/[: T-]/).map(parseFloat);\n  const date = new Date(d[0], (d[1] || 1) - 1, d[2] || 1);\n  date.setFullYear(d[0]);\n  if (isNaN(date.getTime())) {\n    throw new Error(`Invalid ISO 8601 date: \"${iso8601}\"`);\n  }\n  if (isEndDate) {\n    return setEndOfDay(date);\n  }\n  return date;\n}\n\n/**\n * Parse a localized date string into a valid Date.\n * return false if date is invalid, or out of range\n *\n * @param value\n * @param localeData\n */\nexport function dateFromLocalizedString(value: string, localeData: DateLocaleData): Date {\n  if (!localeData) {\n    return null;\n  }\n  const { separator } = localeData;\n  const parts = parseDateString(value, localeData);\n\n  const { day, month } = parts;\n  const year = parseCalendarYear(parts.year, localeData);\n\n  const date = new Date(year, month, day);\n  date.setFullYear(year);\n\n  const validDay = day > 0;\n  const validMonth = month > -1;\n  const validDate = !isNaN(date.getTime());\n  const validLength = value.split(separator).filter((c) => c).length > 2;\n  const validYear = year.toString().length > 0;\n\n  if (validDay && validMonth && validDate && validLength && validYear) {\n    return date;\n  }\n  return null;\n}\n\nexport function parseCalendarYear(year: number, localeData: DateLocaleData): number {\n  return processCalendarYear(year, localeData, \"read\");\n}\n\nexport function formatCalendarYear(year: number, localeData: DateLocaleData): number {\n  return processCalendarYear(year, localeData, \"write\");\n}\n\nfunction processCalendarYear(year: number, localeData: DateLocaleData, mode: \"read\" | \"write\"): number {\n  if (localeData[\"default-calendar\"] !== \"buddhist\") {\n    return year;\n  }\n\n  const BUDDHIST_CALENDAR_YEAR_OFFSET = 543;\n  const yearOffset = BUDDHIST_CALENDAR_YEAR_OFFSET * (mode === \"read\" ? -1 : 1);\n\n  return year + yearOffset;\n}\n\n/**\n * Retrieve day, month, and year strings from a localized string\n *\n * @param string\n * @param localeData\n */\nexport function datePartsFromLocalizedString(\n  string: string,\n  localeData: DateLocaleData,\n): { day: string; month: string; year: string } {\n  const { separator, unitOrder } = localeData;\n  const order = getOrder(unitOrder);\n  const values = string.split(separator).map((part) => numberStringFormatter.delocalize(part));\n  const day = values[order.indexOf(\"d\")];\n  const month = values[order.indexOf(\"m\")];\n  const year = values[order.indexOf(\"y\")];\n  return { day, month, year };\n}\n\n/**\n * Return the date portion in local time of a Date object in ISO 8601 format (YYYY-MM-DD)\n *\n * @param date\n */\nexport function dateToISO(date?: Date): string {\n  if (date instanceof Date) {\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const year = String(date.getFullYear()).padStart(4, \"0\");\n    return `${year}-${month}-${day}`;\n  }\n  return \"\";\n}\n\n/**\n * Retrieve day, month, and year strings from a ISO string (YYYY-mm-dd)\n *\n * @param string\n * @param isoDate\n */\nexport function datePartsFromISO(isoDate: string): { day: string; month: string; year: string } {\n  const dateParts = isoDate.split(\"-\");\n  return { day: dateParts[2], month: dateParts[1], year: dateParts[0] };\n}\n\n/**\n * Check if two dates are the same day, month, year\n *\n * @param d1\n * @param d2\n */\nexport function sameDate(d1: Date, d2: Date): boolean {\n  return (\n    d1 instanceof Date &&\n    d2 instanceof Date &&\n    d1.getDate() === d2.getDate() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getFullYear() === d2.getFullYear()\n  );\n}\n\n/**\n * Get a date one month in the past\n *\n * @param date\n */\nexport function prevMonth(date: Date): Date {\n  const month = date.getMonth();\n  const nextDate = new Date(date);\n  nextDate.setMonth(month - 1);\n  // date doesn't exist in new month, use last day\n  if (month === nextDate.getMonth()) {\n    return new Date(date.getFullYear(), month, 0);\n  }\n  return nextDate;\n}\n\n/**\n * Get a date one month in the future\n *\n * @param date\n */\nexport function nextMonth(date: Date): Date {\n  const month = date.getMonth();\n  const nextDate = new Date(date);\n  nextDate.setMonth(month + 1);\n  // date doesn't exist in new month, use last day\n  if ((month + 2) % 7 === nextDate.getMonth() % 7) {\n    return new Date(date.getFullYear(), month + 2, 0);\n  }\n  return nextDate;\n}\n\n/**\n * Parse numeric units for day, month, and year from a localized string\n * month starts at 0 (can pass to date constructor)\n * can return values as number or string\n *\n * @param string\n * @param localeData\n */\nexport function parseDateString(\n  string: string,\n  localeData: DateLocaleData,\n): { day: number; month: number; year: number } {\n  const { day, month, year } = datePartsFromLocalizedString(string, localeData);\n  return {\n    day: parseInt(day),\n    month: parseInt(month) - 1, // this subtracts by 1 because the month in the Date constructor is zero-based https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth\n    year: parseInt(year),\n  };\n}\n\ntype unitOrderSignifier = \"m\" | \"d\" | \"y\";\n\n/**\n * Based on the unitOrder string, find order of month, day, and year for locale\n *\n * @param unitOrder\n */\nexport function getOrder(unitOrder: string): unitOrderSignifier[] {\n  const signifiers: unitOrderSignifier[] = [\"d\", \"m\", \"y\"];\n  const order = unitOrder.toLowerCase();\n  return signifiers.sort((a, b) => order.indexOf(a) - order.indexOf(b));\n}\n\n/**\n * Get number of days between two dates\n *\n * @param date1\n * @param date2\n */\nexport function getDaysDiff(date1: Date, date2: Date): number {\n  const ts1 = date1.getTime();\n  const ts2 = date2.getTime();\n  return (ts1 - ts2) / (1000 * 3600 * 24);\n}\n\n/**\n * Set time of the day to the end.\n *\n * @param {Date} date Date.\n * @returns {Date} Date with time set to end of day .\n */\nexport function setEndOfDay(date: Date): Date {\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\n",":host {\n  @apply cursor-pointer flex relative text-color-3;\n}\n\n@include disabled();\n\n@mixin range-part-base() {\n  &::before,\n  &::after {\n    @apply absolute pointer-events-none;\n    inset-block: 0;\n    content: \"\";\n    block-size: var(--calcite-internal-day-size);\n    inline-size: var(--calcite-internal-day-size);\n  }\n}\n\n@mixin range-part-edge-end() {\n  &::before {\n    inset-inline-end: 50%;\n  }\n  &::after {\n    inset-inline-start: 50%;\n    border-start-end-radius: var(--calcite-internal-day-size);\n    border-end-end-radius: var(--calcite-internal-day-size);\n    inline-size: calc(var(--calcite-internal-day-size) / 2);\n  }\n}\n\n@mixin range-part-edge-start() {\n  &::before {\n    inset-inline-end: 50%;\n    border-start-start-radius: var(--calcite-internal-day-size);\n    border-end-start-radius: var(--calcite-internal-day-size);\n    inline-size: calc(var(--calcite-internal-day-size) / 2);\n  }\n  &::after {\n    inset-inline-start: 50%;\n  }\n}\n\n@mixin range-part-middle() {\n  &::before {\n    inset-inline-end: 50%;\n    border-radius: 0;\n  }\n  &::after {\n    inset-inline-start: 50%;\n    border-radius: 0;\n  }\n}\n\n.day-v-wrapper {\n  @apply flex-auto;\n}\n\n.day-wrapper {\n  @apply flex\n    flex-col\n    items-center\n    relative;\n}\n\n:host([range]),\n:host([range-hover]) {\n  .day-wrapper {\n    @include range-part-base();\n  }\n}\n\n.day {\n  @apply text-n2h\n    text-color-3\n    flex\n    focus-base\n    items-center\n    justify-center\n    rounded-full\n    leading-none\n    transition-default\n    z-default;\n  background: none;\n  box-shadow: 0 0 0 2px transparent;\n  block-size: var(--calcite-internal-day-size);\n  inline-size: var(--calcite-internal-day-size);\n}\n\n.text {\n  @apply mt-px mb-0;\n  margin-inline-start: theme(\"spacing.0\");\n}\n\n:host([scale=\"s\"]) {\n  --calcite-internal-day-size: 27px;\n\n  .day-v-wrapper {\n    @apply py-0.5;\n  }\n  .day-wrapper {\n    @apply p-0;\n  }\n  .day {\n    @apply text-n2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-internal-day-size: 33px;\n\n  .day-v-wrapper {\n    @apply py-1;\n  }\n  .day-wrapper {\n    @apply p-0;\n  }\n  .day {\n    @apply text-n1;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-internal-day-size: 43px;\n\n  .day-v-wrapper {\n    @apply py-1;\n  }\n  .day-wrapper {\n    @apply px-1;\n  }\n  .day {\n    @apply text-0;\n  }\n}\n\n:host(:not([current-month])) .day {\n  @apply opacity-disabled;\n}\n\n:host(:hover:not([disabled]):not([selected])),\n:host([active]:not([range]):not([selected])) {\n  & .day {\n    @apply bg-foreground-2 text-color-1;\n  }\n}\n\n:host(:focus),\n:host([active]) {\n  @apply outline-none;\n}\n\n:host(:focus:not([disabled])) .day {\n  @apply focus-outset;\n}\n\n:host([selected]) .day {\n  @apply font-medium;\n  background-color: var(--calcite-color-brand);\n  color: var(--calcite-color-foreground-1);\n}\n\n:host(:focus:not([disabled])),\n:host([start-of-range]:not(:focus)),\n:host([end-of-range]:not(:focus)) {\n  .day {\n    box-shadow: 0 0 0 2px var(--calcite-color-foreground-1);\n  }\n}\n\n:host([range-hover]:not([selected])),\n:host([highlighted]:not([selected])) {\n  .day-wrapper {\n    @include range-part-middle();\n  }\n\n  .day {\n    @apply text-color-1;\n  }\n}\n\n:host([highlighted]),\n:host([selected]:not(.hover--outside-range)) {\n  .day-wrapper {\n    &::before,\n    &::after {\n      background-color: var(--calcite-color-foreground-current);\n    }\n  }\n}\n\n:host([range-hover]:not([selected])) {\n  .day-wrapper {\n    &::before,\n    &::after {\n      @apply bg-foreground-2;\n    }\n  }\n}\n\n:host(:hover[range-hover]:not([selected]).focused--end),\n:host([highlighted][end-of-range]),\n:host([highlighted][range-edge=\"end\"]),\n:host([range-hover][range-edge=\"end\"]),\n:host(:hover[range-hover].focused--end.hover--outside-range) {\n  .day-wrapper {\n    @include range-part-edge-end();\n  }\n}\n\n:host([highlighted][start-of-range]),\n:host([highlighted][range-edge=\"start\"]),\n:host([range-hover][range-edge=\"start\"]),\n:host(:hover[range-hover]:not([selected]).focused--start),\n:host([start-of-range].hover--inside-range),\n:host(:hover[range-hover].focused--start.hover--outside-range) {\n  .day-wrapper {\n    @include range-part-edge-start();\n  }\n}\n\n:host([range-hover][start-of-range][range-edge=\"end\"]),\n:host([range-hover][end-of-range][range-edge=\"start\"]),\n:host([start-of-range][range-edge=\"end\"].hover--inside-range),\n:host([end-of-range]) {\n  .day-wrapper {\n    &::after,\n    &::before {\n      content: unset;\n    }\n  }\n}\n\n:host(:hover[range-hover]:not([selected]).focused--start),\n:host(:hover[range-hover]:not([selected]).focused--end),\n:host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range),\n:host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) {\n  .day {\n    box-shadow: 0 0 0 2px var(--calcite-color-foreground-1);\n  }\n}\n\n@media (forced-colors: active) {\n  .day {\n    @apply rounded-none;\n  }\n\n  :host([selected]) {\n    outline: 2px solid canvasText;\n  }\n\n  :host(:hover:not([selected])) {\n    .day {\n      border-radius: 50%;\n    }\n  }\n\n  :host([range][selected]),\n  :host([highlighted]),\n  :host([range-hover]:not([selected])) {\n    .day-wrapper {\n      &::before,\n      &::after {\n        background-color: highlight;\n      }\n    }\n  }\n\n  :host([range-hover]),\n  :host([range][selected][start-of-range]),\n  :host([range][selected][end-of-range]) {\n    .day-wrapper {\n      &::before,\n      &::after {\n        background-color: canvas;\n      }\n    }\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n  Method,\n} from \"@stencil/core\";\nimport { dateToISO } from \"../../utils/date\";\nimport { closestElementCrossShadowBoundary, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { numberStringFormatter } from \"../../utils/locale\";\nimport { Scale } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n@Component({\n  tag: \"calcite-date-picker-day\",\n  styleUrl: \"date-picker-day.scss\",\n  shadow: true,\n})\nexport class DatePickerDay implements InteractiveComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Day of the month to be shown. */\n  @Prop() day!: number;\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @Prop() dateTimeFormat: Intl.DateTimeFormat;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Date is in the current month. */\n  @Prop({ reflect: true }) currentMonth = false;\n\n  /**  When `true`, the component is selected. */\n  @Prop({ reflect: true }) selected = false;\n\n  /** Date is currently highlighted as part of the range, */\n  @Prop({ reflect: true }) highlighted = false;\n\n  /** When `true`, activates the component's range mode to allow a start and end date. */\n  @Prop({ reflect: true }) range = false;\n\n  /**\n   * When `true`, highlight styling for edge dates is applied.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) rangeEdge: \"start\" | \"end\" | undefined;\n\n  /** Date is the start of date range. */\n  @Prop({ reflect: true }) startOfRange = false;\n\n  /** Date is the end of date range. */\n  @Prop({ reflect: true }) endOfRange = false;\n\n  /** Date is being hovered and within the set range. */\n  @Prop({ reflect: true }) rangeHover = false;\n\n  /** When `true`, the component is active. */\n  @Prop({ reflect: true }) active = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /** The component's value. */\n  @Prop() value: Date;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  onClick = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.calciteDaySelect.emit();\n  };\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      !this.disabled && this.calciteDaySelect.emit();\n      event.preventDefault();\n    }\n  };\n\n  @Listen(\"pointerover\")\n  pointerOverHandler(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.calciteInternalDayHover.emit();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when user selects day.\n   */\n  @Event({ cancelable: false }) calciteDaySelect: EventEmitter<void>;\n\n  /**\n   * Fires when user hovers over a day.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDayHover: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.parentDatePickerEl = closestElementCrossShadowBoundary(this.el, \"calcite-date-picker\");\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  render(): VNode {\n    const dayId = dateToISO(this.value).replaceAll(\"-\", \"\");\n    if (this.parentDatePickerEl) {\n      const { numberingSystem, lang: locale } = this.parentDatePickerEl;\n\n      numberStringFormatter.numberFormatOptions = {\n        useGrouping: false,\n        ...(numberingSystem && { numberingSystem }),\n        ...(locale && { locale }),\n      };\n    }\n    const formattedDay = numberStringFormatter.localize(String(this.day));\n    const dayLabel = this.dateTimeFormat.format(this.value);\n\n    return (\n      <Host\n        aria-label={dayLabel}\n        aria-selected={toAriaBoolean(this.active)}\n        id={dayId}\n        onClick={this.onClick}\n        onKeyDown={this.keyDownHandler}\n        role=\"button\"\n        tabIndex={this.active && !this.disabled ? 0 : -1}\n      >\n        <InteractiveContainer disabled={this.disabled}>\n          <div aria-hidden=\"true\" class={{ \"day-v-wrapper\": true }}>\n            <div class=\"day-wrapper\">\n              <span class=\"day\">\n                <span class=\"text\">{formattedDay}</span>\n              </span>\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerDayElement;\n\n  private parentDatePickerEl: HTMLCalciteDatePickerElement;\n}\n","@include base-component();\n\n.calendar {\n  @apply mb-1;\n}\n\n.week-headers {\n  @apply border-color-3\n    flex\n    border-0\n    border-t\n    border-solid\n    py-0\n    px-1;\n}\n\n.week-header {\n  @apply text-color-3\n    text-center\n    font-bold;\n  inline-size: calc(100% / 7);\n}\n\n.day {\n  @apply flex\n  min-w-0\n  justify-center;\n  inline-size: 100%;\n  calcite-date-picker-day {\n    @apply w-full;\n  }\n}\n\n:host([scale=\"s\"]) .week-header {\n  @apply text-n2h px-0 pt-2 pb-3;\n}\n\n:host([scale=\"m\"]) .week-header {\n  @apply text-n2h px-0 pt-3 pb-4;\n}\n\n:host([scale=\"l\"]) .week-header {\n  @apply text-n1h px-0 pt-4 pb-5;\n}\n\n.week-days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-auto-rows: 1fr;\n  padding-block: 0;\n  padding-inline: 6px;\n  &:focus {\n    @apply outline-none;\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { dateFromRange, HoverRange, inRange, sameDate } from \"../../utils/date\";\nimport { DateLocaleData } from \"../date-picker/utils\";\nimport { Scale } from \"../interfaces\";\n\nconst DAYS_PER_WEEK = 7;\nconst DAYS_MAXIMUM_INDEX = 6;\n\ninterface Day {\n  active: boolean;\n  currentMonth?: boolean;\n  date: Date;\n  day: number;\n  dayInWeek?: number;\n  ref?: boolean;\n}\n\n@Component({\n  tag: \"calcite-date-picker-month\",\n  styleUrl: \"date-picker-month.scss\",\n  shadow: true,\n})\nexport class DatePickerMonth {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @Prop() dateTimeFormat: Intl.DateTimeFormat;\n\n  /** Already selected date.*/\n  @Prop() selectedDate: Date;\n\n  /** The currently active Date.*/\n  @Prop() activeDate: Date = new Date();\n\n  /** Start date currently active. */\n  @Prop() startDate?: Date;\n\n  /** End date currently active.  */\n  @Prop() endDate?: Date;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() min: Date;\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() max: Date;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * CLDR locale data for current locale.\n   *\n   * @internal\n   */\n  @Prop() localeData: DateLocaleData;\n\n  /** The range of dates currently being hovered. */\n  @Prop() hoverRange: HoverRange;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when user selects the date.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerSelect: EventEmitter<Date>;\n\n  /**\n   * Fires when user hovers the date.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerHover: EventEmitter<Date>;\n\n  /**\n   * Active date for the user keyboard access.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerActiveDateChange: EventEmitter<Date>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerMouseOut: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const isRTL = this.el.dir === \"rtl\";\n\n    switch (event.key) {\n      case \"ArrowUp\":\n        event.preventDefault();\n        this.addDays(-7);\n        break;\n      case \"ArrowRight\":\n        event.preventDefault();\n        this.addDays(isRTL ? -1 : 1);\n        break;\n      case \"ArrowDown\":\n        event.preventDefault();\n        this.addDays(7);\n        break;\n      case \"ArrowLeft\":\n        event.preventDefault();\n        this.addDays(isRTL ? 1 : -1);\n        break;\n      case \"PageUp\":\n        event.preventDefault();\n        this.addMonths(-1);\n        break;\n      case \"PageDown\":\n        event.preventDefault();\n        this.addMonths(1);\n        break;\n      case \"Home\":\n        event.preventDefault();\n        this.activeDate.setDate(1);\n        this.addDays();\n        break;\n      case \"End\":\n        event.preventDefault();\n        this.activeDate.setDate(\n          new Date(this.activeDate.getFullYear(), this.activeDate.getMonth() + 1, 0).getDate(),\n        );\n        this.addDays();\n        break;\n      case \"Enter\":\n      case \" \":\n        event.preventDefault();\n        break;\n      case \"Tab\":\n        this.activeFocus = false;\n    }\n  };\n\n  /**\n   * Once user is not interacting via keyboard,\n   * disable auto focusing of active date\n   */\n  disableActiveFocus = (): void => {\n    this.activeFocus = false;\n  };\n\n  @Listen(\"pointerout\")\n  pointerOutHandler(): void {\n    this.calciteInternalDatePickerMouseOut.emit();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  render(): VNode {\n    const month = this.activeDate.getMonth();\n    const year = this.activeDate.getFullYear();\n    const startOfWeek = this.localeData.weekStart % 7;\n    const { abbreviated, short, narrow } = this.localeData.days;\n    const weekDays =\n      this.scale === \"s\" ? narrow || short || abbreviated : short || abbreviated || narrow;\n    const adjustedWeekDays = [...weekDays.slice(startOfWeek, 7), ...weekDays.slice(0, startOfWeek)];\n    const curMonDays = this.getCurrentMonthDays(month, year);\n    const prevMonDays = this.getPreviousMonthDays(month, year, startOfWeek);\n    const nextMonDays = this.getNextMonthDays(month, year, startOfWeek);\n    let dayInWeek = 0;\n    const getDayInWeek = () => dayInWeek++ % 7;\n\n    const days: Day[] = [\n      ...prevMonDays.map((day) => {\n        return {\n          active: false,\n          day,\n          dayInWeek: getDayInWeek(),\n          date: new Date(year, month - 1, day),\n        };\n      }),\n      ...curMonDays.map((day) => {\n        const date = new Date(year, month, day);\n        const active = sameDate(date, this.activeDate);\n        return {\n          active,\n          currentMonth: true,\n          day,\n          dayInWeek: getDayInWeek(),\n          date,\n          ref: true,\n        };\n      }),\n      ...nextMonDays.map((day) => {\n        return {\n          active: false,\n          day,\n          dayInWeek: getDayInWeek(),\n          date: new Date(year, month + 1, day),\n        };\n      }),\n    ];\n\n    return (\n      <Host onFocusout={this.disableActiveFocus} onKeyDown={this.keyDownHandler}>\n        <div class=\"calendar\" role=\"grid\">\n          <div class=\"week-headers\" role=\"row\">\n            {adjustedWeekDays.map((weekday) => (\n              <span class=\"week-header\" role=\"columnheader\">\n                {weekday}\n              </span>\n            ))}\n          </div>\n\n          <div class=\"week-days\" role=\"row\">\n            {days.map((day, index) => this.renderDateDay(day, index))}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerMonthElement;\n\n  private activeFocus: boolean;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Add n months to the current month\n   *\n   * @param step\n   */\n  private addMonths(step: number) {\n    const nextDate = new Date(this.activeDate);\n    nextDate.setMonth(this.activeDate.getMonth() + step);\n    this.calciteInternalDatePickerActiveDateChange.emit(\n      dateFromRange(nextDate, this.min, this.max),\n    );\n    this.activeFocus = true;\n  }\n\n  /**\n   * Add n days to the current date\n   *\n   * @param step\n   */\n  private addDays(step = 0) {\n    const nextDate = new Date(this.activeDate);\n    nextDate.setDate(this.activeDate.getDate() + step);\n    this.calciteInternalDatePickerActiveDateChange.emit(\n      dateFromRange(nextDate, this.min, this.max),\n    );\n    this.activeFocus = true;\n  }\n\n  /**\n   * Get dates for last days of the previous month\n   *\n   * @param month\n   * @param year\n   * @param startOfWeek\n   */\n  private getPreviousMonthDays(month: number, year: number, startOfWeek: number): number[] {\n    const lastDate = new Date(year, month, 0);\n    const date = lastDate.getDate();\n    const startDay = lastDate.getDay();\n    const days = [];\n\n    if (startDay === (startOfWeek + DAYS_MAXIMUM_INDEX) % DAYS_PER_WEEK) {\n      return days;\n    }\n\n    if (startDay === startOfWeek) {\n      return [date];\n    }\n\n    for (let i = (DAYS_PER_WEEK + startDay - startOfWeek) % DAYS_PER_WEEK; i >= 0; i--) {\n      days.push(date - i);\n    }\n    return days;\n  }\n\n  /**\n   * Get dates for the current month\n   *\n   * @param month\n   * @param year\n   */\n  private getCurrentMonthDays(month: number, year: number): number[] {\n    const num = new Date(year, month + 1, 0).getDate();\n    const days = [];\n    for (let i = 0; i < num; i++) {\n      days.push(i + 1);\n    }\n    return days;\n  }\n\n  /**\n   * Get dates for first days of the next month\n   *\n   * @param month\n   * @param year\n   * @param startOfWeek\n   */\n  private getNextMonthDays(month: number, year: number, startOfWeek: number): number[] {\n    const endDay = new Date(year, month + 1, 0).getDay();\n    const days = [];\n    if (endDay === (startOfWeek + DAYS_MAXIMUM_INDEX) % DAYS_PER_WEEK) {\n      return days;\n    }\n    for (let i = 0; i < (DAYS_MAXIMUM_INDEX - (endDay - startOfWeek)) % DAYS_PER_WEEK; i++) {\n      days.push(i + 1);\n    }\n    return days;\n  }\n\n  /**\n   * Determine if the date is in between the start and end dates\n   *\n   * @param date\n   */\n  private betweenSelectedRange(date: Date): boolean {\n    return !!(\n      this.startDate &&\n      this.endDate &&\n      date > this.startDate &&\n      date < this.endDate &&\n      !this.isRangeHover(date)\n    );\n  }\n\n  /**\n   * Determine if the date should be in selected state\n   *\n   * @param date\n   */\n  private isSelected(date: Date): boolean {\n    return !!(\n      sameDate(date, this.selectedDate) ||\n      (this.startDate && sameDate(date, this.startDate)) ||\n      (this.endDate && sameDate(date, this.endDate))\n    );\n  }\n\n  /**\n   * Determine if the date is the start of the date range\n   *\n   * @param date\n   */\n  private isStartOfRange(date: Date): boolean {\n    return !!(\n      this.startDate &&\n      !sameDate(this.startDate, this.endDate) &&\n      sameDate(this.startDate, date) &&\n      !this.isEndOfRange(date)\n    );\n  }\n\n  private isEndOfRange(date: Date): boolean {\n    return !!(\n      (this.endDate && !sameDate(this.startDate, this.endDate) && sameDate(this.endDate, date)) ||\n      (!this.endDate &&\n        this.hoverRange &&\n        sameDate(this.startDate, this.hoverRange.end) &&\n        sameDate(date, this.hoverRange.end))\n    );\n  }\n\n  dayHover = (event: CustomEvent): void => {\n    const target = event.target as HTMLCalciteDatePickerDayElement;\n    if (target.disabled) {\n      this.calciteInternalDatePickerMouseOut.emit();\n    } else {\n      this.calciteInternalDatePickerHover.emit(target.value);\n    }\n    event.stopPropagation();\n  };\n\n  daySelect = (event: CustomEvent): void => {\n    const target = event.target as HTMLCalciteDatePickerDayElement;\n    this.calciteInternalDatePickerSelect.emit(target.value);\n  };\n\n  /**\n   * Render calcite-date-picker-day\n   *\n   * @param active.active\n   * @param active\n   * @param day\n   * @param dayInWeek\n   * @param date\n   * @param currentMonth\n   * @param ref\n   * @param active.currentMonth\n   * @param active.date\n   * @param active.day\n   * @param active.dayInWeek\n   * @param active.ref\n   * @param key\n   */\n  private renderDateDay({ active, currentMonth, date, day, dayInWeek, ref }: Day, key: number) {\n    const isFocusedOnStart = this.isFocusedOnStart();\n    const isHoverInRange =\n      this.isHoverInRange() ||\n      (!this.endDate && this.hoverRange && sameDate(this.hoverRange?.end, this.startDate));\n\n    return (\n      <div class=\"day\" key={key} role=\"gridcell\">\n        <calcite-date-picker-day\n          active={active}\n          class={{\n            \"hover--inside-range\": this.startDate && isHoverInRange,\n            \"hover--outside-range\": this.startDate && !isHoverInRange,\n            \"focused--start\": isFocusedOnStart,\n            \"focused--end\": !isFocusedOnStart,\n          }}\n          currentMonth={currentMonth}\n          dateTimeFormat={this.dateTimeFormat}\n          day={day}\n          disabled={!inRange(date, this.min, this.max)}\n          endOfRange={this.isEndOfRange(date)}\n          highlighted={this.betweenSelectedRange(date)}\n          onCalciteDaySelect={this.daySelect}\n          onCalciteInternalDayHover={this.dayHover}\n          range={!!this.startDate && !!this.endDate && !sameDate(this.startDate, this.endDate)}\n          rangeEdge={dayInWeek === 0 ? \"start\" : dayInWeek === 6 ? \"end\" : undefined}\n          rangeHover={this.isRangeHover(date)}\n          ref={(el: HTMLCalciteDatePickerDayElement) => {\n            // when moving via keyboard, focus must be updated on active date\n            if (ref && active && this.activeFocus) {\n              el?.setFocus();\n            }\n          }}\n          scale={this.scale}\n          selected={this.isSelected(date)}\n          startOfRange={this.isStartOfRange(date)}\n          value={date}\n        />\n      </div>\n    );\n  }\n\n  private isFocusedOnStart(): boolean {\n    return this.hoverRange?.focused === \"start\";\n  }\n\n  private isHoverInRange(): boolean {\n    if (!this.hoverRange) {\n      return false;\n    }\n    const { start, end } = this.hoverRange;\n    return !!(\n      (!this.isFocusedOnStart() && this.startDate && (!this.endDate || end < this.endDate)) ||\n      (this.isFocusedOnStart() && this.startDate && start > this.startDate)\n    );\n  }\n\n  private isRangeHover(date): boolean {\n    if (!this.hoverRange) {\n      return false;\n    }\n    const { start, end } = this.hoverRange;\n    const isStart = this.isFocusedOnStart();\n    const insideRange = this.isHoverInRange();\n    const cond1 =\n      insideRange &&\n      ((!isStart && date > this.startDate && (date < end || sameDate(date, end))) ||\n        (isStart && date < this.endDate && (date > start || sameDate(date, start))));\n    const cond2 =\n      !insideRange &&\n      ((!isStart && date >= this.endDate && (date < end || sameDate(date, end))) ||\n        (isStart &&\n          ((this.startDate && date < this.startDate) ||\n            (this.endDate && sameDate(date, this.startDate))) &&\n          ((start && date > start) || sameDate(date, start))));\n    return cond1 || cond2;\n  }\n}\n","export const CSS = {\n  header: \"header\",\n  month: \"month\",\n  chevron: \"chevron\",\n  suffix: \"suffix\",\n  yearSuffix: \"year--suffix\",\n  yearWrap: \"year-wrap\",\n  textReverse: \"text--reverse\",\n};\n\nexport const ICON = {\n  chevronLeft: \"chevron-left\",\n  chevronRight: \"chevron-right\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  dateFromRange,\n  parseCalendarYear,\n  getOrder,\n  nextMonth,\n  prevMonth,\n  formatCalendarYear,\n} from \"../../utils/date\";\nimport { closestElementCrossShadowBoundary } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { numberStringFormatter } from \"../../utils/locale\";\nimport { DatePickerMessages } from \"../date-picker/assets/date-picker/t9n\";\nimport { DateLocaleData } from \"../date-picker/utils\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Scale } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { CSS, ICON } from \"./resources\";\n\n@Component({\n  tag: \"calcite-date-picker-month-header\",\n  styleUrl: \"date-picker-month-header.scss\",\n  shadow: true,\n})\nexport class DatePickerMonthHeader {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Already selected date. */\n  @Prop() selectedDate: Date;\n\n  /** The focused date is indicated and will become the selected date if the user proceeds. */\n  @Prop() activeDate: Date;\n\n  /**\n   * Specifies the number at which section headings should start.\n   */\n  @Prop() headingLevel: HeadingLevel;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() min: Date;\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() max: Date;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /** CLDR locale data for translated calendar info. */\n  @Prop() localeData: DateLocaleData;\n\n  /**\n   * This property specifies accessible strings for the component's previous month button ,next month button & year input elements.\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   * @readonly\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: DatePickerMessages;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /**\n   *  Fires to active date\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerSelect: EventEmitter<Date>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.parentDatePickerEl = closestElementCrossShadowBoundary(this.el, \"calcite-date-picker\");\n  }\n\n  connectedCallback(): void {\n    this.setNextPrevMonthDates();\n  }\n\n  render(): VNode {\n    return <div class={CSS.header}>{this.renderContent()}</div>;\n  }\n\n  renderContent(): VNode {\n    const { messages, localeData, activeDate } = this;\n    if (!activeDate || !localeData) {\n      return null;\n    }\n\n    if (this.parentDatePickerEl) {\n      const { numberingSystem, lang: locale } = this.parentDatePickerEl;\n\n      numberStringFormatter.numberFormatOptions = {\n        useGrouping: false,\n        ...(numberingSystem && { numberingSystem }),\n        ...(locale && { locale }),\n      };\n    }\n\n    const activeMonth = activeDate.getMonth();\n    const { months, unitOrder } = localeData;\n    const localizedMonth = (months.wide || months.narrow || months.abbreviated)[activeMonth];\n    const localizedYear = this.formatCalendarYear(activeDate.getFullYear());\n    const order = getOrder(unitOrder);\n    const reverse = order.indexOf(\"y\") < order.indexOf(\"m\");\n    const suffix = localeData.year?.suffix;\n    return (\n      <Fragment>\n        <a\n          aria-disabled={`${this.prevMonthDate.getMonth() === activeMonth}`}\n          aria-label={messages.prevMonth}\n          class={CSS.chevron}\n          href=\"#\"\n          onClick={this.prevMonthClick}\n          onKeyDown={this.prevMonthKeydown}\n          role=\"button\"\n          tabindex={this.prevMonthDate.getMonth() === activeMonth ? -1 : 0}\n        >\n          <calcite-icon flip-rtl icon={ICON.chevronLeft} scale={getIconScale(this.scale)} />\n        </a>\n        <div class={{ text: true, [CSS.textReverse]: reverse }}>\n          <Heading class={CSS.month} level={this.headingLevel}>\n            {localizedMonth}\n          </Heading>\n          <span class={CSS.yearWrap}>\n            <input\n              aria-label={messages.year}\n              class={{\n                year: true,\n                [CSS.yearSuffix]: !!suffix,\n              }}\n              inputmode=\"numeric\"\n              maxlength=\"4\"\n              minlength=\"1\"\n              onChange={this.onYearChange}\n              onInput={this.onYearInput}\n              onKeyDown={this.onYearKey}\n              pattern=\"\\d*\"\n              ref={(el) => (this.yearInput = el)}\n              type=\"text\"\n              value={localizedYear}\n            />\n            {suffix && <span class={CSS.suffix}>{suffix}</span>}\n          </span>\n        </div>\n        <a\n          aria-disabled={`${this.nextMonthDate.getMonth() === activeMonth}`}\n          aria-label={messages.nextMonth}\n          class={CSS.chevron}\n          href=\"#\"\n          onClick={this.nextMonthClick}\n          onKeyDown={this.nextMonthKeydown}\n          role=\"button\"\n          tabindex={this.nextMonthDate.getMonth() === activeMonth ? -1 : 0}\n        >\n          <calcite-icon flip-rtl icon={ICON.chevronRight} scale={getIconScale(this.scale)} />\n        </a>\n      </Fragment>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerMonthHeaderElement;\n\n  private yearInput: HTMLInputElement;\n\n  private parentDatePickerEl: HTMLCalciteDatePickerElement;\n\n  @State() nextMonthDate: Date;\n\n  @State() prevMonthDate: Date;\n\n  @Watch(\"min\")\n  @Watch(\"max\")\n  @Watch(\"activeDate\")\n  setNextPrevMonthDates(): void {\n    if (!this.activeDate) {\n      return;\n    }\n\n    this.nextMonthDate = dateFromRange(nextMonth(this.activeDate), this.min, this.max);\n    this.prevMonthDate = dateFromRange(prevMonth(this.activeDate), this.min, this.max);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Increment year on UP/DOWN keys\n   *\n   * @param event\n   */\n  private onYearKey = (event: KeyboardEvent): void => {\n    const localizedYear = this.parseCalendarYear((event.target as HTMLInputElement).value);\n    switch (event.key) {\n      case \"ArrowDown\":\n        event.preventDefault();\n        this.setYear({ localizedYear, offset: -1 });\n        break;\n      case \"ArrowUp\":\n        event.preventDefault();\n        this.setYear({ localizedYear, offset: 1 });\n        break;\n    }\n  };\n\n  private formatCalendarYear(year: number): string {\n    return numberStringFormatter.localize(`${formatCalendarYear(year, this.localeData)}`);\n  }\n\n  private parseCalendarYear(year: string): string {\n    return numberStringFormatter.localize(\n      `${parseCalendarYear(Number(numberStringFormatter.delocalize(year)), this.localeData)}`,\n    );\n  }\n\n  private onYearChange = (event: Event): void => {\n    this.setYear({\n      localizedYear: this.parseCalendarYear((event.target as HTMLInputElement).value),\n    });\n  };\n\n  private onYearInput = (event: Event): void => {\n    this.setYear({\n      localizedYear: this.parseCalendarYear((event.target as HTMLInputElement).value),\n      commit: false,\n    });\n  };\n\n  private prevMonthClick = (event: KeyboardEvent | MouseEvent): void => {\n    this.handleArrowClick(event, this.prevMonthDate);\n  };\n\n  private prevMonthKeydown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.prevMonthClick(event);\n    }\n  };\n\n  private nextMonthClick = (event: MouseEvent | KeyboardEvent): void => {\n    this.handleArrowClick(event, this.nextMonthDate);\n  };\n\n  private nextMonthKeydown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.nextMonthClick(event);\n    }\n  };\n\n  /*\n   * Update active month on clicks of left/right arrows\n   */\n  private handleArrowClick = (event: MouseEvent | KeyboardEvent, date: Date): void => {\n    event.preventDefault();\n    this.calciteInternalDatePickerSelect.emit(date);\n  };\n\n  private getInRangeDate({\n    localizedYear,\n    offset = 0,\n  }: {\n    localizedYear: string;\n    offset?: number;\n  }): Date {\n    const { min, max, activeDate } = this;\n    const parsedYear = Number(numberStringFormatter.delocalize(localizedYear));\n    const length = parsedYear.toString().length;\n    const year = isNaN(parsedYear) ? false : parsedYear + offset;\n    const inRange =\n      year && (!min || min.getFullYear() <= year) && (!max || max.getFullYear() >= year);\n    // if you've supplied a year and it's in range\n    if (year && inRange && length === localizedYear.length) {\n      const nextDate = new Date(activeDate);\n      nextDate.setFullYear(year);\n      return dateFromRange(nextDate, min, max);\n    }\n  }\n\n  /**\n   * Parse localized year string from input,\n   * set to active if in range\n   *\n   * @param root0\n   * @param root0.localizedYear\n   * @param root0.commit\n   * @param root0.offset\n   */\n  private setYear({\n    localizedYear,\n    commit = true,\n    offset = 0,\n  }: {\n    localizedYear: string;\n    commit?: boolean;\n    offset?: number;\n  }): void {\n    const { yearInput, activeDate } = this;\n    const inRangeDate = this.getInRangeDate({ localizedYear, offset });\n\n    // if you've supplied a year and it's in range, update active date\n    if (inRangeDate) {\n      this.calciteInternalDatePickerSelect.emit(inRangeDate);\n    }\n\n    if (commit) {\n      yearInput.value = this.formatCalendarYear((inRangeDate || activeDate).getFullYear());\n    }\n  }\n}\n",":host {\n  @apply block;\n}\n\n.header {\n  @apply flex justify-between;\n  @apply py-0 px-1;\n}\n\n:host([scale=\"s\"]) {\n  .text {\n    @apply text-n1h my-2;\n  }\n  .chevron {\n    @apply h-9;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .text {\n    @apply text-0h my-3;\n  }\n  .chevron {\n    @apply h-12;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .text {\n    @apply text-1h my-4;\n  }\n  .chevron {\n    block-size: 3.5rem;\n  }\n}\n\n.chevron {\n  @apply text-color-3\n    bg-foreground-1\n    focus-base\n    -mx-1\n    box-content\n    flex\n    flex-grow-0\n    cursor-pointer\n    items-center\n    justify-center\n    border-none\n    px-1\n    outline-none\n    transition-default;\n  inline-size: calc(100% / 7);\n\n  &:focus {\n    @apply focus-inset;\n  }\n\n  &:hover,\n  &:focus {\n    @apply text-color-1 bg-foreground-2 fill-color-1;\n  }\n\n  &:active {\n    @apply bg-foreground-3;\n  }\n\n  &[aria-disabled=\"true\"] {\n    @apply pointer-events-none opacity-0;\n  }\n}\n\n.text {\n  @apply my-auto\n    w-full\n    flex\n    flex-auto\n    items-center\n    justify-center\n    text-center\n    leading-none;\n}\n\n.text--reverse {\n  @apply flex-row-reverse;\n}\n\n.month,\n.year,\n.suffix {\n  @apply text-color-1\n    bg-foreground-1\n    mx-1\n    my-auto\n    inline-block\n    font-medium\n    leading-tight;\n  font-size: inherit;\n}\n\n.year {\n  @apply font-inherit\n    focus-base\n    relative\n    w-10\n    border-none\n    bg-transparent\n    text-center;\n  &:hover {\n    @apply duration-100 ease-in-out;\n    transition-property: outline-color;\n    outline: 2px solid var(--calcite-color-border-2);\n    outline-offset: 2px;\n  }\n  &:focus {\n    @apply focus-outset;\n  }\n}\n\n.year--suffix {\n  @apply text-left;\n}\n\n.year-wrap {\n  @apply relative;\n}\n\n.suffix {\n  @apply top-0\n    whitespace-nowrap\n    text-start;\n  inset-inline-start: 0;\n}\n\n@include base-component();\n","export const HEADING_LEVEL = 2;\n\nexport const DATE_PICKER_FORMAT_OPTIONS: Intl.DateTimeFormatOptions = { dateStyle: \"full\" };\n","import { getAssetPath } from \"@stencil/core\";\nimport { dateFromISO } from \"../../utils/date\";\nimport { getSupportedLocale } from \"../../utils/locale\";\n\n/**\n * Translation resource data structure\n *\n * @private\n */\nexport interface DateLocaleData {\n  \"default-calendar\": \"gregorian\" | \"buddhist\";\n  separator: string;\n  unitOrder: string;\n  weekStart: number;\n  placeholder: string;\n  days: {\n    abbreviated?: string[];\n    narrow?: string[];\n    short?: string[];\n    wide?: string[];\n  };\n  numerals: string;\n  months: {\n    abbreviated: string[];\n    narrow: string[];\n    wide: string[];\n  };\n  year?: {\n    suffix: string;\n  };\n}\n\n/**\n * CLDR cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const translationCache: Record<string, DateLocaleData> = {};\n\n/**\n * CLDR request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<DateLocaleData>> = {};\n\n/**\n * Fetch calendar data for a given locale from list of supported languages\n *\n * @param lang\n * @public\n */\nexport async function getLocaleData(lang: string): Promise<DateLocaleData> {\n  const locale = getSupportedLocale(lang);\n  if (translationCache[locale]) {\n    return translationCache[locale];\n  }\n  if (!requestCache[locale]) {\n    requestCache[locale] = fetch(getAssetPath(`./assets/date-picker/nls/${locale}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`Translations for \"${locale}\" not found or invalid, falling back to english`);\n        return getLocaleData(\"en\");\n      });\n  }\n\n  const data = await requestCache[locale];\n  translationCache[locale] = data;\n\n  return data;\n}\n\n/**\n *  Maps value to valueAsDate\n *\n * @param value\n */\n\nexport function getValueAsDateRange(value: string[]): Date[] {\n  return value.map((v, index) => dateFromISO(v, index === 1));\n}\n",":host {\n  @extend %component-host;\n  @apply align-top\n    border\n    border-color-1\n    border-solid\n    inline-block\n    overflow-visible\n    rounded-none\n    w-auto;\n}\n\n:host([scale=\"s\"]) {\n  inline-size: 234px;\n  min-inline-size: 216px;\n  max-inline-size: 380px;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: 304px;\n  min-inline-size: 272px;\n  max-inline-size: 480px;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: 370px;\n  min-inline-size: 320px;\n  max-inline-size: 600px;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  dateFromISO,\n  dateFromRange,\n  dateToISO,\n  getDaysDiff,\n  HoverRange,\n  setEndOfDay,\n} from \"../../utils/date\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  getDateTimeFormat,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { DatePickerMessages } from \"./assets/date-picker/t9n\";\nimport { DATE_PICKER_FORMAT_OPTIONS, HEADING_LEVEL } from \"./resources\";\nimport { DateLocaleData, getLocaleData, getValueAsDateRange } from \"./utils\";\n\n@Component({\n  assetsDirs: [\"assets\"],\n  tag: \"calcite-date-picker\",\n  styleUrl: \"date-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class DatePicker implements LocalizedComponent, LoadableComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the component's active date. */\n  @Prop({ mutable: true }) activeDate: Date;\n\n  @Watch(\"activeDate\")\n  activeDateWatcher(newActiveDate: Date): void {\n    if (this.activeRange === \"end\") {\n      this.activeEndDate = newActiveDate;\n    }\n  }\n\n  /**\n   * When `range` is true, specifies the active `range`. Where `\"start\"` specifies the starting range date and `\"end\"` the ending range date.\n   */\n  @Prop({ reflect: true }) activeRange: \"start\" | \"end\";\n\n  /**\n   * Specifies the selected date as a string (`\"yyyy-mm-dd\"`), or an array of strings for `range` values (`[\"yyyy-mm-dd\", \"yyyy-mm-dd\"]`).\n   */\n  @Prop({ mutable: true }) value: string | string[];\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Specifies the selected date as a full date object (`new Date(\"yyyy-mm-dd\")`), or an array containing full date objects (`[new Date(\"yyyy-mm-dd\"), new Date(\"yyyy-mm-dd\")]`). */\n  @Prop({ mutable: true }) valueAsDate: Date | Date[];\n\n  @Watch(\"valueAsDate\")\n  valueAsDateWatcher(newValueAsDate: Date | Date[]): void {\n    if (this.range && Array.isArray(newValueAsDate)) {\n      const { activeStartDate, activeEndDate } = this;\n      const newActiveStartDate = newValueAsDate[0];\n      const newActiveEndDate = newValueAsDate[1];\n      this.activeStartDate = activeStartDate !== newActiveStartDate && newActiveStartDate;\n      this.activeEndDate = activeEndDate !== newActiveEndDate && newActiveEndDate;\n    } else if (newValueAsDate && newValueAsDate !== this.activeDate) {\n      this.activeDate = newValueAsDate as Date;\n    }\n  }\n\n  /** Specifies the earliest allowed date as a full date object (`new Date(\"yyyy-mm-dd\")`). */\n  @Prop({ mutable: true }) minAsDate: Date;\n\n  /** Specifies the latest allowed date as a full date object (`new Date(\"yyyy-mm-dd\")`). */\n  @Prop({ mutable: true }) maxAsDate: Date;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop({ reflect: true }) min: string;\n\n  @Watch(\"min\")\n  onMinChanged(min: string): void {\n    this.minAsDate = dateFromISO(min);\n  }\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop({ reflect: true }) max: string;\n\n  @Watch(\"max\")\n  onMaxChanged(max: string): void {\n    this.maxAsDate = dateFromISO(max);\n  }\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization. This property cannot be dynamically changed.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: \"s\" | \"m\" | \"l\" = \"m\";\n\n  /** When `true`, activates the component's range mode to allow a start and end date. */\n  @Prop({ reflect: true }) range = false;\n\n  /** When `true`, disables the default behavior on the third click of narrowing or extending the range and instead starts a new range. */\n  @Prop({ reflect: true }) proximitySelectionDisabled = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<DatePickerMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: DatePickerMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Fires when a user changes the component's date. For `range` events, use `calciteDatePickerRangeChange`.\n   */\n  @Event({ cancelable: false }) calciteDatePickerChange: EventEmitter<void>;\n\n  /**\n   * Fires when a user changes the component's date `range`. For components without `range` use `calciteDatePickerChange`.\n   */\n  @Event({ cancelable: false }) calciteDatePickerRangeChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  /**\n   * Resets active date state.\n   * @internal\n   */\n  @Method()\n  async reset(): Promise<void> {\n    this.resetActiveDates();\n    this.mostRecentRangeValue = undefined;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n\n    if (Array.isArray(this.value)) {\n      this.valueAsDate = getValueAsDateRange(this.value);\n    } else if (this.value) {\n      this.valueAsDate = dateFromISO(this.value);\n    }\n\n    if (this.min) {\n      this.minAsDate = dateFromISO(this.min);\n    }\n\n    if (this.max) {\n      this.maxAsDate = dateFromISO(this.max);\n    }\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await this.loadLocaleData();\n    this.onMinChanged(this.min);\n    this.onMaxChanged(this.max);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  render(): VNode {\n    const date = dateFromRange(\n      this.range && Array.isArray(this.valueAsDate) ? this.valueAsDate[0] : this.valueAsDate,\n      this.minAsDate,\n      this.maxAsDate,\n    );\n    let activeDate = this.getActiveDate(date, this.minAsDate, this.maxAsDate);\n    const endDate =\n      this.range && Array.isArray(this.valueAsDate)\n        ? dateFromRange(this.valueAsDate[1], this.minAsDate, this.maxAsDate)\n        : null;\n    const activeEndDate = this.getActiveEndDate(endDate, this.minAsDate, this.maxAsDate);\n    if (\n      (this.activeRange === \"end\" ||\n        (this.hoverRange?.focused === \"end\" && (!this.proximitySelectionDisabled || endDate))) &&\n      activeEndDate\n    ) {\n      activeDate = activeEndDate;\n    }\n    if (this.range && this.mostRecentRangeValue) {\n      activeDate = this.mostRecentRangeValue;\n    }\n\n    const minDate =\n      this.range && this.activeRange\n        ? this.activeRange === \"start\"\n          ? this.minAsDate\n          : date || this.minAsDate\n        : this.minAsDate;\n\n    const maxDate =\n      this.range && this.activeRange\n        ? this.activeRange === \"start\"\n          ? endDate || this.maxAsDate\n          : this.maxAsDate\n        : this.maxAsDate;\n    return (\n      <Host onBlur={this.resetActiveDates} onKeyDown={this.keyDownHandler}>\n        {this.renderCalendar(activeDate, maxDate, minDate, date, endDate)}\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerElement;\n\n  /**\n   * Active end date.\n   */\n  @State() activeEndDate: Date;\n\n  /**\n   * Active start date.\n   */\n  @State() activeStartDate: Date;\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @State() dateTimeFormat: Intl.DateTimeFormat;\n\n  @State() defaultMessages: DatePickerMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() endAsDate: Date;\n\n  @State() private hoverRange: HoverRange;\n\n  @State() private localeData: DateLocaleData;\n\n  @State() private mostRecentRangeValue?: Date;\n\n  @State() startAsDate: Date;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.key === \"Escape\") {\n      this.resetActiveDates();\n    }\n  };\n\n  @Watch(\"value\")\n  valueHandler(value: string | string[]): void {\n    if (Array.isArray(value)) {\n      this.valueAsDate = getValueAsDateRange(value);\n    } else if (value) {\n      this.valueAsDate = dateFromISO(value);\n    }\n  }\n\n  @Watch(\"effectiveLocale\")\n  private async loadLocaleData(): Promise<void> {\n    if (!isBrowser()) {\n      return;\n    }\n\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n\n    this.localeData = await getLocaleData(this.effectiveLocale);\n    this.dateTimeFormat = getDateTimeFormat(this.effectiveLocale, DATE_PICKER_FORMAT_OPTIONS);\n  }\n\n  monthHeaderSelectChange = (event: CustomEvent<Date>): void => {\n    const date = new Date(event.detail);\n    if (!this.range) {\n      this.activeDate = date;\n    } else {\n      if (this.activeRange === \"end\") {\n        this.activeEndDate = date;\n      } else {\n        this.activeStartDate = date;\n      }\n      this.mostRecentRangeValue = date;\n    }\n  };\n\n  monthActiveDateChange = (event: CustomEvent<Date>): void => {\n    const date = new Date(event.detail);\n    if (!this.range) {\n      this.activeDate = date;\n    } else {\n      if (this.activeRange === \"end\") {\n        this.activeEndDate = date;\n      } else {\n        this.activeStartDate = date;\n      }\n      this.mostRecentRangeValue = date;\n    }\n  };\n\n  monthHoverChange = (event: CustomEvent<Date>): void => {\n    if (!this.range) {\n      this.hoverRange = undefined;\n      return;\n    }\n\n    const { valueAsDate } = this;\n    const start = Array.isArray(valueAsDate) && valueAsDate[0];\n    const end = Array.isArray(valueAsDate) && valueAsDate[1];\n\n    const date = new Date(event.detail);\n    this.hoverRange = {\n      focused: this.activeRange || \"start\",\n      start,\n      end,\n    };\n\n    if (this.proximitySelectionDisabled) {\n      if ((end && start) || (!end && date >= start)) {\n        this.hoverRange.focused = \"end\";\n        this.hoverRange.end = date;\n      } else if (!end && date < start) {\n        this.hoverRange = {\n          focused: \"start\",\n          start: date,\n          end: start,\n        };\n      } else {\n        this.hoverRange = undefined;\n      }\n    } else {\n      if (start && end) {\n        const startDiff = getDaysDiff(date, start);\n        const endDiff = getDaysDiff(date, end);\n        if (endDiff > 0) {\n          this.hoverRange.end = date;\n          this.hoverRange.focused = \"end\";\n        } else if (startDiff < 0) {\n          this.hoverRange.start = date;\n          this.hoverRange.focused = \"start\";\n        } else if (startDiff > endDiff) {\n          this.hoverRange.start = date;\n          this.hoverRange.focused = \"start\";\n        } else {\n          this.hoverRange.end = date;\n          this.hoverRange.focused = \"end\";\n        }\n      } else {\n        if (start) {\n          if (date < start) {\n            this.hoverRange = {\n              focused: \"start\",\n              start: date,\n              end: start,\n            };\n          } else {\n            this.hoverRange.end = date;\n            this.hoverRange.focused = \"end\";\n          }\n        }\n      }\n    }\n    event.stopPropagation();\n  };\n\n  monthMouseOutChange = (): void => {\n    if (this.hoverRange) {\n      this.hoverRange = undefined;\n    }\n  };\n\n  /**\n   * Render calcite-date-picker-month-header and calcite-date-picker-month\n   *\n   * @param activeDate\n   * @param maxDate\n   * @param minDate\n   * @param date\n   * @param endDate\n   */\n  private renderCalendar(\n    activeDate: Date,\n    maxDate: Date,\n    minDate: Date,\n    date: Date,\n    endDate: Date,\n  ) {\n    return (\n      this.localeData && [\n        <calcite-date-picker-month-header\n          activeDate={activeDate}\n          headingLevel={this.headingLevel || HEADING_LEVEL}\n          localeData={this.localeData}\n          max={maxDate}\n          messages={this.messages}\n          min={minDate}\n          onCalciteInternalDatePickerSelect={this.monthHeaderSelectChange}\n          scale={this.scale}\n          selectedDate={this.activeRange === \"end\" ? endDate : date || new Date()}\n        />,\n        <calcite-date-picker-month\n          activeDate={activeDate}\n          dateTimeFormat={this.dateTimeFormat}\n          endDate={this.range ? endDate : undefined}\n          hoverRange={this.hoverRange}\n          localeData={this.localeData}\n          max={maxDate}\n          min={minDate}\n          onCalciteInternalDatePickerActiveDateChange={this.monthActiveDateChange}\n          onCalciteInternalDatePickerHover={this.monthHoverChange}\n          onCalciteInternalDatePickerMouseOut={this.monthMouseOutChange}\n          onCalciteInternalDatePickerSelect={this.monthDateChange}\n          scale={this.scale}\n          selectedDate={this.activeRange === \"end\" ? endDate : date}\n          startDate={this.range ? date : undefined}\n        />,\n      ]\n    );\n  }\n\n  private resetActiveDates = (): void => {\n    const { valueAsDate } = this;\n\n    if (!Array.isArray(valueAsDate) && valueAsDate && valueAsDate !== this.activeDate) {\n      this.activeDate = new Date(valueAsDate);\n    }\n\n    if (Array.isArray(valueAsDate)) {\n      if (valueAsDate[0] && valueAsDate[0] !== this.activeStartDate) {\n        this.activeStartDate = new Date(valueAsDate[0]);\n      }\n      if (valueAsDate[1] && valueAsDate[1] !== this.activeEndDate) {\n        this.activeEndDate = new Date(valueAsDate[1]);\n      }\n    }\n  };\n\n  private getEndDate(): Date {\n    return (Array.isArray(this.valueAsDate) && this.valueAsDate[1]) || undefined;\n  }\n\n  private setEndDate(date: Date): void {\n    const startDate = this.getStartDate();\n    const newEndDate = date ? setEndOfDay(date) : date;\n    this.value = [dateToISO(startDate), dateToISO(date)];\n    this.valueAsDate = [startDate, date];\n    this.mostRecentRangeValue = newEndDate;\n    this.calciteDatePickerRangeChange.emit();\n    this.activeEndDate = date || null;\n  }\n\n  private getStartDate(): Date {\n    return Array.isArray(this.valueAsDate) && this.valueAsDate[0];\n  }\n\n  private setStartDate(date: Date): void {\n    const endDate = this.getEndDate();\n    this.value = [dateToISO(date), dateToISO(endDate)];\n    this.valueAsDate = [date, endDate];\n    this.mostRecentRangeValue = date;\n    this.calciteDatePickerRangeChange.emit();\n    this.activeStartDate = date || null;\n  }\n\n  /**\n   * Event handler for when the selected date changes\n   *\n   * @param event\n   */\n  private monthDateChange = (event: CustomEvent<Date>): void => {\n    const date = new Date(event.detail);\n    const isoDate = dateToISO(date);\n\n    if (!this.range && isoDate === dateToISO(this.valueAsDate as Date)) {\n      return;\n    }\n\n    if (!this.range) {\n      this.value = isoDate || \"\";\n      this.valueAsDate = date || null;\n      this.activeDate = date || null;\n      this.calciteDatePickerChange.emit();\n      return;\n    }\n\n    const start = this.getStartDate();\n    const end = this.getEndDate();\n\n    if (!start || (!end && date < start)) {\n      if (start) {\n        this.setEndDate(new Date(start));\n      }\n      if (this.activeRange == \"end\") {\n        this.setEndDate(date);\n      } else {\n        this.setStartDate(date);\n      }\n    } else if (!end) {\n      this.setEndDate(date);\n    } else {\n      if (this.proximitySelectionDisabled) {\n        this.setStartDate(date);\n        this.setEndDate(null);\n      } else {\n        if (this.activeRange) {\n          if (this.activeRange == \"end\") {\n            this.setEndDate(date);\n          } else {\n            this.setStartDate(date);\n          }\n        } else {\n          const startDiff = getDaysDiff(date, start);\n          const endDiff = getDaysDiff(date, end);\n          if (endDiff === 0 || startDiff < 0) {\n            this.setStartDate(date);\n          } else if (startDiff === 0 || endDiff < 0) {\n            this.setEndDate(date);\n          } else if (startDiff < endDiff) {\n            this.setStartDate(date);\n          } else {\n            this.setEndDate(date);\n          }\n        }\n      }\n    }\n    this.calciteDatePickerChange.emit();\n  };\n\n  /**\n   * Get an active date using the value, or current date as default\n   *\n   * @param value\n   * @param min\n   * @param max\n   */\n  private getActiveDate(value: Date | null, min: Date | null, max: Date | null): Date {\n    return dateFromRange(this.activeDate, min, max) || value || dateFromRange(new Date(), min, max);\n  }\n\n  private getActiveEndDate(value: Date | null, min: Date | null, max: Date | null): Date {\n    return (\n      dateFromRange(this.activeEndDate, min, max) || value || dateFromRange(new Date(), min, max)\n    );\n  }\n}\n","export const CSS = {\n  assistiveText: \"assistive-text\",\n  calendarWrapper: \"calendar-wrapper\",\n  calendarWrapperEnd: \"calendar-wrapper--end\",\n  horizontalArrowContainer: \"horizontal-arrow-container\",\n  inputBorderTopColorOne: \"border-top-color-one\",\n  inputContainer: \"input-container\",\n  inputNoBottomBorder: \"no-bottom-border\",\n  inputWrapper: \"input-wrapper\",\n  input: \"input\",\n  menu: \"menu-container\",\n  menuActive: \"menu-container--active\",\n  toggleIcon: \"toggle-icon\",\n  verticalArrowContainer: \"vertical-arrow-container\",\n  chevronIcon: \"chevron-icon\",\n};\n\nexport const IDS = {\n  validationMessage: \"inputDatePickerValidationMessage\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { FocusTrap } from \"focus-trap\";\nimport {\n  dateFromISO,\n  dateFromLocalizedString,\n  dateFromRange,\n  datePartsFromISO,\n  datePartsFromLocalizedString,\n  dateToISO,\n  inRange,\n} from \"../../utils/date\";\nimport { focusFirstTabbable, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultMenuPlacement,\n  disconnectFloatingUI,\n  filterValidFlipPlacements,\n  FloatingCSS,\n  FloatingUIComponent,\n  FlipPlacement,\n  MenuPlacement,\n  OverlayPositioning,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  getSupportedNumberingSystem,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n  getDateFormatSupportedLocale,\n} from \"../../utils/locale\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { DatePickerMessages } from \"../date-picker/assets/date-picker/t9n\";\nimport { DateLocaleData, getLocaleData, getValueAsDateRange } from \"../date-picker/utils\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrapComponent,\n} from \"../../utils/focusTrapComponent\";\nimport { guid } from \"../../utils/guid\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Status } from \"../interfaces\";\nimport { Validation } from \"../functional/Validation\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { syncHiddenFormInput } from \"../input/common/input\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { normalizeToCurrentCentury, isTwoDigitYear } from \"./utils\";\nimport { InputDatePickerMessages } from \"./assets/input-date-picker/t9n\";\nimport { CSS, IDS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-input-date-picker\",\n  styleUrl: \"input-date-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class InputDatePicker\n  implements\n    FloatingUIComponent,\n    FocusTrapComponent,\n    FormComponent,\n    InteractiveComponent,\n    LabelableComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    OpenCloseComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, the component's value can be read, but controls are not accessible and the value cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  @Watch(\"disabled\")\n  @Watch(\"readOnly\")\n  handleDisabledAndReadOnlyChange(value: boolean): void {\n    if (!value) {\n      this.open = false;\n    }\n  }\n\n  /** Selected date as a string in ISO format (`\"yyyy-mm-dd\"`). */\n  @Prop({ mutable: true }) value: string | string[] = \"\";\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string | string[]): void {\n    if (!this.userChangedValue) {\n      let newValueAsDate: Date | Date[];\n\n      if (Array.isArray(newValue)) {\n        newValueAsDate = getValueAsDateRange(newValue);\n      } else if (newValue) {\n        newValueAsDate = dateFromISO(newValue);\n      } else {\n        newValueAsDate = undefined;\n      }\n\n      if (!this.valueAsDateChangedExternally && newValueAsDate !== this.valueAsDate) {\n        this.valueAsDate = newValueAsDate;\n      }\n\n      this.localizeInputValues();\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"valueAsDate\")\n  valueAsDateWatcher(valueAsDate: Date): void {\n    this.datePickerActiveDate = valueAsDate;\n    const newValue =\n      this.range && Array.isArray(valueAsDate)\n        ? [dateToISO(valueAsDate[0]), dateToISO(valueAsDate[1])]\n        : dateToISO(valueAsDate);\n    if (this.value !== newValue) {\n      this.valueAsDateChangedExternally = true;\n      this.value = newValue;\n      this.valueAsDateChangedExternally = false;\n    }\n  }\n\n  /**\n   * Specifies the component's fallback `calcite-date-picker` `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** The component's value as a full date object. */\n  @Prop({ mutable: true }) valueAsDate: Date | Date[];\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputDatePickerMessages & DatePickerMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputDatePickerMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** Specifies the earliest allowed date as a full date object. */\n  @Prop({ mutable: true }) minAsDate: Date;\n\n  /** Specifies the latest allowed date as a full date object. */\n  @Prop({ mutable: true }) maxAsDate: Date;\n\n  /** Specifies the earliest allowed date (\"yyyy-mm-dd\"). */\n  @Prop({ reflect: true }) min: string;\n\n  @Watch(\"min\")\n  onMinChanged(min: string): void {\n    this.minAsDate = dateFromISO(min);\n  }\n\n  /** Specifies the latest allowed date (\"yyyy-mm-dd\"). */\n  @Prop({ reflect: true }) max: string;\n\n  @Watch(\"max\")\n  onMaxChanged(max: string): void {\n    this.maxAsDate = dateFromISO(max);\n  }\n\n  /** When `true`, displays the `calcite-date-picker` component. */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n\n    if (this.disabled || this.readOnly) {\n      this.open = false;\n      return;\n    }\n\n    this.reposition(true);\n  }\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization. This property cannot be dynamically changed.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: \"s\" | \"m\" | \"l\" = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the placement of the `calcite-date-picker` relative to the component.\n   *\n   * @default \"bottom-start\"\n   */\n  @Prop({ reflect: true }) placement: MenuPlacement = defaultMenuPlacement;\n\n  /** When `true`, activates a range for the component. */\n  @Prop({ reflect: true }) range = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, disables the default behavior on the third click of narrowing or extending the range.\n   * Instead starts a new range.\n   */\n  @Prop() proximitySelectionDisabled = false;\n\n  /** Defines the layout of the component. */\n  @Prop({ reflect: true }) layout: \"horizontal\" | \"vertical\" = \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteDaySelect\")\n  calciteDaySelectHandler(): void {\n    if (this.shouldFocusRangeStart() || this.shouldFocusRangeEnd()) {\n      return;\n    }\n\n    this.open = false;\n  }\n\n  private calciteInternalInputInputHandler = (event: CustomEvent<any>): void => {\n    const target = event.target as HTMLCalciteInputElement;\n    const value = target.value;\n    const parsedValue = this.parseNumerals(value);\n    const formattedValue = this.formatNumerals(parsedValue);\n\n    target.value = formattedValue;\n\n    const { year } = datePartsFromLocalizedString(value, this.localeData);\n\n    if (year && year.length < 4) {\n      return;\n    }\n\n    const date = dateFromLocalizedString(value, this.localeData);\n\n    if (inRange(date, this.min, this.max)) {\n      this.datePickerActiveDate = date;\n    }\n  };\n\n  private calciteInternalInputBlurHandler = (): void => {\n    this.commitValue();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's `value` changes.\n   */\n  @Event({ cancelable: false }) calciteInputDatePickerChange: EventEmitter<void>;\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteInputDatePickerBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteInputDatePickerClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteInputDatePickerBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteInputDatePickerOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed If true, the repositioning is delayed.\n   * @returns void\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl,\n        referenceEl,\n        overlayPositioning,\n        placement,\n        flipPlacements: filteredFlipPlacements,\n        type: \"menu\",\n      },\n      delayed,\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    this.handleDateTimeFormatChange();\n\n    const { open } = this;\n    open && this.openHandler();\n\n    if (this.min) {\n      this.minAsDate = dateFromISO(this.min);\n    }\n\n    if (this.max) {\n      this.maxAsDate = dateFromISO(this.max);\n    }\n\n    if (Array.isArray(this.value)) {\n      this.valueAsDate = getValueAsDateRange(this.value);\n    } else if (this.value) {\n      try {\n        const date = dateFromISO(this.value);\n        const dateInRange = dateFromRange(date, this.minAsDate, this.maxAsDate);\n        this.valueAsDate = dateInRange;\n      } catch (error) {\n        this.warnAboutInvalidValue(this.value);\n        this.value = \"\";\n      }\n    } else if (this.valueAsDate) {\n      if (this.range && Array.isArray(this.valueAsDate)) {\n        this.value = [dateToISO(this.valueAsDate[0]), dateToISO(this.valueAsDate[1])];\n      } else if (!this.range && !Array.isArray(this.valueAsDate)) {\n        this.value = dateToISO(this.valueAsDate);\n      }\n    }\n\n    connectLabel(this);\n    connectForm(this);\n    connectMessages(this);\n\n    this.setFilteredPlacements();\n\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await Promise.all([this.loadLocaleData(), setUpMessages(this)]);\n    this.onMinChanged(this.min);\n    this.onMaxChanged(this.max);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.localizeInputValues();\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  disconnectedCallback(): void {\n    deactivateFocusTrap(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    const { disabled, effectiveLocale, messages, numberingSystem, readOnly } = this;\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem,\n      locale: effectiveLocale,\n      useGrouping: false,\n    };\n\n    return (\n      <Host onBlur={this.blurHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          {this.localeData && (\n            <div class={CSS.inputContainer}>\n              <div\n                class={CSS.inputWrapper}\n                data-position=\"start\"\n                onClick={this.onInputWrapperClick}\n                onPointerDown={this.onInputWrapperPointerDown}\n                ref={this.setStartWrapper}\n              >\n                <calcite-input-text\n                  aria-autocomplete=\"none\"\n                  aria-controls={this.dialogId}\n                  aria-describedby={this.placeholderTextId}\n                  aria-errormessage={IDS.validationMessage}\n                  aria-expanded={toAriaBoolean(this.open)}\n                  aria-haspopup=\"dialog\"\n                  aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n                  class={{\n                    [CSS.input]: true,\n                    [CSS.inputNoBottomBorder]: this.layout === \"vertical\" && this.range,\n                  }}\n                  disabled={disabled}\n                  icon=\"calendar\"\n                  onCalciteInputTextInput={this.calciteInternalInputInputHandler}\n                  onCalciteInternalInputTextBlur={this.calciteInternalInputBlurHandler}\n                  onCalciteInternalInputTextFocus={this.startInputFocus}\n                  placeholder={this.localeData?.placeholder}\n                  readOnly={readOnly}\n                  ref={this.setStartInput}\n                  role=\"combobox\"\n                  scale={this.scale}\n                  status={this.status}\n                />\n                {!this.readOnly &&\n                  this.renderToggleIcon(this.open && this.focusedInput === \"start\")}\n                <span aria-hidden=\"true\" class={CSS.assistiveText} id={this.placeholderTextId}>\n                  Date Format: {this.localeData?.placeholder}\n                </span>\n              </div>\n              <div\n                aria-hidden={toAriaBoolean(!this.open)}\n                aria-label={messages.chooseDate}\n                aria-live=\"polite\"\n                aria-modal=\"true\"\n                class={{\n                  [CSS.menu]: true,\n                  [CSS.menuActive]: this.open,\n                }}\n                id={this.dialogId}\n                ref={this.setFloatingEl}\n                role=\"dialog\"\n              >\n                <div\n                  class={{\n                    [CSS.calendarWrapper]: true,\n                    [CSS.calendarWrapperEnd]: this.focusedInput === \"end\",\n                    [FloatingCSS.animation]: true,\n                    [FloatingCSS.animationActive]: this.open,\n                  }}\n                  ref={this.setTransitionEl}\n                >\n                  <calcite-date-picker\n                    activeDate={this.datePickerActiveDate}\n                    activeRange={this.focusedInput}\n                    headingLevel={this.headingLevel}\n                    max={this.max}\n                    maxAsDate={this.maxAsDate}\n                    messageOverrides={this.messageOverrides}\n                    min={this.min}\n                    minAsDate={this.minAsDate}\n                    numberingSystem={numberingSystem}\n                    onCalciteDatePickerChange={this.handleDateChange}\n                    onCalciteDatePickerRangeChange={this.handleDateRangeChange}\n                    proximitySelectionDisabled={this.proximitySelectionDisabled}\n                    range={this.range}\n                    ref={this.setDatePickerRef}\n                    scale={this.scale}\n                    tabIndex={this.open ? undefined : -1}\n                    valueAsDate={this.valueAsDate}\n                  />\n                </div>\n              </div>\n\n              {this.range && this.layout === \"horizontal\" && (\n                <div class={CSS.horizontalArrowContainer}>\n                  <calcite-icon\n                    flipRtl={true}\n                    icon=\"arrow-right\"\n                    scale={getIconScale(this.scale)}\n                  />\n                </div>\n              )}\n              {this.range && this.layout === \"vertical\" && this.scale !== \"s\" && (\n                <div class={CSS.verticalArrowContainer}>\n                  <calcite-icon icon=\"arrow-down\" scale={getIconScale(this.scale)} />\n                </div>\n              )}\n              {this.range && (\n                <div\n                  class={CSS.inputWrapper}\n                  data-position=\"end\"\n                  onClick={this.onInputWrapperClick}\n                  onPointerDown={this.onInputWrapperPointerDown}\n                  ref={this.setEndWrapper}\n                >\n                  <calcite-input-text\n                    aria-autocomplete=\"none\"\n                    aria-controls={this.dialogId}\n                    aria-errormessage={IDS.validationMessage}\n                    aria-expanded={toAriaBoolean(this.open)}\n                    aria-haspopup=\"dialog\"\n                    aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n                    class={{\n                      [CSS.input]: true,\n                      [CSS.inputBorderTopColorOne]: this.layout === \"vertical\" && this.range,\n                    }}\n                    disabled={disabled}\n                    icon=\"calendar\"\n                    onCalciteInputTextInput={this.calciteInternalInputInputHandler}\n                    onCalciteInternalInputTextBlur={this.calciteInternalInputBlurHandler}\n                    onCalciteInternalInputTextFocus={this.endInputFocus}\n                    placeholder={this.localeData?.placeholder}\n                    readOnly={readOnly}\n                    ref={this.setEndInput}\n                    role=\"combobox\"\n                    scale={this.scale}\n                    status={this.status}\n                  />\n                  {!this.readOnly &&\n                    this.renderToggleIcon(this.open && this.focusedInput === \"end\")}\n                </div>\n              )}\n            </div>\n          )}\n          <HiddenFormInputSlot component={this} />\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  renderToggleIcon(open: boolean): VNode {\n    return (\n      // we set tab index to -1 to prevent delegatesFocus from stealing focus before we can set it\n      <span class={CSS.toggleIcon} tabIndex={-1}>\n        <calcite-icon\n          class={CSS.chevronIcon}\n          icon={open ? \"chevron-up\" : \"chevron-down\"}\n          scale={getIconScale(this.scale)}\n        />\n      </span>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputDatePickerElement;\n\n  private currentOpenInput: \"start\" | \"end\";\n\n  private datePickerEl: HTMLCalciteDatePickerElement;\n\n  private dialogId = `date-picker-dialog--${guid()}`;\n\n  filteredFlipPlacements: FlipPlacement[];\n\n  private focusOnOpen = false;\n\n  focusTrap: FocusTrap;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: InputDatePicker[\"value\"];\n\n  private dateTimeFormat: Intl.DateTimeFormat;\n\n  @State() datePickerActiveDate: Date;\n\n  @State() defaultMessages: InputDatePickerMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n    this.loadLocaleData();\n  }\n\n  @Watch(\"effectiveLocale\")\n  @Watch(\"numberingSystem\")\n  handleDateTimeFormatChange(): void {\n    const formattingOptions: Intl.DateTimeFormatOptions = {\n      // we explicitly set numberingSystem to prevent the browser-inferred value\n      // see https://github.com/Esri/calcite-design-system/issues/3079#issuecomment-1168964195 for more info\n      numberingSystem: getSupportedNumberingSystem(this.numberingSystem),\n    };\n\n    this.dateTimeFormat = new Intl.DateTimeFormat(\n      getDateFormatSupportedLocale(this.effectiveLocale),\n      formattingOptions,\n    );\n  }\n\n  @State() focusedInput: \"start\" | \"end\" = \"start\";\n\n  @State() private localeData: DateLocaleData;\n\n  private startInput: HTMLCalciteInputTextElement;\n\n  private endInput: HTMLCalciteInputTextElement;\n\n  private floatingEl: HTMLDivElement;\n\n  private referenceEl: HTMLDivElement;\n\n  private startWrapper: HTMLDivElement;\n\n  private endWrapper: HTMLDivElement;\n\n  private userChangedValue = false;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  @Watch(\"layout\")\n  @Watch(\"focusedInput\")\n  setReferenceEl(): void {\n    const { focusedInput, layout, endWrapper, startWrapper } = this;\n\n    this.referenceEl =\n      focusedInput === \"end\" || layout === \"vertical\"\n        ? endWrapper || startWrapper\n        : startWrapper || endWrapper;\n\n    requestAnimationFrame(() => connectFloatingUI(this, this.referenceEl, this.floatingEl));\n  }\n\n  private valueAsDateChangedExternally = false;\n\n  private placeholderTextId = `calcite-input-date-picker-placeholder-${guid()}`;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private onInputWrapperPointerDown = (): void => {\n    this.currentOpenInput = this.focusedInput;\n  };\n\n  private onInputWrapperClick = (event: MouseEvent) => {\n    const { range, endInput, startInput, currentOpenInput } = this;\n    const currentTarget = event.currentTarget as HTMLDivElement;\n    const position = currentTarget.getAttribute(\"data-position\") as \"start\" | \"end\";\n    const path = event.composedPath();\n    const wasToggleClicked = path.find((el: HTMLElement) => el.classList?.contains(CSS.toggleIcon));\n\n    if (wasToggleClicked) {\n      const targetInput = position === \"start\" ? startInput : endInput;\n      targetInput.setFocus();\n    }\n\n    if (!range || !this.open || currentOpenInput === position) {\n      this.open = !this.open;\n    }\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterValidFlipPlacements(flipPlacements, el)\n      : null;\n  };\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  onBeforeOpen(): void {\n    this.calciteInputDatePickerBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    activateFocusTrap(this, {\n      onActivate: () => {\n        if (this.focusOnOpen) {\n          this.datePickerEl.setFocus();\n          this.focusOnOpen = false;\n        }\n      },\n    });\n    this.calciteInputDatePickerOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteInputDatePickerBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteInputDatePickerClose.emit();\n    deactivateFocusTrap(this);\n    this.restoreInputFocus();\n    this.focusOnOpen = false;\n    this.datePickerEl.reset();\n  }\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(\"date\", this, input);\n  }\n\n  setStartInput = (el: HTMLCalciteInputTextElement): void => {\n    this.startInput = el;\n  };\n\n  setEndInput = (el: HTMLCalciteInputTextElement): void => {\n    this.endInput = el;\n  };\n\n  private blurHandler = (): void => {\n    this.open = false;\n  };\n\n  private commitValue(): void {\n    const { focusedInput, value } = this;\n    const focusedInputName = `${focusedInput}Input`;\n    const focusedInputValue = this[focusedInputName].value;\n    const date = dateFromLocalizedString(focusedInputValue, this.localeData);\n    const dateAsISO = dateToISO(date);\n    const valueIsArray = Array.isArray(value);\n    if (this.range) {\n      const focusedInputValueIndex = focusedInput === \"start\" ? 0 : 1;\n      if (valueIsArray) {\n        if (dateAsISO === value[focusedInputValueIndex]) {\n          return;\n        }\n        if (date) {\n          this.setRangeValue([\n            focusedInput === \"start\" ? date : dateFromISO(value[0]),\n            focusedInput === \"end\" ? date : dateFromISO(value[1]),\n          ]);\n          this.localizeInputValues();\n        } else {\n          this.setRangeValue([\n            focusedInput === \"end\" && dateFromISO(value[0]),\n            focusedInput === \"start\" && dateFromISO(value[1]),\n          ]);\n        }\n      } else {\n        if (date) {\n          this.setRangeValue([\n            focusedInput === \"start\" ? date : dateFromISO(value[0]),\n            focusedInput === \"end\" ? date : dateFromISO(value[1]),\n          ]);\n          this.localizeInputValues();\n        }\n      }\n    } else {\n      if (dateAsISO === value) {\n        return;\n      }\n      this.setValue(date);\n      this.localizeInputValues();\n    }\n  }\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    const { defaultPrevented, key } = event;\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      event.preventDefault();\n      this.commitValue();\n\n      if (this.shouldFocusRangeEnd()) {\n        this.endInput?.setFocus();\n      } else if (this.shouldFocusRangeStart()) {\n        this.startInput?.setFocus();\n      }\n\n      if (submitForm(this)) {\n        this.restoreInputFocus();\n      }\n    } else if (key === \"ArrowDown\") {\n      this.open = true;\n      this.focusOnOpen = true;\n      event.preventDefault();\n    } else if (key === \"Escape\") {\n      this.open = false;\n      event.preventDefault();\n      this.restoreInputFocus();\n    }\n  };\n\n  startInputFocus = (): void => {\n    this.focusedInput = \"start\";\n  };\n\n  endInputFocus = (): void => {\n    this.focusedInput = \"end\";\n  };\n\n  setFloatingEl = (el: HTMLDivElement): void => {\n    this.floatingEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  setStartWrapper = (el: HTMLDivElement): void => {\n    this.startWrapper = el;\n    this.setReferenceEl();\n  };\n\n  setEndWrapper = (el: HTMLDivElement): void => {\n    this.endWrapper = el;\n    this.setReferenceEl();\n  };\n\n  setDatePickerRef = (el: HTMLCalciteDatePickerElement): void => {\n    this.datePickerEl = el;\n    connectFocusTrap(this, {\n      focusTrapEl: el,\n      focusTrapOptions: {\n        initialFocus: false,\n        setReturnFocus: false,\n      },\n    });\n  };\n\n  private async loadLocaleData(): Promise<void> {\n    if (!isBrowser()) {\n      return;\n    }\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n    this.localeData = await getLocaleData(this.effectiveLocale);\n    this.localizeInputValues();\n  }\n\n  /**\n   * Event handler for when the selected date changes\n   *\n   * @param event CalciteDatePicker custom change event\n   */\n  handleDateChange = (event: CustomEvent<void>): void => {\n    if (this.range) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    this.setValue((event.target as HTMLCalciteDatePickerElement).valueAsDate as Date);\n    this.localizeInputValues();\n    this.restoreInputFocus();\n  };\n\n  private shouldFocusRangeStart(): boolean {\n    const startValue = this.value[0];\n    const endValue = this.value[1];\n    return !!(endValue && !startValue && this.focusedInput === \"end\" && this.startInput);\n  }\n\n  private shouldFocusRangeEnd(): boolean {\n    const startValue = this.value[0];\n    const endValue = this.value[1];\n    return !!(startValue && !endValue && this.focusedInput === \"start\" && this.endInput);\n  }\n\n  private handleDateRangeChange = (event: CustomEvent<void>): void => {\n    if (!this.range) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    const value = (event.target as HTMLCalciteDatePickerElement).valueAsDate as Date[];\n\n    this.setRangeValue(value);\n    this.localizeInputValues();\n    this.restoreInputFocus();\n  };\n\n  private restoreInputFocus(): void {\n    if (!this.range) {\n      this.startInput.setFocus();\n      return;\n    }\n\n    const focusedInput = this.focusedInput === \"start\" ? this.startInput : this.endInput;\n    focusedInput.setFocus();\n  }\n\n  private localizeInputValues(): void {\n    const date = dateFromRange(\n      (this.range\n        ? (Array.isArray(this.valueAsDate) && this.valueAsDate[0]) || undefined\n        : this.valueAsDate) as Date,\n      this.minAsDate,\n      this.maxAsDate,\n    );\n    const endDate = this.range\n      ? dateFromRange(\n          (Array.isArray(this.valueAsDate) && this.valueAsDate[1]) || undefined,\n          this.minAsDate,\n          this.maxAsDate,\n        )\n      : null;\n\n    this.setInputValue((date && this.dateTimeFormat.format(date)) ?? \"\", \"start\");\n    this.setInputValue((this.range && endDate && this.dateTimeFormat.format(endDate)) ?? \"\", \"end\");\n  }\n\n  private setInputValue = (newValue: string, input: \"start\" | \"end\" = \"start\"): void => {\n    const inputEl = this[`${input}Input`];\n    if (!inputEl) {\n      return;\n    }\n    inputEl.value = newValue;\n  };\n\n  private setRangeValue = (valueAsDate: Date[]): void => {\n    if (!this.range) {\n      return;\n    }\n\n    const { value: oldValue } = this;\n    const oldValueIsArray = Array.isArray(oldValue);\n    const valueIsArray = Array.isArray(valueAsDate);\n\n    const newStartDate = valueIsArray ? valueAsDate[0] : null;\n    let newStartDateISO = valueIsArray ? dateToISO(newStartDate) : \"\";\n    if (newStartDateISO) {\n      newStartDateISO = this.getNormalizedDate(newStartDateISO);\n    }\n\n    const newEndDate = valueIsArray ? valueAsDate[1] : null;\n    let newEndDateISO = valueIsArray ? dateToISO(newEndDate) : \"\";\n    if (newEndDateISO) {\n      newEndDateISO = this.getNormalizedDate(newEndDateISO);\n    }\n\n    const newValue = newStartDateISO || newEndDateISO ? [newStartDateISO, newEndDateISO] : \"\";\n\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.userChangedValue = true;\n    this.value = newValue;\n    this.valueAsDate = newValue ? getValueAsDateRange(newValue) : undefined;\n\n    const changeEvent = this.calciteInputDatePickerChange.emit();\n\n    if (changeEvent && changeEvent.defaultPrevented) {\n      this.value = oldValue;\n      if (oldValueIsArray) {\n        this.setInputValue(oldValue[0], \"start\");\n        this.setInputValue(oldValue[1], \"end\");\n      } else {\n        this.value = oldValue;\n        this.setInputValue(oldValue);\n      }\n    }\n  };\n\n  private setValue = (value: Date | string): void => {\n    if (this.range) {\n      return;\n    }\n\n    const oldValue = this.value;\n    let newValue = dateToISO(value as Date);\n    newValue = this.getNormalizedDate(newValue);\n\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.userChangedValue = true;\n    this.valueAsDate = newValue ? dateFromISO(newValue) : undefined;\n    this.value = newValue || \"\";\n\n    const changeEvent = this.calciteInputDatePickerChange.emit();\n\n    if (changeEvent.defaultPrevented) {\n      this.value = oldValue;\n      this.setInputValue(oldValue as string);\n    }\n  };\n\n  private warnAboutInvalidValue(value: string): void {\n    console.warn(\n      `The specified value \"${value}\" does not conform to the required format, \"YYYY-MM-DD\".`,\n    );\n  }\n\n  private commonDateSeparators = [\".\", \"-\", \"/\"];\n\n  private formatNumerals = (value: string): string =>\n    value\n      ? value\n          .split(\"\")\n          .map((char: string) =>\n            this.commonDateSeparators?.includes(char)\n              ? this.localeData?.separator\n              : numberKeys?.includes(char)\n                ? numberStringFormatter?.numberFormatter?.format(Number(char))\n                : char,\n          )\n          .join(\"\")\n      : \"\";\n\n  private parseNumerals = (value: string): string =>\n    value\n      ? value\n          .split(\"\")\n          .map((char: string) =>\n            numberKeys.includes(char) ? numberStringFormatter.delocalize(char) : char,\n          )\n          .join(\"\")\n      : \"\";\n\n  private getNormalizedDate(value: string): string {\n    if (!value) {\n      return \"\";\n    }\n\n    if (!isTwoDigitYear(value)) {\n      return value;\n    }\n\n    const { day, month, year } = datePartsFromISO(value);\n    const normalizedYear = normalizeToCurrentCentury(Number(year));\n    return `${normalizedYear}-${month}-${day}`;\n  }\n}\n","import { datePartsFromISO } from \"../../utils/date\";\n\n/**\n * Specifies if an ISO string date (YYYY-MM-DD) has two digit year.\n *\n * @param {string} value\n * @returns {boolean}\n */\nexport function isTwoDigitYear(value: string): boolean {\n  if (!value) {\n    return false;\n  }\n  const { year } = datePartsFromISO(value);\n  return Number(year) < 100;\n}\n\n/**\n * Returns a normalized year to current century from a given two digit year number.\n *\n * @param {number} twoDigitYear\n * @returns {string}\n */\nexport function normalizeToCurrentCentury(twoDigitYear: number): number {\n  const currentYear = new Date().getFullYear();\n  const normalizedYear = Math.floor(currentYear / 100) * 100 + twoDigitYear;\n  return normalizedYear;\n}\n",":host {\n  @extend %component-spacing;\n  @include floating-ui-elem-anim(\".menu-container\");\n  @apply relative\n    inline-block\n    w-full\n    overflow-visible\n    align-top\n    shadow-none;\n}\n\n@function get-trailing-text-input-padding($chevron-spacing) {\n  @return calc(var(--calcite-toggle-spacing) + $chevron-spacing);\n}\n\n:host([scale=\"s\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.2\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.4\"))};\n}\n\n:host([scale=\"m\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.3\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.6\"))};\n}\n\n:host([scale=\"l\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.4\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.8\"))};\n}\n\n@include disabled();\n\n.calendar-wrapper {\n  @apply shadow-none;\n  transform: translate3d(0, 0, 0);\n}\n\n.input-wrapper {\n  @apply relative;\n\n  .chevron-icon {\n    color: var(--calcite-color-text-3);\n  }\n\n  &:focus-within,\n  &:active,\n  &:hover {\n    .chevron-icon {\n      color: var(--calcite-color-text-1);\n    }\n  }\n}\n\n.toggle-icon {\n  @apply absolute flex cursor-pointer items-center;\n  inset-inline-end: 0;\n  inset-block: 0;\n  padding-inline: var(--calcite-toggle-spacing);\n}\n\n:host([range]) {\n  .input-container {\n    @apply flex;\n  }\n\n  .input-wrapper {\n    @apply flex-auto;\n  }\n\n  .horizontal-arrow-container {\n    @apply bg-background\n      border-color-input\n      flex\n      items-center\n      border\n      border-l-0\n      border-r-0\n      border-solid\n      py-0\n      px-1;\n  }\n}\n\n:host([range][layout=\"vertical\"]) {\n  .input-wrapper {\n    @apply w-full;\n  }\n\n  .input-container {\n    @apply flex-col\n      items-start;\n  }\n\n  .calendar-wrapper--end {\n    transform: translate3d(0, 0, 0);\n  }\n\n  .vertical-arrow-container {\n    inset-block-start: theme(\"spacing.6\");\n    @apply bg-foreground-1\n      absolute\n      z-default\n      mx-px\n      px-2.5;\n    inset-inline-start: 0;\n  }\n}\n\n.menu-container {\n  --calcite-floating-ui-z-index: theme(\"zIndex.dropdown\");\n  @include floating-ui-container();\n  @include floating-ui-wrapper();\n  @apply invisible;\n}\n\n@include floating-ui-elem-anim(\".menu-container\");\n\n:host([open]) .menu-container {\n  @include floating-ui-wrapper-active();\n}\n\n.menu-container--active {\n  @include floating-ui-wrapper-active();\n}\n\n.input .calcite-input__wrapper {\n  @apply mt-0;\n}\n\n:host([range][layout=\"vertical\"][scale=\"m\"]) .vertical-arrow-container {\n  inset-block-start: theme(\"spacing.6\");\n  padding-inline-start: theme(\"spacing.3\");\n\n  calcite-icon {\n    @apply h-3\n      w-3\n      min-w-0;\n  }\n}\n\n:host([range][layout=\"vertical\"][scale=\"l\"]) .vertical-arrow-container {\n  inset-block-start: theme(\"spacing.9\");\n  @apply px-3.5;\n}\n\n:host([range][layout=\"vertical\"][open]) {\n  .vertical-arrow-container {\n    @apply hidden;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n\n.assistive-text {\n  @apply sr-only;\n}\n\n@include base-component();\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: [Deprecated] Use `--calcite-icon-color`. Specifies the component's color. Defaults to current color.\n * @prop --calcite-icon-color: Specifies the component's color. Defaults to current color.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["Heading","props","children","HeadingTag","level","h","class","key","inRange","date","min","max","time","getTime","afterMin","Date","beforeMax","dateFromRange","beforeMin","afterMax","dateFromISO","iso8601","isEndDate","arguments","length","undefined","d","split","map","parseFloat","setFullYear","isNaN","Error","setEndOfDay","dateFromLocalizedString","value","localeData","separator","parts","string","day","month","year","datePartsFromLocalizedString","parseInt","parseDateString","parseCalendarYear","validDay","validMonth","validDate","validLength","filter","c","validYear","toString","processCalendarYear","mode","unitOrder","order","getOrder","values","part","numberStringFormatter","delocalize","indexOf","dateToISO","String","getMonth","padStart","getDate","getFullYear","datePartsFromISO","isoDate","dateParts","sameDate","d1","d2","toLowerCase","sort","a","b","getDaysDiff","date1","date2","setHours","DatePickerDay","proxyCustomElement","HTMLElement","onClick","this","disabled","calciteDaySelect","emit","keyDownHandler","event","isActivationKey","preventDefault","pointerOverHandler","calciteInternalDayHover","componentWillLoad","setUpLoadableComponent","parentDatePickerEl","closestElementCrossShadowBoundary","el","componentDidLoad","setComponentLoaded","setFocus","componentFocusable","focus","render","dayId","replaceAll","numberingSystem","lang","locale","numberFormatOptions","useGrouping","formattedDay","localize","dayLabel","dateTimeFormat","format","Host","toAriaBoolean","active","id","onKeyDown","role","tabIndex","InteractiveContainer","componentDidRender","updateHostInteraction","DatePickerMonth","defaultPrevented","isRTL","dir","addDays","addMonths","activeDate","setDate","activeFocus","disableActiveFocus","dayHover","target","calciteInternalDatePickerMouseOut","calciteInternalDatePickerHover","stopPropagation","daySelect","calciteInternalDatePickerSelect","pointerOutHandler","startOfWeek","weekStart","abbreviated","short","narrow","days","weekDays","scale","adjustedWeekDays","slice","curMonDays","getCurrentMonthDays","prevMonDays","getPreviousMonthDays","nextMonDays","getNextMonthDays","dayInWeek","getDayInWeek","currentMonth","ref","onFocusout","weekday","index","renderDateDay","step","nextDate","setMonth","calciteInternalDatePickerActiveDateChange","lastDate","startDay","getDay","i","push","num","endDay","betweenSelectedRange","startDate","endDate","isRangeHover","isSelected","selectedDate","isStartOfRange","isEndOfRange","hoverRange","end","_ref","isFocusedOnStart","isHoverInRange","endOfRange","highlighted","onCalciteDaySelect","onCalciteInternalDayHover","range","rangeEdge","rangeHover","selected","startOfRange","focused","start","isStart","insideRange","cond1","cond2","CSS","ICON","DatePickerMonthHeader","onYearKey","localizedYear","setYear","offset","onYearChange","onYearInput","commit","prevMonthClick","handleArrowClick","prevMonthDate","prevMonthKeydown","nextMonthClick","nextMonthDate","nextMonthKeydown","connectedCallback","setNextPrevMonthDates","renderContent","messages","activeMonth","months","localizedMonth","wide","formatCalendarYear","reverse","suffix","Fragment","prevMonth","href","tabindex","icon","getIconScale","text","headingLevel","inputmode","maxlength","minlength","onChange","onInput","pattern","yearInput","type","nextMonth","Number","getInRangeDate","parsedYear","_ref2","inRangeDate","DATE_PICKER_FORMAT_OPTIONS","dateStyle","translationCache","requestCache","async","getLocaleData","getSupportedLocale","fetch","getAssetPath","then","resp","json","catch","console","error","data","getValueAsDateRange","v","DatePicker","resetActiveDates","monthHeaderSelectChange","detail","activeRange","activeEndDate","activeStartDate","mostRecentRangeValue","monthActiveDateChange","monthHoverChange","valueAsDate","Array","isArray","proximitySelectionDisabled","startDiff","endDiff","monthMouseOutChange","monthDateChange","calciteDatePickerChange","getStartDate","getEndDate","setEndDate","setStartDate","activeDateWatcher","newActiveDate","valueAsDateWatcher","newValueAsDate","newActiveStartDate","newActiveEndDate","onMinChanged","minAsDate","onMaxChanged","maxAsDate","onMessagesChange","reset","connectLocalized","connectMessages","disconnectedCallback","disconnectLocalized","disconnectMessages","loadLocaleData","setUpMessages","getActiveDate","getActiveEndDate","minDate","maxDate","onBlur","renderCalendar","effectiveLocaleChange","updateMessages","effectiveLocale","valueHandler","isBrowser","getDateTimeFormat","onCalciteInternalDatePickerSelect","onCalciteInternalDatePickerActiveDateChange","onCalciteInternalDatePickerHover","onCalciteInternalDatePickerMouseOut","newEndDate","calciteDatePickerRangeChange","IDS","InputDatePicker","calciteInternalInputInputHandler","parsedValue","parseNumerals","formattedValue","formatNumerals","datePickerActiveDate","calciteInternalInputBlurHandler","commitValue","dialogId","guid","focusOnOpen","userChangedValue","openTransitionProp","valueAsDateChangedExternally","placeholderTextId","onInputWrapperPointerDown","currentOpenInput","focusedInput","onInputWrapperClick","endInput","startInput","position","currentTarget","getAttribute","composedPath","find","classList","contains","open","setFilteredPlacements","flipPlacements","filteredFlipPlacements","filterValidFlipPlacements","setTransitionEl","transitionEl","setStartInput","setEndInput","blurHandler","shouldFocusRangeEnd","shouldFocusRangeStart","submitForm","restoreInputFocus","startInputFocus","endInputFocus","setFloatingEl","floatingEl","connectFloatingUI","referenceEl","setStartWrapper","startWrapper","setReferenceEl","setEndWrapper","endWrapper","setDatePickerRef","datePickerEl","connectFocusTrap","focusTrapEl","focusTrapOptions","initialFocus","setReturnFocus","handleDateChange","setValue","localizeInputValues","handleDateRangeChange","setRangeValue","setInputValue","newValue","inputEl","_this","oldValue","oldValueIsArray","valueIsArray","newStartDate","newStartDateISO","getNormalizedDate","newEndDateISO","changeEvent","calciteInputDatePickerChange","commonDateSeparators","char","includes","numberKeys","numberFormatter","join","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","defaultMenuPlacement","handleFocusTrapDisabled","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","handleDisabledAndReadOnlyChange","valueWatcher","flipPlacementsHandler","reposition","openHandler","onToggleOpenCloseComponent","readOnly","overlayPositioningHandler","calciteDaySelectHandler","focusFirstTabbable","delayed","placement","overlayPositioning","handleDateTimeFormatChange","dateInRange","warnAboutInvalidValue","connectLabel","connectForm","Promise","all","disconnectLabel","disconnectForm","disconnectFloatingUI","onPointerDown","status","layout","onCalciteInputTextInput","onCalciteInternalInputTextBlur","onCalciteInternalInputTextFocus","placeholder","renderToggleIcon","chooseDate","FloatingCSS","animation","animationActive","messageOverrides","onCalciteDatePickerChange","onCalciteDatePickerRangeChange","flipRtl","HiddenFormInputSlot","component","validationMessage","Validation","validationIcon","message","formattingOptions","getSupportedNumberingSystem","Intl","DateTimeFormat","getDateFormatSupportedLocale","requestAnimationFrame","onLabelClick","onBeforeOpen","calciteInputDatePickerBeforeOpen","onOpen","onActivate","calciteInputDatePickerOpen","onBeforeClose","calciteInputDatePickerBeforeClose","onClose","calciteInputDatePickerClose","syncHiddenFormInput","input","dateAsISO","startValue","endValue","warn","isTwoDigitYear","twoDigitYear","currentYear","Math","floor","normalizeToCurrentCentury","iconCache","scaleToPx","s","m","l","generateIconId","size","name","numberLeadingName","charAt","firstNonDigitInPartPattern","partIndex","replace","match","toUpperCase","normalizeIconName","filled","substring","getCachedIconDataByKey","Icon","visible","waitUntilVisible","loadIconPathData","intersectionObserver","disconnect","pathData","textLabel","getElementDir","semantic","paths","concat","svg","fill","height","viewBox","width","xmlns","path","opacity","fetchIconProps","cachedIconKey","cachedIconData","fetchIcon","callback","createObserver","entries","forEach","entry","isIntersecting","rootMargin","observe","componentLangToMessageBundleCache","throwMessageFetchError","mergeMessages","defaultMessages","noop","fetchMessages","componentName","tagName","ok","getMessageBundle","defaultOnMessagesChange"],"sourceRoot":""}