import{bf as W,bg as z,bh as G,bi as k,bj as A,a9 as B,bk as C,bl as D,ad as E,bm as L}from"./index-CN4ACLGJ.js";import{r as q}from"./vec3f32-nZdmKIgz.js";import{n as F,h as H}from"./WGLContainer-1K6UH7eS.js";import{E as J}from"./Container-CfcOBiSO.js";class V extends F{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=W()}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const s of this.children)s.beforeRender(e)}prepareRenderPasses(e){const s=e.registerRenderPass({name:"overlay",brushes:[H.overlay],target:()=>this.children,drawPhase:J.MAP});return[...super.prepareRenderPasses(e),s]}_updateMatrices(e){const{state:s}=e,{id:a,size:c,pixelRatio:r,resolution:h,rotation:l,viewpoint:u,displayMat3:_}=s;if(this._viewStateId===a)return;const p=Math.PI/180*l,i=r*c[0],n=r*c[1];this._localOrigin=u.targetGeometry.clone();const{x:d,y:b}=this._localOrigin,M=z(d,s.spatialReference);this._localOrigin.x=M,this._localOrigin.y=b;const m=h*i,v=h*n,t=G(this._dvsMat3);k(t,t,_),A(t,t,B(i/2,n/2)),C(t,t,q(i/m,-n/v,1)),D(t,t,-p),this._viewStateId=a}_updateOverlays(e,s){const{state:a}=e,{rotation:c,spatialReference:r,worldScreenWidth:h,size:l,viewpoint:u}=a,_=this._localOrigin;let p,i=0;const n=E(r);if(n&&r.isWrappable){const d=l[0],b=l[1],M=180/Math.PI*c,m=Math.abs(Math.cos(M)),v=Math.abs(Math.sin(M)),t=Math.round(d*m+b*v),[R,x]=n.valid,o=L(r),{x:O,y:I}=u.targetGeometry,S=[O,I],g=[0,0];a.toScreen(g,S);const f=[0,0];let w;w=t>h?.5*h:.5*t;const P=Math.floor((O+.5*o)/o),$=R+P*o,j=x+P*o,y=[g[0]+w,0];a.toMap(f,y),f[0]>j&&(i=o),y[0]=g[0]-w,a.toMap(f,y),f[0]<$&&(i=-o),p={worldWidth:o,xBounds:[R,x]}}for(const d of s)d.updateDrawCoords(_,i,r,p)}}export{V as f};
