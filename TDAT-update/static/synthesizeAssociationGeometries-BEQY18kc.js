import{J as a,K as r,M as u,by as y,bF as d,bH as h,bG as l,P as x}from"./index-CN4ACLGJ.js";import{d as G}from"./Association-BK4M_ykF.js";let i=class extends y{constructor(o){super(o),this.maxGeometryCountExceeded=!1,this.associations=[]}};a([r({type:Boolean,json:{write:!0}})],i.prototype,"maxGeometryCountExceeded",void 0),a([r({type:[G],json:{write:!0}})],i.prototype,"associations",void 0),i=a([u("esri.rest.networks.support.AssociationGeometriesResult")],i);const $=i;async function A(o,s,e){const t=d(o),n={...s.toJSON(),f:"json"},c=h({...t.query,...n});e?e.method="post":e={method:"post"};const p=l(c,e),m=`${t.path}/synthesizeAssociationGeometries`;return x(m,p).then(f=>b(f,s.outSpatialReference))}function b(o,s){const{data:e}=o,t=$.fromJSON(e);if(s)for(const n of t.associations)n.geometry.spatialReference=s.clone();return t}export{A as synthesizeAssociationGeometries};
